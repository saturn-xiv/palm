# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from palm.rbac.v1 import rbac_pb2 as palm_dot_rbac_dot_v1_dot_rbac__pb2

GRPC_GENERATED_VERSION = '1.66.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in palm/rbac/v1/rbac_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class PolicyStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Has = channel.unary_unary(
                '/palm.rbac.v1.Policy/Has',
                request_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyHasRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.Can = channel.unary_unary(
                '/palm.rbac.v1.Policy/Can',
                request_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyCanRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.DeleteUser = channel.unary_unary(
                '/palm.rbac.v1.Policy/DeleteUser',
                request_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.Item.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.DeleteRole = channel.unary_unary(
                '/palm.rbac.v1.Policy/DeleteRole',
                request_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.Item.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetRolesForUser = channel.unary_unary(
                '/palm.rbac.v1.Policy/GetRolesForUser',
                request_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.Item.SerializeToString,
                response_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.FromString,
                _registered_method=True)
        self.GetImplicitRolesForUser = channel.unary_unary(
                '/palm.rbac.v1.Policy/GetImplicitRolesForUser',
                request_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.Item.SerializeToString,
                response_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.FromString,
                _registered_method=True)
        self.GetUsersForRole = channel.unary_unary(
                '/palm.rbac.v1.Policy/GetUsersForRole',
                request_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.Item.SerializeToString,
                response_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.FromString,
                _registered_method=True)
        self.GetImplicitUsersForRole = channel.unary_unary(
                '/palm.rbac.v1.Policy/GetImplicitUsersForRole',
                request_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.Item.SerializeToString,
                response_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.FromString,
                _registered_method=True)
        self.AddRolesForUser = channel.unary_unary(
                '/palm.rbac.v1.Policy/AddRolesForUser',
                request_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesForUserRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.DeleteRolesForUser = channel.unary_unary(
                '/palm.rbac.v1.Policy/DeleteRolesForUser',
                request_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesForUserRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetPermissionsForUser = channel.unary_unary(
                '/palm.rbac.v1.Policy/GetPermissionsForUser',
                request_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.Item.SerializeToString,
                response_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsResponse.FromString,
                _registered_method=True)
        self.GetImplicitPermissionsForUser = channel.unary_unary(
                '/palm.rbac.v1.Policy/GetImplicitPermissionsForUser',
                request_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.Item.SerializeToString,
                response_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsResponse.FromString,
                _registered_method=True)
        self.AddPermissionsForUser = channel.unary_unary(
                '/palm.rbac.v1.Policy/AddPermissionsForUser',
                request_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsForUserRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.DeletePermissionsForUser = channel.unary_unary(
                '/palm.rbac.v1.Policy/DeletePermissionsForUser',
                request_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsForUserRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetPermissionsForRole = channel.unary_unary(
                '/palm.rbac.v1.Policy/GetPermissionsForRole',
                request_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.Item.SerializeToString,
                response_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsResponse.FromString,
                _registered_method=True)
        self.GetImplicitPermissionsForRole = channel.unary_unary(
                '/palm.rbac.v1.Policy/GetImplicitPermissionsForRole',
                request_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.Item.SerializeToString,
                response_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsResponse.FromString,
                _registered_method=True)
        self.AddPermissionsForRole = channel.unary_unary(
                '/palm.rbac.v1.Policy/AddPermissionsForRole',
                request_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsForRoleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.DeletePermissionsForRole = channel.unary_unary(
                '/palm.rbac.v1.Policy/DeletePermissionsForRole',
                request_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsForRoleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)


class PolicyServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Has(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Can(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRolesForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImplicitRolesForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUsersForRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImplicitUsersForRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddRolesForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteRolesForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPermissionsForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImplicitPermissionsForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPermissionsForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePermissionsForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPermissionsForRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImplicitPermissionsForRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddPermissionsForRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeletePermissionsForRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PolicyServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Has': grpc.unary_unary_rpc_method_handler(
                    servicer.Has,
                    request_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyHasRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'Can': grpc.unary_unary_rpc_method_handler(
                    servicer.Can,
                    request_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyCanRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.Item.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteRole': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRole,
                    request_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.Item.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetRolesForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRolesForUser,
                    request_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.Item.FromString,
                    response_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.SerializeToString,
            ),
            'GetImplicitRolesForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImplicitRolesForUser,
                    request_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.Item.FromString,
                    response_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.SerializeToString,
            ),
            'GetUsersForRole': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsersForRole,
                    request_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.Item.FromString,
                    response_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.SerializeToString,
            ),
            'GetImplicitUsersForRole': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImplicitUsersForRole,
                    request_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.Item.FromString,
                    response_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.SerializeToString,
            ),
            'AddRolesForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AddRolesForUser,
                    request_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesForUserRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteRolesForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteRolesForUser,
                    request_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesForUserRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetPermissionsForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPermissionsForUser,
                    request_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.Item.FromString,
                    response_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsResponse.SerializeToString,
            ),
            'GetImplicitPermissionsForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImplicitPermissionsForUser,
                    request_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.Item.FromString,
                    response_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsResponse.SerializeToString,
            ),
            'AddPermissionsForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPermissionsForUser,
                    request_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsForUserRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeletePermissionsForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePermissionsForUser,
                    request_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsForUserRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetPermissionsForRole': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPermissionsForRole,
                    request_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.Item.FromString,
                    response_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsResponse.SerializeToString,
            ),
            'GetImplicitPermissionsForRole': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImplicitPermissionsForRole,
                    request_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.Item.FromString,
                    response_serializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsResponse.SerializeToString,
            ),
            'AddPermissionsForRole': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPermissionsForRole,
                    request_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsForRoleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeletePermissionsForRole': grpc.unary_unary_rpc_method_handler(
                    servicer.DeletePermissionsForRole,
                    request_deserializer=palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsForRoleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'palm.rbac.v1.Policy', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('palm.rbac.v1.Policy', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Policy(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Has(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/palm.rbac.v1.Policy/Has',
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyHasRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Can(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/palm.rbac.v1.Policy/Can',
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyCanRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/palm.rbac.v1.Policy/DeleteUser',
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.Item.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/palm.rbac.v1.Policy/DeleteRole',
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.Item.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRolesForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/palm.rbac.v1.Policy/GetRolesForUser',
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.Item.SerializeToString,
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetImplicitRolesForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/palm.rbac.v1.Policy/GetImplicitRolesForUser',
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.Item.SerializeToString,
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUsersForRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/palm.rbac.v1.Policy/GetUsersForRole',
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.Item.SerializeToString,
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetImplicitUsersForRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/palm.rbac.v1.Policy/GetImplicitUsersForRole',
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.Item.SerializeToString,
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddRolesForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/palm.rbac.v1.Policy/AddRolesForUser',
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesForUserRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteRolesForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/palm.rbac.v1.Policy/DeleteRolesForUser',
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesForUserRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPermissionsForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/palm.rbac.v1.Policy/GetPermissionsForUser',
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.Item.SerializeToString,
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetImplicitPermissionsForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/palm.rbac.v1.Policy/GetImplicitPermissionsForUser',
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyUsersResponse.Item.SerializeToString,
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddPermissionsForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/palm.rbac.v1.Policy/AddPermissionsForUser',
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsForUserRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeletePermissionsForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/palm.rbac.v1.Policy/DeletePermissionsForUser',
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsForUserRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPermissionsForRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/palm.rbac.v1.Policy/GetPermissionsForRole',
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.Item.SerializeToString,
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetImplicitPermissionsForRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/palm.rbac.v1.Policy/GetImplicitPermissionsForRole',
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyRolesResponse.Item.SerializeToString,
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddPermissionsForRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/palm.rbac.v1.Policy/AddPermissionsForRole',
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsForRoleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeletePermissionsForRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/palm.rbac.v1.Policy/DeletePermissionsForRole',
            palm_dot_rbac_dot_v1_dot_rbac__pb2.PolicyPermissionsForRoleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
