// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: lily.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_lily_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_lily_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/duration.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_lily_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_lily_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_lily_2eproto;
namespace palm {
namespace lily {
namespace v1 {
class Article;
struct ArticleDefaultTypeInternal;
extern ArticleDefaultTypeInternal _Article_default_instance_;
class Book;
struct BookDefaultTypeInternal;
extern BookDefaultTypeInternal _Book_default_instance_;
class File;
struct FileDefaultTypeInternal;
extern FileDefaultTypeInternal _File_default_instance_;
class Section;
struct SectionDefaultTypeInternal;
extern SectionDefaultTypeInternal _Section_default_instance_;
class ShowRequest;
struct ShowRequestDefaultTypeInternal;
extern ShowRequestDefaultTypeInternal _ShowRequest_default_instance_;
class ShowResponse;
struct ShowResponseDefaultTypeInternal;
extern ShowResponseDefaultTypeInternal _ShowResponse_default_instance_;
class Slideshow;
struct SlideshowDefaultTypeInternal;
extern SlideshowDefaultTypeInternal _Slideshow_default_instance_;
class StatusResponse;
struct StatusResponseDefaultTypeInternal;
extern StatusResponseDefaultTypeInternal _StatusResponse_default_instance_;
class TexBuildTask;
struct TexBuildTaskDefaultTypeInternal;
extern TexBuildTaskDefaultTypeInternal _TexBuildTask_default_instance_;
class TexBuildTask_AttachmentsEntry_DoNotUse;
struct TexBuildTask_AttachmentsEntry_DoNotUseDefaultTypeInternal;
extern TexBuildTask_AttachmentsEntry_DoNotUseDefaultTypeInternal _TexBuildTask_AttachmentsEntry_DoNotUse_default_instance_;
class TexRequest;
struct TexRequestDefaultTypeInternal;
extern TexRequestDefaultTypeInternal _TexRequest_default_instance_;
class TexRequest_AttachmentsEntry_DoNotUse;
struct TexRequest_AttachmentsEntry_DoNotUseDefaultTypeInternal;
extern TexRequest_AttachmentsEntry_DoNotUseDefaultTypeInternal _TexRequest_AttachmentsEntry_DoNotUse_default_instance_;
}  // namespace v1
}  // namespace lily
}  // namespace palm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace palm {
namespace lily {
namespace v1 {
enum Style : int {
  APA = 0,
  CMOS = 1,
  MLA = 2,
  Style_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Style_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Style_IsValid(int value);
extern const uint32_t Style_internal_data_[];
constexpr Style Style_MIN = static_cast<Style>(0);
constexpr Style Style_MAX = static_cast<Style>(2);
constexpr int Style_ARRAYSIZE = 2 + 1;
const ::google::protobuf::EnumDescriptor*
Style_descriptor();
template <typename T>
const std::string& Style_Name(T value) {
  static_assert(std::is_same<T, Style>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Style_Name().");
  return Style_Name(static_cast<Style>(value));
}
template <>
inline const std::string& Style_Name(Style value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Style_descriptor,
                                                 0, 2>(
      static_cast<int>(value));
}
inline bool Style_Parse(absl::string_view name, Style* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Style>(
      Style_descriptor(), name, value);
}
enum Format : int {
  Pdf = 0,
  Word = 1,
  Format_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  Format_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool Format_IsValid(int value);
extern const uint32_t Format_internal_data_[];
constexpr Format Format_MIN = static_cast<Format>(0);
constexpr Format Format_MAX = static_cast<Format>(1);
constexpr int Format_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
Format_descriptor();
template <typename T>
const std::string& Format_Name(T value) {
  static_assert(std::is_same<T, Format>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Format_Name().");
  return Format_Name(static_cast<Format>(value));
}
template <>
inline const std::string& Format_Name(Format value) {
  return ::google::protobuf::internal::NameOfDenseEnum<Format_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool Format_Parse(absl::string_view name, Format* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Format>(
      Format_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class TexRequest_AttachmentsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TexRequest_AttachmentsEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_BYTES> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TexRequest_AttachmentsEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>;
  TexRequest_AttachmentsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TexRequest_AttachmentsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TexRequest_AttachmentsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TexRequest_AttachmentsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TexRequest_AttachmentsEntry_DoNotUse*>(
        &_TexRequest_AttachmentsEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_lily_2eproto;
};
// -------------------------------------------------------------------

class TexBuildTask_AttachmentsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          TexBuildTask_AttachmentsEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_BYTES> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      TexBuildTask_AttachmentsEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>;
  TexBuildTask_AttachmentsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TexBuildTask_AttachmentsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit TexBuildTask_AttachmentsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const TexBuildTask_AttachmentsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const TexBuildTask_AttachmentsEntry_DoNotUse*>(
        &_TexBuildTask_AttachmentsEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_lily_2eproto;
};
// -------------------------------------------------------------------

class StatusResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:palm.lily.v1.StatusResponse) */ {
 public:
  inline StatusResponse() : StatusResponse(nullptr) {}
  ~StatusResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StatusResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StatusResponse(const StatusResponse& from) : StatusResponse(nullptr, from) {}
  inline StatusResponse(StatusResponse&& from) noexcept
      : StatusResponse(nullptr, std::move(from)) {}
  inline StatusResponse& operator=(const StatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StatusResponse& operator=(StatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StatusResponse* internal_default_instance() {
    return reinterpret_cast<const StatusResponse*>(
        &_StatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(StatusResponse& a, StatusResponse& b) { a.Swap(&b); }
  inline void Swap(StatusResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<StatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StatusResponse& from) { StatusResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StatusResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "palm.lily.v1.StatusResponse"; }

 protected:
  explicit StatusResponse(::google::protobuf::Arena* arena);
  StatusResponse(::google::protobuf::Arena* arena, const StatusResponse& from);
  StatusResponse(::google::protobuf::Arena* arena, StatusResponse&& from) noexcept
      : StatusResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kLogFieldNumber = 1,
    kSucceedFieldNumber = 2,
  };
  // string log = 1;
  void clear_log() ;
  const std::string& log() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_log(Arg_&& arg, Args_... args);
  std::string* mutable_log();
  PROTOBUF_NODISCARD std::string* release_log();
  void set_allocated_log(std::string* value);

  private:
  const std::string& _internal_log() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_log(
      const std::string& value);
  std::string* _internal_mutable_log();

  public:
  // bool succeed = 2;
  void clear_succeed() ;
  bool succeed() const;
  void set_succeed(bool value);

  private:
  bool _internal_succeed() const;
  void _internal_set_succeed(bool value);

  public:
  // @@protoc_insertion_point(class_scope:palm.lily.v1.StatusResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      39, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StatusResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StatusResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr log_;
    bool succeed_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lily_2eproto;
};
// -------------------------------------------------------------------

class Slideshow final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:palm.lily.v1.Slideshow) */ {
 public:
  inline Slideshow() : Slideshow(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Slideshow(
      ::google::protobuf::internal::ConstantInitialized);

  inline Slideshow(const Slideshow& from) : Slideshow(nullptr, from) {}
  inline Slideshow(Slideshow&& from) noexcept
      : Slideshow(nullptr, std::move(from)) {}
  inline Slideshow& operator=(const Slideshow& from) {
    CopyFrom(from);
    return *this;
  }
  inline Slideshow& operator=(Slideshow&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Slideshow& default_instance() {
    return *internal_default_instance();
  }
  static inline const Slideshow* internal_default_instance() {
    return reinterpret_cast<const Slideshow*>(
        &_Slideshow_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Slideshow& a, Slideshow& b) { a.Swap(&b); }
  inline void Swap(Slideshow* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Slideshow* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Slideshow* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<Slideshow>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Slideshow& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Slideshow& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "palm.lily.v1.Slideshow"; }

 protected:
  explicit Slideshow(::google::protobuf::Arena* arena);
  Slideshow(::google::protobuf::Arena* arena, const Slideshow& from);
  Slideshow(::google::protobuf::Arena* arena, Slideshow&& from) noexcept
      : Slideshow(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:palm.lily.v1.Slideshow)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Slideshow_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Slideshow& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lily_2eproto;
};
// -------------------------------------------------------------------

class ShowResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:palm.lily.v1.ShowResponse) */ {
 public:
  inline ShowResponse() : ShowResponse(nullptr) {}
  ~ShowResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ShowResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ShowResponse(const ShowResponse& from) : ShowResponse(nullptr, from) {}
  inline ShowResponse(ShowResponse&& from) noexcept
      : ShowResponse(nullptr, std::move(from)) {}
  inline ShowResponse& operator=(const ShowResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShowResponse& operator=(ShowResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShowResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShowResponse* internal_default_instance() {
    return reinterpret_cast<const ShowResponse*>(
        &_ShowResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(ShowResponse& a, ShowResponse& b) { a.Swap(&b); }
  inline void Swap(ShowResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShowResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShowResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ShowResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShowResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ShowResponse& from) { ShowResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ShowResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "palm.lily.v1.ShowResponse"; }

 protected:
  explicit ShowResponse(::google::protobuf::Arena* arena);
  ShowResponse(::google::protobuf::Arena* arena, const ShowResponse& from);
  ShowResponse(::google::protobuf::Arena* arena, ShowResponse&& from) noexcept
      : ShowResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUrlFieldNumber = 1,
  };
  // string url = 1;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // @@protoc_insertion_point(class_scope:palm.lily.v1.ShowResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      37, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ShowResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ShowResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr url_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lily_2eproto;
};
// -------------------------------------------------------------------

class Section final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:palm.lily.v1.Section) */ {
 public:
  inline Section() : Section(nullptr) {}
  ~Section() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Section(
      ::google::protobuf::internal::ConstantInitialized);

  inline Section(const Section& from) : Section(nullptr, from) {}
  inline Section(Section&& from) noexcept
      : Section(nullptr, std::move(from)) {}
  inline Section& operator=(const Section& from) {
    CopyFrom(from);
    return *this;
  }
  inline Section& operator=(Section&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Section& default_instance() {
    return *internal_default_instance();
  }
  static inline const Section* internal_default_instance() {
    return reinterpret_cast<const Section*>(
        &_Section_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Section& a, Section& b) { a.Swap(&b); }
  inline void Swap(Section* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Section* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Section* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Section>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Section& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Section& from) { Section::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Section* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "palm.lily.v1.Section"; }

 protected:
  explicit Section(::google::protobuf::Arena* arena);
  Section(::google::protobuf::Arena* arena, const Section& from);
  Section(::google::protobuf::Arena* arena, Section&& from) noexcept
      : Section(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .palm.lily.v1.Section items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::lily::v1::Section* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField<::palm::lily::v1::Section>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::palm::lily::v1::Section>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::lily::v1::Section>* _internal_mutable_items();
  public:
  const ::palm::lily::v1::Section& items(int index) const;
  ::palm::lily::v1::Section* add_items();
  const ::google::protobuf::RepeatedPtrField<::palm::lily::v1::Section>& items() const;
  // @@protoc_insertion_point(class_scope:palm.lily.v1.Section)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Section_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Section& from_msg);
    ::google::protobuf::RepeatedPtrField< ::palm::lily::v1::Section > items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lily_2eproto;
};
// -------------------------------------------------------------------

class File final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:palm.lily.v1.File) */ {
 public:
  inline File() : File(nullptr) {}
  ~File() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR File(
      ::google::protobuf::internal::ConstantInitialized);

  inline File(const File& from) : File(nullptr, from) {}
  inline File(File&& from) noexcept
      : File(nullptr, std::move(from)) {}
  inline File& operator=(const File& from) {
    CopyFrom(from);
    return *this;
  }
  inline File& operator=(File&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const File& default_instance() {
    return *internal_default_instance();
  }
  static inline const File* internal_default_instance() {
    return reinterpret_cast<const File*>(
        &_File_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(File& a, File& b) { a.Swap(&b); }
  inline void Swap(File* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(File* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  File* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<File>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const File& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const File& from) { File::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(File* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "palm.lily.v1.File"; }

 protected:
  explicit File(::google::protobuf::Arena* arena);
  File(::google::protobuf::Arena* arena, const File& from);
  File(::google::protobuf::Arena* arena, File&& from) noexcept
      : File(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kBucketFieldNumber = 1,
    kObjectFieldNumber = 2,
  };
  // string bucket = 1;
  void clear_bucket() ;
  const std::string& bucket() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bucket(Arg_&& arg, Args_... args);
  std::string* mutable_bucket();
  PROTOBUF_NODISCARD std::string* release_bucket();
  void set_allocated_bucket(std::string* value);

  private:
  const std::string& _internal_bucket() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bucket(
      const std::string& value);
  std::string* _internal_mutable_bucket();

  public:
  // string object = 2;
  void clear_object() ;
  const std::string& object() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_object(Arg_&& arg, Args_... args);
  std::string* mutable_object();
  PROTOBUF_NODISCARD std::string* release_object();
  void set_allocated_object(std::string* value);

  private:
  const std::string& _internal_object() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_object(
      const std::string& value);
  std::string* _internal_mutable_object();

  public:
  // @@protoc_insertion_point(class_scope:palm.lily.v1.File)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      38, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_File_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const File& from_msg);
    ::google::protobuf::internal::ArenaStringPtr bucket_;
    ::google::protobuf::internal::ArenaStringPtr object_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lily_2eproto;
};
// -------------------------------------------------------------------

class Book final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:palm.lily.v1.Book) */ {
 public:
  inline Book() : Book(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Book(
      ::google::protobuf::internal::ConstantInitialized);

  inline Book(const Book& from) : Book(nullptr, from) {}
  inline Book(Book&& from) noexcept
      : Book(nullptr, std::move(from)) {}
  inline Book& operator=(const Book& from) {
    CopyFrom(from);
    return *this;
  }
  inline Book& operator=(Book&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Book& default_instance() {
    return *internal_default_instance();
  }
  static inline const Book* internal_default_instance() {
    return reinterpret_cast<const Book*>(
        &_Book_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Book& a, Book& b) { a.Swap(&b); }
  inline void Swap(Book* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Book* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Book* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<Book>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Book& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Book& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "palm.lily.v1.Book"; }

 protected:
  explicit Book(::google::protobuf::Arena* arena);
  Book(::google::protobuf::Arena* arena, const Book& from);
  Book(::google::protobuf::Arena* arena, Book&& from) noexcept
      : Book(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:palm.lily.v1.Book)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Book_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Book& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lily_2eproto;
};
// -------------------------------------------------------------------

class Article final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:palm.lily.v1.Article) */ {
 public:
  inline Article() : Article(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Article(
      ::google::protobuf::internal::ConstantInitialized);

  inline Article(const Article& from) : Article(nullptr, from) {}
  inline Article(Article&& from) noexcept
      : Article(nullptr, std::move(from)) {}
  inline Article& operator=(const Article& from) {
    CopyFrom(from);
    return *this;
  }
  inline Article& operator=(Article&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Article& default_instance() {
    return *internal_default_instance();
  }
  static inline const Article* internal_default_instance() {
    return reinterpret_cast<const Article*>(
        &_Article_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Article& a, Article& b) { a.Swap(&b); }
  inline void Swap(Article* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Article* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Article* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<Article>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const Article& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const Article& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "palm.lily.v1.Article"; }

 protected:
  explicit Article(::google::protobuf::Arena* arena);
  Article(::google::protobuf::Arena* arena, const Article& from);
  Article(::google::protobuf::Arena* arena, Article&& from) noexcept
      : Article(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:palm.lily.v1.Article)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Article_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Article& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_lily_2eproto;
};
// -------------------------------------------------------------------

class TexRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:palm.lily.v1.TexRequest) */ {
 public:
  inline TexRequest() : TexRequest(nullptr) {}
  ~TexRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TexRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline TexRequest(const TexRequest& from) : TexRequest(nullptr, from) {}
  inline TexRequest(TexRequest&& from) noexcept
      : TexRequest(nullptr, std::move(from)) {}
  inline TexRequest& operator=(const TexRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline TexRequest& operator=(TexRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TexRequest& default_instance() {
    return *internal_default_instance();
  }
  enum PayloadCase {
    kBook = 1,
    kArticle = 2,
    kSlideshow = 3,
    PAYLOAD_NOT_SET = 0,
  };
  static inline const TexRequest* internal_default_instance() {
    return reinterpret_cast<const TexRequest*>(
        &_TexRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(TexRequest& a, TexRequest& b) { a.Swap(&b); }
  inline void Swap(TexRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TexRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TexRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TexRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TexRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TexRequest& from) { TexRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TexRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "palm.lily.v1.TexRequest"; }

 protected:
  explicit TexRequest(::google::protobuf::Arena* arena);
  TexRequest(::google::protobuf::Arena* arena, const TexRequest& from);
  TexRequest(::google::protobuf::Arena* arena, TexRequest&& from) noexcept
      : TexRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAttachmentsFieldNumber = 97,
    kStyleFieldNumber = 98,
    kFormatFieldNumber = 99,
    kBookFieldNumber = 1,
    kArticleFieldNumber = 2,
    kSlideshowFieldNumber = 3,
  };
  // map<string, bytes> attachments = 97;
  int attachments_size() const;
  private:
  int _internal_attachments_size() const;

  public:
  void clear_attachments() ;
  const ::google::protobuf::Map<std::string, std::string>& attachments() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_attachments();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_attachments() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_attachments();

  public:
  // .palm.lily.v1.Style style = 98;
  void clear_style() ;
  ::palm::lily::v1::Style style() const;
  void set_style(::palm::lily::v1::Style value);

  private:
  ::palm::lily::v1::Style _internal_style() const;
  void _internal_set_style(::palm::lily::v1::Style value);

  public:
  // .palm.lily.v1.Format format = 99;
  void clear_format() ;
  ::palm::lily::v1::Format format() const;
  void set_format(::palm::lily::v1::Format value);

  private:
  ::palm::lily::v1::Format _internal_format() const;
  void _internal_set_format(::palm::lily::v1::Format value);

  public:
  // .palm.lily.v1.Book book = 1;
  bool has_book() const;
  private:
  bool _internal_has_book() const;

  public:
  void clear_book() ;
  const ::palm::lily::v1::Book& book() const;
  PROTOBUF_NODISCARD ::palm::lily::v1::Book* release_book();
  ::palm::lily::v1::Book* mutable_book();
  void set_allocated_book(::palm::lily::v1::Book* value);
  void unsafe_arena_set_allocated_book(::palm::lily::v1::Book* value);
  ::palm::lily::v1::Book* unsafe_arena_release_book();

  private:
  const ::palm::lily::v1::Book& _internal_book() const;
  ::palm::lily::v1::Book* _internal_mutable_book();

  public:
  // .palm.lily.v1.Article article = 2;
  bool has_article() const;
  private:
  bool _internal_has_article() const;

  public:
  void clear_article() ;
  const ::palm::lily::v1::Article& article() const;
  PROTOBUF_NODISCARD ::palm::lily::v1::Article* release_article();
  ::palm::lily::v1::Article* mutable_article();
  void set_allocated_article(::palm::lily::v1::Article* value);
  void unsafe_arena_set_allocated_article(::palm::lily::v1::Article* value);
  ::palm::lily::v1::Article* unsafe_arena_release_article();

  private:
  const ::palm::lily::v1::Article& _internal_article() const;
  ::palm::lily::v1::Article* _internal_mutable_article();

  public:
  // .palm.lily.v1.Slideshow slideshow = 3;
  bool has_slideshow() const;
  private:
  bool _internal_has_slideshow() const;

  public:
  void clear_slideshow() ;
  const ::palm::lily::v1::Slideshow& slideshow() const;
  PROTOBUF_NODISCARD ::palm::lily::v1::Slideshow* release_slideshow();
  ::palm::lily::v1::Slideshow* mutable_slideshow();
  void set_allocated_slideshow(::palm::lily::v1::Slideshow* value);
  void unsafe_arena_set_allocated_slideshow(::palm::lily::v1::Slideshow* value);
  ::palm::lily::v1::Slideshow* unsafe_arena_release_slideshow();

  private:
  const ::palm::lily::v1::Slideshow& _internal_slideshow() const;
  ::palm::lily::v1::Slideshow* _internal_mutable_slideshow();

  public:
  void clear_Payload();
  PayloadCase Payload_case() const;
  // @@protoc_insertion_point(class_scope:palm.lily.v1.TexRequest)
 private:
  class _Internal;
  void set_has_book();
  void set_has_article();
  void set_has_slideshow();
  inline bool has_Payload() const;
  inline void clear_has_Payload();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 6, 4,
      43, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TexRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TexRequest& from_msg);
    ::google::protobuf::internal::MapField<TexRequest_AttachmentsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>
        attachments_;
    int style_;
    int format_;
    union PayloadUnion {
      constexpr PayloadUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::palm::lily::v1::Book* book_;
      ::palm::lily::v1::Article* article_;
      ::palm::lily::v1::Slideshow* slideshow_;
    } Payload_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lily_2eproto;
};
// -------------------------------------------------------------------

class TexBuildTask final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:palm.lily.v1.TexBuildTask) */ {
 public:
  inline TexBuildTask() : TexBuildTask(nullptr) {}
  ~TexBuildTask() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TexBuildTask(
      ::google::protobuf::internal::ConstantInitialized);

  inline TexBuildTask(const TexBuildTask& from) : TexBuildTask(nullptr, from) {}
  inline TexBuildTask(TexBuildTask&& from) noexcept
      : TexBuildTask(nullptr, std::move(from)) {}
  inline TexBuildTask& operator=(const TexBuildTask& from) {
    CopyFrom(from);
    return *this;
  }
  inline TexBuildTask& operator=(TexBuildTask&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TexBuildTask& default_instance() {
    return *internal_default_instance();
  }
  static inline const TexBuildTask* internal_default_instance() {
    return reinterpret_cast<const TexBuildTask*>(
        &_TexBuildTask_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(TexBuildTask& a, TexBuildTask& b) { a.Swap(&b); }
  inline void Swap(TexBuildTask* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TexBuildTask* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TexBuildTask* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TexBuildTask>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TexBuildTask& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TexBuildTask& from) { TexBuildTask::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TexBuildTask* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "palm.lily.v1.TexBuildTask"; }

 protected:
  explicit TexBuildTask(::google::protobuf::Arena* arena);
  TexBuildTask(::google::protobuf::Arena* arena, const TexBuildTask& from);
  TexBuildTask(::google::protobuf::Arena* arena, TexBuildTask&& from) noexcept
      : TexBuildTask(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAttachmentsFieldNumber = 2,
    kEntryFieldNumber = 1,
    kOutputFieldNumber = 9,
  };
  // map<string, bytes> attachments = 2;
  int attachments_size() const;
  private:
  int _internal_attachments_size() const;

  public:
  void clear_attachments() ;
  const ::google::protobuf::Map<std::string, std::string>& attachments() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_attachments();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_attachments() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_attachments();

  public:
  // string entry = 1;
  void clear_entry() ;
  const std::string& entry() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entry(Arg_&& arg, Args_... args);
  std::string* mutable_entry();
  PROTOBUF_NODISCARD std::string* release_entry();
  void set_allocated_entry(std::string* value);

  private:
  const std::string& _internal_entry() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entry(
      const std::string& value);
  std::string* _internal_mutable_entry();

  public:
  // .palm.lily.v1.File output = 9;
  bool has_output() const;
  void clear_output() ;
  const ::palm::lily::v1::File& output() const;
  PROTOBUF_NODISCARD ::palm::lily::v1::File* release_output();
  ::palm::lily::v1::File* mutable_output();
  void set_allocated_output(::palm::lily::v1::File* value);
  void unsafe_arena_set_allocated_output(::palm::lily::v1::File* value);
  ::palm::lily::v1::File* unsafe_arena_release_output();

  private:
  const ::palm::lily::v1::File& _internal_output() const;
  ::palm::lily::v1::File* _internal_mutable_output();

  public:
  // @@protoc_insertion_point(class_scope:palm.lily.v1.TexBuildTask)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 2,
      50, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TexBuildTask_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TexBuildTask& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::MapField<TexBuildTask_AttachmentsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES>
        attachments_;
    ::google::protobuf::internal::ArenaStringPtr entry_;
    ::palm::lily::v1::File* output_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lily_2eproto;
};
// -------------------------------------------------------------------

class ShowRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:palm.lily.v1.ShowRequest) */ {
 public:
  inline ShowRequest() : ShowRequest(nullptr) {}
  ~ShowRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ShowRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline ShowRequest(const ShowRequest& from) : ShowRequest(nullptr, from) {}
  inline ShowRequest(ShowRequest&& from) noexcept
      : ShowRequest(nullptr, std::move(from)) {}
  inline ShowRequest& operator=(const ShowRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ShowRequest& operator=(ShowRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ShowRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ShowRequest* internal_default_instance() {
    return reinterpret_cast<const ShowRequest*>(
        &_ShowRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ShowRequest& a, ShowRequest& b) { a.Swap(&b); }
  inline void Swap(ShowRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ShowRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ShowRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ShowRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ShowRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ShowRequest& from) { ShowRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ShowRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "palm.lily.v1.ShowRequest"; }

 protected:
  explicit ShowRequest(::google::protobuf::Arena* arena);
  ShowRequest(::google::protobuf::Arena* arena, const ShowRequest& from);
  ShowRequest(::google::protobuf::Arena* arena, ShowRequest&& from) noexcept
      : ShowRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFileFieldNumber = 1,
    kTtlFieldNumber = 9,
  };
  // .palm.lily.v1.File file = 1;
  bool has_file() const;
  void clear_file() ;
  const ::palm::lily::v1::File& file() const;
  PROTOBUF_NODISCARD ::palm::lily::v1::File* release_file();
  ::palm::lily::v1::File* mutable_file();
  void set_allocated_file(::palm::lily::v1::File* value);
  void unsafe_arena_set_allocated_file(::palm::lily::v1::File* value);
  ::palm::lily::v1::File* unsafe_arena_release_file();

  private:
  const ::palm::lily::v1::File& _internal_file() const;
  ::palm::lily::v1::File* _internal_mutable_file();

  public:
  // .google.protobuf.Duration ttl = 9;
  bool has_ttl() const;
  void clear_ttl() ;
  const ::google::protobuf::Duration& ttl() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_ttl();
  ::google::protobuf::Duration* mutable_ttl();
  void set_allocated_ttl(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_ttl(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_ttl();

  private:
  const ::google::protobuf::Duration& _internal_ttl() const;
  ::google::protobuf::Duration* _internal_mutable_ttl();

  public:
  // @@protoc_insertion_point(class_scope:palm.lily.v1.ShowRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ShowRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ShowRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::palm::lily::v1::File* file_;
    ::google::protobuf::Duration* ttl_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_lily_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// File

// string bucket = 1;
inline void File::clear_bucket() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bucket_.ClearToEmpty();
}
inline const std::string& File::bucket() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.lily.v1.File.bucket)
  return _internal_bucket();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void File::set_bucket(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bucket_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.lily.v1.File.bucket)
}
inline std::string* File::mutable_bucket() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bucket();
  // @@protoc_insertion_point(field_mutable:palm.lily.v1.File.bucket)
  return _s;
}
inline const std::string& File::_internal_bucket() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bucket_.Get();
}
inline void File::_internal_set_bucket(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bucket_.Set(value, GetArena());
}
inline std::string* File::_internal_mutable_bucket() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.bucket_.Mutable( GetArena());
}
inline std::string* File::release_bucket() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.lily.v1.File.bucket)
  return _impl_.bucket_.Release();
}
inline void File::set_allocated_bucket(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bucket_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bucket_.IsDefault()) {
          _impl_.bucket_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.lily.v1.File.bucket)
}

// string object = 2;
inline void File::clear_object() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_.ClearToEmpty();
}
inline const std::string& File::object() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.lily.v1.File.object)
  return _internal_object();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void File::set_object(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.lily.v1.File.object)
}
inline std::string* File::mutable_object() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_object();
  // @@protoc_insertion_point(field_mutable:palm.lily.v1.File.object)
  return _s;
}
inline const std::string& File::_internal_object() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.object_.Get();
}
inline void File::_internal_set_object(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_.Set(value, GetArena());
}
inline std::string* File::_internal_mutable_object() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.object_.Mutable( GetArena());
}
inline std::string* File::release_object() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.lily.v1.File.object)
  return _impl_.object_.Release();
}
inline void File::set_allocated_object(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.object_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.object_.IsDefault()) {
          _impl_.object_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.lily.v1.File.object)
}

// -------------------------------------------------------------------

// Book

// -------------------------------------------------------------------

// Slideshow

// -------------------------------------------------------------------

// Article

// -------------------------------------------------------------------

// Section

// repeated .palm.lily.v1.Section items = 1;
inline int Section::_internal_items_size() const {
  return _internal_items().size();
}
inline int Section::items_size() const {
  return _internal_items_size();
}
inline void Section::clear_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.items_.Clear();
}
inline ::palm::lily::v1::Section* Section::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.lily.v1.Section.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::lily::v1::Section>* Section::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.lily.v1.Section.items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_items();
}
inline const ::palm::lily::v1::Section& Section::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.lily.v1.Section.items)
  return _internal_items().Get(index);
}
inline ::palm::lily::v1::Section* Section::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::palm::lily::v1::Section* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.lily.v1.Section.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::lily::v1::Section>& Section::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.lily.v1.Section.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::lily::v1::Section>&
Section::_internal_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::lily::v1::Section>*
Section::_internal_mutable_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TexBuildTask

// string entry = 1;
inline void TexBuildTask::clear_entry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_.ClearToEmpty();
}
inline const std::string& TexBuildTask::entry() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.lily.v1.TexBuildTask.entry)
  return _internal_entry();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TexBuildTask::set_entry(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.lily.v1.TexBuildTask.entry)
}
inline std::string* TexBuildTask::mutable_entry() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entry();
  // @@protoc_insertion_point(field_mutable:palm.lily.v1.TexBuildTask.entry)
  return _s;
}
inline const std::string& TexBuildTask::_internal_entry() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.entry_.Get();
}
inline void TexBuildTask::_internal_set_entry(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_.Set(value, GetArena());
}
inline std::string* TexBuildTask::_internal_mutable_entry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.entry_.Mutable( GetArena());
}
inline std::string* TexBuildTask::release_entry() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.lily.v1.TexBuildTask.entry)
  return _impl_.entry_.Release();
}
inline void TexBuildTask::set_allocated_entry(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.entry_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.entry_.IsDefault()) {
          _impl_.entry_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.lily.v1.TexBuildTask.entry)
}

// map<string, bytes> attachments = 2;
inline int TexBuildTask::_internal_attachments_size() const {
  return _internal_attachments().size();
}
inline int TexBuildTask::attachments_size() const {
  return _internal_attachments_size();
}
inline void TexBuildTask::clear_attachments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attachments_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TexBuildTask::_internal_attachments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attachments_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TexBuildTask::attachments() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:palm.lily.v1.TexBuildTask.attachments)
  return _internal_attachments();
}
inline ::google::protobuf::Map<std::string, std::string>* TexBuildTask::_internal_mutable_attachments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.attachments_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* TexBuildTask::mutable_attachments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:palm.lily.v1.TexBuildTask.attachments)
  return _internal_mutable_attachments();
}

// .palm.lily.v1.File output = 9;
inline bool TexBuildTask::has_output() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.output_ != nullptr);
  return value;
}
inline void TexBuildTask::clear_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.output_ != nullptr) _impl_.output_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::lily::v1::File& TexBuildTask::_internal_output() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::palm::lily::v1::File* p = _impl_.output_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::lily::v1::File&>(::palm::lily::v1::_File_default_instance_);
}
inline const ::palm::lily::v1::File& TexBuildTask::output() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.lily.v1.TexBuildTask.output)
  return _internal_output();
}
inline void TexBuildTask::unsafe_arena_set_allocated_output(::palm::lily::v1::File* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.output_);
  }
  _impl_.output_ = reinterpret_cast<::palm::lily::v1::File*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.lily.v1.TexBuildTask.output)
}
inline ::palm::lily::v1::File* TexBuildTask::release_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::lily::v1::File* released = _impl_.output_;
  _impl_.output_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::lily::v1::File* TexBuildTask::unsafe_arena_release_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.lily.v1.TexBuildTask.output)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::lily::v1::File* temp = _impl_.output_;
  _impl_.output_ = nullptr;
  return temp;
}
inline ::palm::lily::v1::File* TexBuildTask::_internal_mutable_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.output_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::palm::lily::v1::File>(GetArena());
    _impl_.output_ = reinterpret_cast<::palm::lily::v1::File*>(p);
  }
  return _impl_.output_;
}
inline ::palm::lily::v1::File* TexBuildTask::mutable_output() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::palm::lily::v1::File* _msg = _internal_mutable_output();
  // @@protoc_insertion_point(field_mutable:palm.lily.v1.TexBuildTask.output)
  return _msg;
}
inline void TexBuildTask::set_allocated_output(::palm::lily::v1::File* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.output_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.output_ = reinterpret_cast<::palm::lily::v1::File*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.lily.v1.TexBuildTask.output)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// TexRequest

// .palm.lily.v1.Book book = 1;
inline bool TexRequest::has_book() const {
  return Payload_case() == kBook;
}
inline bool TexRequest::_internal_has_book() const {
  return Payload_case() == kBook;
}
inline void TexRequest::set_has_book() {
  _impl_._oneof_case_[0] = kBook;
}
inline void TexRequest::clear_book() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (Payload_case() == kBook) {
    if (GetArena() == nullptr) {
      delete _impl_.Payload_.book_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.Payload_.book_);
    }
    clear_has_Payload();
  }
}
inline ::palm::lily::v1::Book* TexRequest::release_book() {
  // @@protoc_insertion_point(field_release:palm.lily.v1.TexRequest.book)
  if (Payload_case() == kBook) {
    clear_has_Payload();
    auto* temp = _impl_.Payload_.book_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.Payload_.book_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::palm::lily::v1::Book& TexRequest::_internal_book() const {
  return Payload_case() == kBook ? *_impl_.Payload_.book_ : reinterpret_cast<::palm::lily::v1::Book&>(::palm::lily::v1::_Book_default_instance_);
}
inline const ::palm::lily::v1::Book& TexRequest::book() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.lily.v1.TexRequest.book)
  return _internal_book();
}
inline ::palm::lily::v1::Book* TexRequest::unsafe_arena_release_book() {
  // @@protoc_insertion_point(field_unsafe_arena_release:palm.lily.v1.TexRequest.book)
  if (Payload_case() == kBook) {
    clear_has_Payload();
    auto* temp = _impl_.Payload_.book_;
    _impl_.Payload_.book_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TexRequest::unsafe_arena_set_allocated_book(::palm::lily::v1::Book* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_Payload();
  if (value) {
    set_has_book();
    _impl_.Payload_.book_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.lily.v1.TexRequest.book)
}
inline ::palm::lily::v1::Book* TexRequest::_internal_mutable_book() {
  if (Payload_case() != kBook) {
    clear_Payload();
    set_has_book();
    _impl_.Payload_.book_ =
        ::google::protobuf::Message::DefaultConstruct<::palm::lily::v1::Book>(GetArena());
  }
  return _impl_.Payload_.book_;
}
inline ::palm::lily::v1::Book* TexRequest::mutable_book() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::lily::v1::Book* _msg = _internal_mutable_book();
  // @@protoc_insertion_point(field_mutable:palm.lily.v1.TexRequest.book)
  return _msg;
}

// .palm.lily.v1.Article article = 2;
inline bool TexRequest::has_article() const {
  return Payload_case() == kArticle;
}
inline bool TexRequest::_internal_has_article() const {
  return Payload_case() == kArticle;
}
inline void TexRequest::set_has_article() {
  _impl_._oneof_case_[0] = kArticle;
}
inline void TexRequest::clear_article() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (Payload_case() == kArticle) {
    if (GetArena() == nullptr) {
      delete _impl_.Payload_.article_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.Payload_.article_);
    }
    clear_has_Payload();
  }
}
inline ::palm::lily::v1::Article* TexRequest::release_article() {
  // @@protoc_insertion_point(field_release:palm.lily.v1.TexRequest.article)
  if (Payload_case() == kArticle) {
    clear_has_Payload();
    auto* temp = _impl_.Payload_.article_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.Payload_.article_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::palm::lily::v1::Article& TexRequest::_internal_article() const {
  return Payload_case() == kArticle ? *_impl_.Payload_.article_ : reinterpret_cast<::palm::lily::v1::Article&>(::palm::lily::v1::_Article_default_instance_);
}
inline const ::palm::lily::v1::Article& TexRequest::article() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.lily.v1.TexRequest.article)
  return _internal_article();
}
inline ::palm::lily::v1::Article* TexRequest::unsafe_arena_release_article() {
  // @@protoc_insertion_point(field_unsafe_arena_release:palm.lily.v1.TexRequest.article)
  if (Payload_case() == kArticle) {
    clear_has_Payload();
    auto* temp = _impl_.Payload_.article_;
    _impl_.Payload_.article_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TexRequest::unsafe_arena_set_allocated_article(::palm::lily::v1::Article* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_Payload();
  if (value) {
    set_has_article();
    _impl_.Payload_.article_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.lily.v1.TexRequest.article)
}
inline ::palm::lily::v1::Article* TexRequest::_internal_mutable_article() {
  if (Payload_case() != kArticle) {
    clear_Payload();
    set_has_article();
    _impl_.Payload_.article_ =
        ::google::protobuf::Message::DefaultConstruct<::palm::lily::v1::Article>(GetArena());
  }
  return _impl_.Payload_.article_;
}
inline ::palm::lily::v1::Article* TexRequest::mutable_article() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::lily::v1::Article* _msg = _internal_mutable_article();
  // @@protoc_insertion_point(field_mutable:palm.lily.v1.TexRequest.article)
  return _msg;
}

// .palm.lily.v1.Slideshow slideshow = 3;
inline bool TexRequest::has_slideshow() const {
  return Payload_case() == kSlideshow;
}
inline bool TexRequest::_internal_has_slideshow() const {
  return Payload_case() == kSlideshow;
}
inline void TexRequest::set_has_slideshow() {
  _impl_._oneof_case_[0] = kSlideshow;
}
inline void TexRequest::clear_slideshow() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (Payload_case() == kSlideshow) {
    if (GetArena() == nullptr) {
      delete _impl_.Payload_.slideshow_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.Payload_.slideshow_);
    }
    clear_has_Payload();
  }
}
inline ::palm::lily::v1::Slideshow* TexRequest::release_slideshow() {
  // @@protoc_insertion_point(field_release:palm.lily.v1.TexRequest.slideshow)
  if (Payload_case() == kSlideshow) {
    clear_has_Payload();
    auto* temp = _impl_.Payload_.slideshow_;
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.Payload_.slideshow_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::palm::lily::v1::Slideshow& TexRequest::_internal_slideshow() const {
  return Payload_case() == kSlideshow ? *_impl_.Payload_.slideshow_ : reinterpret_cast<::palm::lily::v1::Slideshow&>(::palm::lily::v1::_Slideshow_default_instance_);
}
inline const ::palm::lily::v1::Slideshow& TexRequest::slideshow() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.lily.v1.TexRequest.slideshow)
  return _internal_slideshow();
}
inline ::palm::lily::v1::Slideshow* TexRequest::unsafe_arena_release_slideshow() {
  // @@protoc_insertion_point(field_unsafe_arena_release:palm.lily.v1.TexRequest.slideshow)
  if (Payload_case() == kSlideshow) {
    clear_has_Payload();
    auto* temp = _impl_.Payload_.slideshow_;
    _impl_.Payload_.slideshow_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void TexRequest::unsafe_arena_set_allocated_slideshow(::palm::lily::v1::Slideshow* value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_Payload();
  if (value) {
    set_has_slideshow();
    _impl_.Payload_.slideshow_ = value;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.lily.v1.TexRequest.slideshow)
}
inline ::palm::lily::v1::Slideshow* TexRequest::_internal_mutable_slideshow() {
  if (Payload_case() != kSlideshow) {
    clear_Payload();
    set_has_slideshow();
    _impl_.Payload_.slideshow_ =
        ::google::protobuf::Message::DefaultConstruct<::palm::lily::v1::Slideshow>(GetArena());
  }
  return _impl_.Payload_.slideshow_;
}
inline ::palm::lily::v1::Slideshow* TexRequest::mutable_slideshow() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::lily::v1::Slideshow* _msg = _internal_mutable_slideshow();
  // @@protoc_insertion_point(field_mutable:palm.lily.v1.TexRequest.slideshow)
  return _msg;
}

// map<string, bytes> attachments = 97;
inline int TexRequest::_internal_attachments_size() const {
  return _internal_attachments().size();
}
inline int TexRequest::attachments_size() const {
  return _internal_attachments_size();
}
inline void TexRequest::clear_attachments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attachments_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& TexRequest::_internal_attachments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attachments_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& TexRequest::attachments() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:palm.lily.v1.TexRequest.attachments)
  return _internal_attachments();
}
inline ::google::protobuf::Map<std::string, std::string>* TexRequest::_internal_mutable_attachments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.attachments_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* TexRequest::mutable_attachments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:palm.lily.v1.TexRequest.attachments)
  return _internal_mutable_attachments();
}

// .palm.lily.v1.Style style = 98;
inline void TexRequest::clear_style() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.style_ = 0;
}
inline ::palm::lily::v1::Style TexRequest::style() const {
  // @@protoc_insertion_point(field_get:palm.lily.v1.TexRequest.style)
  return _internal_style();
}
inline void TexRequest::set_style(::palm::lily::v1::Style value) {
  _internal_set_style(value);
  // @@protoc_insertion_point(field_set:palm.lily.v1.TexRequest.style)
}
inline ::palm::lily::v1::Style TexRequest::_internal_style() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::palm::lily::v1::Style>(_impl_.style_);
}
inline void TexRequest::_internal_set_style(::palm::lily::v1::Style value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.style_ = value;
}

// .palm.lily.v1.Format format = 99;
inline void TexRequest::clear_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_ = 0;
}
inline ::palm::lily::v1::Format TexRequest::format() const {
  // @@protoc_insertion_point(field_get:palm.lily.v1.TexRequest.format)
  return _internal_format();
}
inline void TexRequest::set_format(::palm::lily::v1::Format value) {
  _internal_set_format(value);
  // @@protoc_insertion_point(field_set:palm.lily.v1.TexRequest.format)
}
inline ::palm::lily::v1::Format TexRequest::_internal_format() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::palm::lily::v1::Format>(_impl_.format_);
}
inline void TexRequest::_internal_set_format(::palm::lily::v1::Format value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_ = value;
}

inline bool TexRequest::has_Payload() const {
  return Payload_case() != PAYLOAD_NOT_SET;
}
inline void TexRequest::clear_has_Payload() {
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}
inline TexRequest::PayloadCase TexRequest::Payload_case() const {
  return TexRequest::PayloadCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// ShowRequest

// .palm.lily.v1.File file = 1;
inline bool ShowRequest::has_file() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.file_ != nullptr);
  return value;
}
inline void ShowRequest::clear_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.file_ != nullptr) _impl_.file_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::lily::v1::File& ShowRequest::_internal_file() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::palm::lily::v1::File* p = _impl_.file_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::lily::v1::File&>(::palm::lily::v1::_File_default_instance_);
}
inline const ::palm::lily::v1::File& ShowRequest::file() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.lily.v1.ShowRequest.file)
  return _internal_file();
}
inline void ShowRequest::unsafe_arena_set_allocated_file(::palm::lily::v1::File* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.file_);
  }
  _impl_.file_ = reinterpret_cast<::palm::lily::v1::File*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.lily.v1.ShowRequest.file)
}
inline ::palm::lily::v1::File* ShowRequest::release_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::lily::v1::File* released = _impl_.file_;
  _impl_.file_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::lily::v1::File* ShowRequest::unsafe_arena_release_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.lily.v1.ShowRequest.file)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::lily::v1::File* temp = _impl_.file_;
  _impl_.file_ = nullptr;
  return temp;
}
inline ::palm::lily::v1::File* ShowRequest::_internal_mutable_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.file_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::palm::lily::v1::File>(GetArena());
    _impl_.file_ = reinterpret_cast<::palm::lily::v1::File*>(p);
  }
  return _impl_.file_;
}
inline ::palm::lily::v1::File* ShowRequest::mutable_file() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::palm::lily::v1::File* _msg = _internal_mutable_file();
  // @@protoc_insertion_point(field_mutable:palm.lily.v1.ShowRequest.file)
  return _msg;
}
inline void ShowRequest::set_allocated_file(::palm::lily::v1::File* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.file_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.file_ = reinterpret_cast<::palm::lily::v1::File*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.lily.v1.ShowRequest.file)
}

// .google.protobuf.Duration ttl = 9;
inline bool ShowRequest::has_ttl() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ttl_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& ShowRequest::_internal_ttl() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Duration* p = _impl_.ttl_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& ShowRequest::ttl() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.lily.v1.ShowRequest.ttl)
  return _internal_ttl();
}
inline void ShowRequest::unsafe_arena_set_allocated_ttl(::google::protobuf::Duration* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ttl_);
  }
  _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.lily.v1.ShowRequest.ttl)
}
inline ::google::protobuf::Duration* ShowRequest::release_ttl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Duration* released = _impl_.ttl_;
  _impl_.ttl_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Duration* ShowRequest::unsafe_arena_release_ttl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.lily.v1.ShowRequest.ttl)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Duration* temp = _impl_.ttl_;
  _impl_.ttl_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* ShowRequest::_internal_mutable_ttl() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ttl_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Duration>(GetArena());
    _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.ttl_;
}
inline ::google::protobuf::Duration* ShowRequest::mutable_ttl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::google::protobuf::Duration* _msg = _internal_mutable_ttl();
  // @@protoc_insertion_point(field_mutable:palm.lily.v1.ShowRequest.ttl)
  return _msg;
}
inline void ShowRequest::set_allocated_ttl(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ttl_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.lily.v1.ShowRequest.ttl)
}

// -------------------------------------------------------------------

// ShowResponse

// string url = 1;
inline void ShowResponse::clear_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& ShowResponse::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.lily.v1.ShowResponse.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ShowResponse::set_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.lily.v1.ShowResponse.url)
}
inline std::string* ShowResponse::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:palm.lily.v1.ShowResponse.url)
  return _s;
}
inline const std::string& ShowResponse::_internal_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.url_.Get();
}
inline void ShowResponse::_internal_set_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.Set(value, GetArena());
}
inline std::string* ShowResponse::_internal_mutable_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* ShowResponse::release_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.lily.v1.ShowResponse.url)
  return _impl_.url_.Release();
}
inline void ShowResponse::set_allocated_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.lily.v1.ShowResponse.url)
}

// -------------------------------------------------------------------

// StatusResponse

// string log = 1;
inline void StatusResponse::clear_log() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_.ClearToEmpty();
}
inline const std::string& StatusResponse::log() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.lily.v1.StatusResponse.log)
  return _internal_log();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StatusResponse::set_log(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.lily.v1.StatusResponse.log)
}
inline std::string* StatusResponse::mutable_log() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_log();
  // @@protoc_insertion_point(field_mutable:palm.lily.v1.StatusResponse.log)
  return _s;
}
inline const std::string& StatusResponse::_internal_log() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.log_.Get();
}
inline void StatusResponse::_internal_set_log(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_.Set(value, GetArena());
}
inline std::string* StatusResponse::_internal_mutable_log() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.log_.Mutable( GetArena());
}
inline std::string* StatusResponse::release_log() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.lily.v1.StatusResponse.log)
  return _impl_.log_.Release();
}
inline void StatusResponse::set_allocated_log(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.log_.IsDefault()) {
          _impl_.log_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.lily.v1.StatusResponse.log)
}

// bool succeed = 2;
inline void StatusResponse::clear_succeed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.succeed_ = false;
}
inline bool StatusResponse::succeed() const {
  // @@protoc_insertion_point(field_get:palm.lily.v1.StatusResponse.succeed)
  return _internal_succeed();
}
inline void StatusResponse::set_succeed(bool value) {
  _internal_set_succeed(value);
  // @@protoc_insertion_point(field_set:palm.lily.v1.StatusResponse.succeed)
}
inline bool StatusResponse::_internal_succeed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.succeed_;
}
inline void StatusResponse::_internal_set_succeed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.succeed_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace lily
}  // namespace palm


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::palm::lily::v1::Style> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::lily::v1::Style>() {
  return ::palm::lily::v1::Style_descriptor();
}
template <>
struct is_proto_enum<::palm::lily::v1::Format> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::lily::v1::Format>() {
  return ::palm::lily::v1::Format_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_lily_2eproto_2epb_2eh
