// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: s3.proto
#ifndef GRPC_s3_2eproto__INCLUDED
#define GRPC_s3_2eproto__INCLUDED

#include "s3.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace palm {
namespace s3 {
namespace v1 {

class S3 final {
 public:
  static constexpr char const* service_full_name() {
    return "palm.s3.v1.S3";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status CreateBucket(::grpc::ClientContext* context, const ::palm::s3::v1::CreateBucketRequest& request, ::palm::s3::v1::CreateBucketResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::CreateBucketResponse>> AsyncCreateBucket(::grpc::ClientContext* context, const ::palm::s3::v1::CreateBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::CreateBucketResponse>>(AsyncCreateBucketRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::CreateBucketResponse>> PrepareAsyncCreateBucket(::grpc::ClientContext* context, const ::palm::s3::v1::CreateBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::CreateBucketResponse>>(PrepareAsyncCreateBucketRaw(context, request, cq));
    }
    virtual ::grpc::Status UploadObject(::grpc::ClientContext* context, const ::palm::s3::v1::UploadObjectRequest& request, ::palm::s3::v1::UploadObjectResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::UploadObjectResponse>> AsyncUploadObject(::grpc::ClientContext* context, const ::palm::s3::v1::UploadObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::UploadObjectResponse>>(AsyncUploadObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::UploadObjectResponse>> PrepareAsyncUploadObject(::grpc::ClientContext* context, const ::palm::s3::v1::UploadObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::UploadObjectResponse>>(PrepareAsyncUploadObjectRaw(context, request, cq));
    }
    virtual ::grpc::Status ObjectPermanentUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPermanentUrlRequest& request, ::palm::s3::v1::UrlResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::UrlResponse>> AsyncObjectPermanentUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPermanentUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::UrlResponse>>(AsyncObjectPermanentUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::UrlResponse>> PrepareAsyncObjectPermanentUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPermanentUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::UrlResponse>>(PrepareAsyncObjectPermanentUrlRaw(context, request, cq));
    }
    virtual ::grpc::Status ObjectPresignedUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPresignedUrlRequest& request, ::palm::s3::v1::UrlResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::UrlResponse>> AsyncObjectPresignedUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPresignedUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::UrlResponse>>(AsyncObjectPresignedUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::UrlResponse>> PrepareAsyncObjectPresignedUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPresignedUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::UrlResponse>>(PrepareAsyncObjectPresignedUrlRaw(context, request, cq));
    }
    virtual ::grpc::Status RemoveObject(::grpc::ClientContext* context, const ::palm::s3::v1::RemoveObjectRequest& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncRemoveObject(::grpc::ClientContext* context, const ::palm::s3::v1::RemoveObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncRemoveObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncRemoveObject(::grpc::ClientContext* context, const ::palm::s3::v1::RemoveObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncRemoveObjectRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void CreateBucket(::grpc::ClientContext* context, const ::palm::s3::v1::CreateBucketRequest* request, ::palm::s3::v1::CreateBucketResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void CreateBucket(::grpc::ClientContext* context, const ::palm::s3::v1::CreateBucketRequest* request, ::palm::s3::v1::CreateBucketResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void UploadObject(::grpc::ClientContext* context, const ::palm::s3::v1::UploadObjectRequest* request, ::palm::s3::v1::UploadObjectResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void UploadObject(::grpc::ClientContext* context, const ::palm::s3::v1::UploadObjectRequest* request, ::palm::s3::v1::UploadObjectResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ObjectPermanentUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPermanentUrlRequest* request, ::palm::s3::v1::UrlResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ObjectPermanentUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPermanentUrlRequest* request, ::palm::s3::v1::UrlResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ObjectPresignedUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPresignedUrlRequest* request, ::palm::s3::v1::UrlResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ObjectPresignedUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPresignedUrlRequest* request, ::palm::s3::v1::UrlResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RemoveObject(::grpc::ClientContext* context, const ::palm::s3::v1::RemoveObjectRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RemoveObject(::grpc::ClientContext* context, const ::palm::s3::v1::RemoveObjectRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::CreateBucketResponse>* AsyncCreateBucketRaw(::grpc::ClientContext* context, const ::palm::s3::v1::CreateBucketRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::CreateBucketResponse>* PrepareAsyncCreateBucketRaw(::grpc::ClientContext* context, const ::palm::s3::v1::CreateBucketRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::UploadObjectResponse>* AsyncUploadObjectRaw(::grpc::ClientContext* context, const ::palm::s3::v1::UploadObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::UploadObjectResponse>* PrepareAsyncUploadObjectRaw(::grpc::ClientContext* context, const ::palm::s3::v1::UploadObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::UrlResponse>* AsyncObjectPermanentUrlRaw(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPermanentUrlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::UrlResponse>* PrepareAsyncObjectPermanentUrlRaw(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPermanentUrlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::UrlResponse>* AsyncObjectPresignedUrlRaw(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPresignedUrlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::palm::s3::v1::UrlResponse>* PrepareAsyncObjectPresignedUrlRaw(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPresignedUrlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncRemoveObjectRaw(::grpc::ClientContext* context, const ::palm::s3::v1::RemoveObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncRemoveObjectRaw(::grpc::ClientContext* context, const ::palm::s3::v1::RemoveObjectRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status CreateBucket(::grpc::ClientContext* context, const ::palm::s3::v1::CreateBucketRequest& request, ::palm::s3::v1::CreateBucketResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::CreateBucketResponse>> AsyncCreateBucket(::grpc::ClientContext* context, const ::palm::s3::v1::CreateBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::CreateBucketResponse>>(AsyncCreateBucketRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::CreateBucketResponse>> PrepareAsyncCreateBucket(::grpc::ClientContext* context, const ::palm::s3::v1::CreateBucketRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::CreateBucketResponse>>(PrepareAsyncCreateBucketRaw(context, request, cq));
    }
    ::grpc::Status UploadObject(::grpc::ClientContext* context, const ::palm::s3::v1::UploadObjectRequest& request, ::palm::s3::v1::UploadObjectResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::UploadObjectResponse>> AsyncUploadObject(::grpc::ClientContext* context, const ::palm::s3::v1::UploadObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::UploadObjectResponse>>(AsyncUploadObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::UploadObjectResponse>> PrepareAsyncUploadObject(::grpc::ClientContext* context, const ::palm::s3::v1::UploadObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::UploadObjectResponse>>(PrepareAsyncUploadObjectRaw(context, request, cq));
    }
    ::grpc::Status ObjectPermanentUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPermanentUrlRequest& request, ::palm::s3::v1::UrlResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::UrlResponse>> AsyncObjectPermanentUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPermanentUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::UrlResponse>>(AsyncObjectPermanentUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::UrlResponse>> PrepareAsyncObjectPermanentUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPermanentUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::UrlResponse>>(PrepareAsyncObjectPermanentUrlRaw(context, request, cq));
    }
    ::grpc::Status ObjectPresignedUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPresignedUrlRequest& request, ::palm::s3::v1::UrlResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::UrlResponse>> AsyncObjectPresignedUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPresignedUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::UrlResponse>>(AsyncObjectPresignedUrlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::UrlResponse>> PrepareAsyncObjectPresignedUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPresignedUrlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::UrlResponse>>(PrepareAsyncObjectPresignedUrlRaw(context, request, cq));
    }
    ::grpc::Status RemoveObject(::grpc::ClientContext* context, const ::palm::s3::v1::RemoveObjectRequest& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncRemoveObject(::grpc::ClientContext* context, const ::palm::s3::v1::RemoveObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncRemoveObjectRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncRemoveObject(::grpc::ClientContext* context, const ::palm::s3::v1::RemoveObjectRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncRemoveObjectRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void CreateBucket(::grpc::ClientContext* context, const ::palm::s3::v1::CreateBucketRequest* request, ::palm::s3::v1::CreateBucketResponse* response, std::function<void(::grpc::Status)>) override;
      void CreateBucket(::grpc::ClientContext* context, const ::palm::s3::v1::CreateBucketRequest* request, ::palm::s3::v1::CreateBucketResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void UploadObject(::grpc::ClientContext* context, const ::palm::s3::v1::UploadObjectRequest* request, ::palm::s3::v1::UploadObjectResponse* response, std::function<void(::grpc::Status)>) override;
      void UploadObject(::grpc::ClientContext* context, const ::palm::s3::v1::UploadObjectRequest* request, ::palm::s3::v1::UploadObjectResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ObjectPermanentUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPermanentUrlRequest* request, ::palm::s3::v1::UrlResponse* response, std::function<void(::grpc::Status)>) override;
      void ObjectPermanentUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPermanentUrlRequest* request, ::palm::s3::v1::UrlResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ObjectPresignedUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPresignedUrlRequest* request, ::palm::s3::v1::UrlResponse* response, std::function<void(::grpc::Status)>) override;
      void ObjectPresignedUrl(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPresignedUrlRequest* request, ::palm::s3::v1::UrlResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RemoveObject(::grpc::ClientContext* context, const ::palm::s3::v1::RemoveObjectRequest* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void RemoveObject(::grpc::ClientContext* context, const ::palm::s3::v1::RemoveObjectRequest* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::CreateBucketResponse>* AsyncCreateBucketRaw(::grpc::ClientContext* context, const ::palm::s3::v1::CreateBucketRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::CreateBucketResponse>* PrepareAsyncCreateBucketRaw(::grpc::ClientContext* context, const ::palm::s3::v1::CreateBucketRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::UploadObjectResponse>* AsyncUploadObjectRaw(::grpc::ClientContext* context, const ::palm::s3::v1::UploadObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::UploadObjectResponse>* PrepareAsyncUploadObjectRaw(::grpc::ClientContext* context, const ::palm::s3::v1::UploadObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::UrlResponse>* AsyncObjectPermanentUrlRaw(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPermanentUrlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::UrlResponse>* PrepareAsyncObjectPermanentUrlRaw(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPermanentUrlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::UrlResponse>* AsyncObjectPresignedUrlRaw(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPresignedUrlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::palm::s3::v1::UrlResponse>* PrepareAsyncObjectPresignedUrlRaw(::grpc::ClientContext* context, const ::palm::s3::v1::ObjectPresignedUrlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncRemoveObjectRaw(::grpc::ClientContext* context, const ::palm::s3::v1::RemoveObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncRemoveObjectRaw(::grpc::ClientContext* context, const ::palm::s3::v1::RemoveObjectRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_CreateBucket_;
    const ::grpc::internal::RpcMethod rpcmethod_UploadObject_;
    const ::grpc::internal::RpcMethod rpcmethod_ObjectPermanentUrl_;
    const ::grpc::internal::RpcMethod rpcmethod_ObjectPresignedUrl_;
    const ::grpc::internal::RpcMethod rpcmethod_RemoveObject_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status CreateBucket(::grpc::ServerContext* context, const ::palm::s3::v1::CreateBucketRequest* request, ::palm::s3::v1::CreateBucketResponse* response);
    virtual ::grpc::Status UploadObject(::grpc::ServerContext* context, const ::palm::s3::v1::UploadObjectRequest* request, ::palm::s3::v1::UploadObjectResponse* response);
    virtual ::grpc::Status ObjectPermanentUrl(::grpc::ServerContext* context, const ::palm::s3::v1::ObjectPermanentUrlRequest* request, ::palm::s3::v1::UrlResponse* response);
    virtual ::grpc::Status ObjectPresignedUrl(::grpc::ServerContext* context, const ::palm::s3::v1::ObjectPresignedUrlRequest* request, ::palm::s3::v1::UrlResponse* response);
    virtual ::grpc::Status RemoveObject(::grpc::ServerContext* context, const ::palm::s3::v1::RemoveObjectRequest* request, ::google::protobuf::Empty* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateBucket() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_CreateBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateBucket(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::CreateBucketRequest* /*request*/, ::palm::s3::v1::CreateBucketResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateBucket(::grpc::ServerContext* context, ::palm::s3::v1::CreateBucketRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::s3::v1::CreateBucketResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_UploadObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_UploadObject() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_UploadObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadObject(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::UploadObjectRequest* /*request*/, ::palm::s3::v1::UploadObjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUploadObject(::grpc::ServerContext* context, ::palm::s3::v1::UploadObjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::s3::v1::UploadObjectResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ObjectPermanentUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ObjectPermanentUrl() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ObjectPermanentUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ObjectPermanentUrl(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::ObjectPermanentUrlRequest* /*request*/, ::palm::s3::v1::UrlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestObjectPermanentUrl(::grpc::ServerContext* context, ::palm::s3::v1::ObjectPermanentUrlRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::s3::v1::UrlResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ObjectPresignedUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ObjectPresignedUrl() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_ObjectPresignedUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ObjectPresignedUrl(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::ObjectPresignedUrlRequest* /*request*/, ::palm::s3::v1::UrlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestObjectPresignedUrl(::grpc::ServerContext* context, ::palm::s3::v1::ObjectPresignedUrlRequest* request, ::grpc::ServerAsyncResponseWriter< ::palm::s3::v1::UrlResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RemoveObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RemoveObject() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_RemoveObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveObject(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::RemoveObjectRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveObject(::grpc::ServerContext* context, ::palm::s3::v1::RemoveObjectRequest* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_CreateBucket<WithAsyncMethod_UploadObject<WithAsyncMethod_ObjectPermanentUrl<WithAsyncMethod_ObjectPresignedUrl<WithAsyncMethod_RemoveObject<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_CreateBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_CreateBucket() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::s3::v1::CreateBucketRequest, ::palm::s3::v1::CreateBucketResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::s3::v1::CreateBucketRequest* request, ::palm::s3::v1::CreateBucketResponse* response) { return this->CreateBucket(context, request, response); }));}
    void SetMessageAllocatorFor_CreateBucket(
        ::grpc::MessageAllocator< ::palm::s3::v1::CreateBucketRequest, ::palm::s3::v1::CreateBucketResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::s3::v1::CreateBucketRequest, ::palm::s3::v1::CreateBucketResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_CreateBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateBucket(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::CreateBucketRequest* /*request*/, ::palm::s3::v1::CreateBucketResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateBucket(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::s3::v1::CreateBucketRequest* /*request*/, ::palm::s3::v1::CreateBucketResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_UploadObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_UploadObject() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::s3::v1::UploadObjectRequest, ::palm::s3::v1::UploadObjectResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::s3::v1::UploadObjectRequest* request, ::palm::s3::v1::UploadObjectResponse* response) { return this->UploadObject(context, request, response); }));}
    void SetMessageAllocatorFor_UploadObject(
        ::grpc::MessageAllocator< ::palm::s3::v1::UploadObjectRequest, ::palm::s3::v1::UploadObjectResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::s3::v1::UploadObjectRequest, ::palm::s3::v1::UploadObjectResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_UploadObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadObject(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::UploadObjectRequest* /*request*/, ::palm::s3::v1::UploadObjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UploadObject(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::s3::v1::UploadObjectRequest* /*request*/, ::palm::s3::v1::UploadObjectResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ObjectPermanentUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ObjectPermanentUrl() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::s3::v1::ObjectPermanentUrlRequest, ::palm::s3::v1::UrlResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::s3::v1::ObjectPermanentUrlRequest* request, ::palm::s3::v1::UrlResponse* response) { return this->ObjectPermanentUrl(context, request, response); }));}
    void SetMessageAllocatorFor_ObjectPermanentUrl(
        ::grpc::MessageAllocator< ::palm::s3::v1::ObjectPermanentUrlRequest, ::palm::s3::v1::UrlResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::s3::v1::ObjectPermanentUrlRequest, ::palm::s3::v1::UrlResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ObjectPermanentUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ObjectPermanentUrl(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::ObjectPermanentUrlRequest* /*request*/, ::palm::s3::v1::UrlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ObjectPermanentUrl(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::s3::v1::ObjectPermanentUrlRequest* /*request*/, ::palm::s3::v1::UrlResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ObjectPresignedUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ObjectPresignedUrl() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::s3::v1::ObjectPresignedUrlRequest, ::palm::s3::v1::UrlResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::s3::v1::ObjectPresignedUrlRequest* request, ::palm::s3::v1::UrlResponse* response) { return this->ObjectPresignedUrl(context, request, response); }));}
    void SetMessageAllocatorFor_ObjectPresignedUrl(
        ::grpc::MessageAllocator< ::palm::s3::v1::ObjectPresignedUrlRequest, ::palm::s3::v1::UrlResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::s3::v1::ObjectPresignedUrlRequest, ::palm::s3::v1::UrlResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ObjectPresignedUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ObjectPresignedUrl(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::ObjectPresignedUrlRequest* /*request*/, ::palm::s3::v1::UrlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ObjectPresignedUrl(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::s3::v1::ObjectPresignedUrlRequest* /*request*/, ::palm::s3::v1::UrlResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RemoveObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RemoveObject() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::palm::s3::v1::RemoveObjectRequest, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::palm::s3::v1::RemoveObjectRequest* request, ::google::protobuf::Empty* response) { return this->RemoveObject(context, request, response); }));}
    void SetMessageAllocatorFor_RemoveObject(
        ::grpc::MessageAllocator< ::palm::s3::v1::RemoveObjectRequest, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::palm::s3::v1::RemoveObjectRequest, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RemoveObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveObject(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::RemoveObjectRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveObject(
      ::grpc::CallbackServerContext* /*context*/, const ::palm::s3::v1::RemoveObjectRequest* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_CreateBucket<WithCallbackMethod_UploadObject<WithCallbackMethod_ObjectPermanentUrl<WithCallbackMethod_ObjectPresignedUrl<WithCallbackMethod_RemoveObject<Service > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_CreateBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateBucket() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_CreateBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateBucket(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::CreateBucketRequest* /*request*/, ::palm::s3::v1::CreateBucketResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_UploadObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_UploadObject() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_UploadObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadObject(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::UploadObjectRequest* /*request*/, ::palm::s3::v1::UploadObjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ObjectPermanentUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ObjectPermanentUrl() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ObjectPermanentUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ObjectPermanentUrl(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::ObjectPermanentUrlRequest* /*request*/, ::palm::s3::v1::UrlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ObjectPresignedUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ObjectPresignedUrl() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_ObjectPresignedUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ObjectPresignedUrl(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::ObjectPresignedUrlRequest* /*request*/, ::palm::s3::v1::UrlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RemoveObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RemoveObject() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_RemoveObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveObject(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::RemoveObjectRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateBucket() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_CreateBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateBucket(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::CreateBucketRequest* /*request*/, ::palm::s3::v1::CreateBucketResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateBucket(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_UploadObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_UploadObject() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_UploadObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadObject(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::UploadObjectRequest* /*request*/, ::palm::s3::v1::UploadObjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestUploadObject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ObjectPermanentUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ObjectPermanentUrl() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ObjectPermanentUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ObjectPermanentUrl(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::ObjectPermanentUrlRequest* /*request*/, ::palm::s3::v1::UrlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestObjectPermanentUrl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ObjectPresignedUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ObjectPresignedUrl() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_ObjectPresignedUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ObjectPresignedUrl(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::ObjectPresignedUrlRequest* /*request*/, ::palm::s3::v1::UrlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestObjectPresignedUrl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RemoveObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RemoveObject() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_RemoveObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveObject(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::RemoveObjectRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRemoveObject(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_CreateBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_CreateBucket() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateBucket(context, request, response); }));
    }
    ~WithRawCallbackMethod_CreateBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateBucket(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::CreateBucketRequest* /*request*/, ::palm::s3::v1::CreateBucketResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* CreateBucket(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_UploadObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_UploadObject() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->UploadObject(context, request, response); }));
    }
    ~WithRawCallbackMethod_UploadObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status UploadObject(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::UploadObjectRequest* /*request*/, ::palm::s3::v1::UploadObjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* UploadObject(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ObjectPermanentUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ObjectPermanentUrl() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ObjectPermanentUrl(context, request, response); }));
    }
    ~WithRawCallbackMethod_ObjectPermanentUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ObjectPermanentUrl(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::ObjectPermanentUrlRequest* /*request*/, ::palm::s3::v1::UrlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ObjectPermanentUrl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ObjectPresignedUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ObjectPresignedUrl() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ObjectPresignedUrl(context, request, response); }));
    }
    ~WithRawCallbackMethod_ObjectPresignedUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ObjectPresignedUrl(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::ObjectPresignedUrlRequest* /*request*/, ::palm::s3::v1::UrlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ObjectPresignedUrl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RemoveObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RemoveObject() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RemoveObject(context, request, response); }));
    }
    ~WithRawCallbackMethod_RemoveObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RemoveObject(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::RemoveObjectRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RemoveObject(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateBucket : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateBucket() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::s3::v1::CreateBucketRequest, ::palm::s3::v1::CreateBucketResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::s3::v1::CreateBucketRequest, ::palm::s3::v1::CreateBucketResponse>* streamer) {
                       return this->StreamedCreateBucket(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateBucket() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateBucket(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::CreateBucketRequest* /*request*/, ::palm::s3::v1::CreateBucketResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateBucket(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::s3::v1::CreateBucketRequest,::palm::s3::v1::CreateBucketResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_UploadObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_UploadObject() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::s3::v1::UploadObjectRequest, ::palm::s3::v1::UploadObjectResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::s3::v1::UploadObjectRequest, ::palm::s3::v1::UploadObjectResponse>* streamer) {
                       return this->StreamedUploadObject(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_UploadObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status UploadObject(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::UploadObjectRequest* /*request*/, ::palm::s3::v1::UploadObjectResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedUploadObject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::s3::v1::UploadObjectRequest,::palm::s3::v1::UploadObjectResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ObjectPermanentUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ObjectPermanentUrl() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::s3::v1::ObjectPermanentUrlRequest, ::palm::s3::v1::UrlResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::s3::v1::ObjectPermanentUrlRequest, ::palm::s3::v1::UrlResponse>* streamer) {
                       return this->StreamedObjectPermanentUrl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ObjectPermanentUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ObjectPermanentUrl(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::ObjectPermanentUrlRequest* /*request*/, ::palm::s3::v1::UrlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedObjectPermanentUrl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::s3::v1::ObjectPermanentUrlRequest,::palm::s3::v1::UrlResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ObjectPresignedUrl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ObjectPresignedUrl() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::s3::v1::ObjectPresignedUrlRequest, ::palm::s3::v1::UrlResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::s3::v1::ObjectPresignedUrlRequest, ::palm::s3::v1::UrlResponse>* streamer) {
                       return this->StreamedObjectPresignedUrl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ObjectPresignedUrl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ObjectPresignedUrl(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::ObjectPresignedUrlRequest* /*request*/, ::palm::s3::v1::UrlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedObjectPresignedUrl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::s3::v1::ObjectPresignedUrlRequest,::palm::s3::v1::UrlResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RemoveObject : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RemoveObject() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::palm::s3::v1::RemoveObjectRequest, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::palm::s3::v1::RemoveObjectRequest, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedRemoveObject(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RemoveObject() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RemoveObject(::grpc::ServerContext* /*context*/, const ::palm::s3::v1::RemoveObjectRequest* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRemoveObject(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::palm::s3::v1::RemoveObjectRequest,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_CreateBucket<WithStreamedUnaryMethod_UploadObject<WithStreamedUnaryMethod_ObjectPermanentUrl<WithStreamedUnaryMethod_ObjectPresignedUrl<WithStreamedUnaryMethod_RemoveObject<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_CreateBucket<WithStreamedUnaryMethod_UploadObject<WithStreamedUnaryMethod_ObjectPermanentUrl<WithStreamedUnaryMethod_ObjectPresignedUrl<WithStreamedUnaryMethod_RemoveObject<Service > > > > > StreamedService;
};

}  // namespace v1
}  // namespace s3
}  // namespace palm


#endif  // GRPC_s3_2eproto__INCLUDED
