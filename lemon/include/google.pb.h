// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: google.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_google_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_google_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_google_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_google_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_google_2eproto;
namespace palm {
namespace google {
namespace v1 {
class Oauth2AuthCodeURLRequest;
struct Oauth2AuthCodeURLRequestDefaultTypeInternal;
extern Oauth2AuthCodeURLRequestDefaultTypeInternal _Oauth2AuthCodeURLRequest_default_instance_;
class Oauth2AuthCodeURLResponse;
struct Oauth2AuthCodeURLResponseDefaultTypeInternal;
extern Oauth2AuthCodeURLResponseDefaultTypeInternal _Oauth2AuthCodeURLResponse_default_instance_;
class Oauth2SignInRequest;
struct Oauth2SignInRequestDefaultTypeInternal;
extern Oauth2SignInRequestDefaultTypeInternal _Oauth2SignInRequest_default_instance_;
class Oauth2SignInResponse;
struct Oauth2SignInResponseDefaultTypeInternal;
extern Oauth2SignInResponseDefaultTypeInternal _Oauth2SignInResponse_default_instance_;
class Oauth2SignInResponse_OpenId;
struct Oauth2SignInResponse_OpenIdDefaultTypeInternal;
extern Oauth2SignInResponse_OpenIdDefaultTypeInternal _Oauth2SignInResponse_OpenId_default_instance_;
}  // namespace v1
}  // namespace google
}  // namespace palm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace palm {
namespace google {
namespace v1 {

// ===================================================================


// -------------------------------------------------------------------

class Oauth2SignInResponse_OpenId final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:palm.google.v1.Oauth2SignInResponse.OpenId) */ {
 public:
  inline Oauth2SignInResponse_OpenId() : Oauth2SignInResponse_OpenId(nullptr) {}
  ~Oauth2SignInResponse_OpenId() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Oauth2SignInResponse_OpenId(
      ::google::protobuf::internal::ConstantInitialized);

  inline Oauth2SignInResponse_OpenId(const Oauth2SignInResponse_OpenId& from) : Oauth2SignInResponse_OpenId(nullptr, from) {}
  inline Oauth2SignInResponse_OpenId(Oauth2SignInResponse_OpenId&& from) noexcept
      : Oauth2SignInResponse_OpenId(nullptr, std::move(from)) {}
  inline Oauth2SignInResponse_OpenId& operator=(const Oauth2SignInResponse_OpenId& from) {
    CopyFrom(from);
    return *this;
  }
  inline Oauth2SignInResponse_OpenId& operator=(Oauth2SignInResponse_OpenId&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Oauth2SignInResponse_OpenId& default_instance() {
    return *internal_default_instance();
  }
  static inline const Oauth2SignInResponse_OpenId* internal_default_instance() {
    return reinterpret_cast<const Oauth2SignInResponse_OpenId*>(
        &_Oauth2SignInResponse_OpenId_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Oauth2SignInResponse_OpenId& a, Oauth2SignInResponse_OpenId& b) { a.Swap(&b); }
  inline void Swap(Oauth2SignInResponse_OpenId* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Oauth2SignInResponse_OpenId* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Oauth2SignInResponse_OpenId* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Oauth2SignInResponse_OpenId>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Oauth2SignInResponse_OpenId& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Oauth2SignInResponse_OpenId& from) { Oauth2SignInResponse_OpenId::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Oauth2SignInResponse_OpenId* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "palm.google.v1.Oauth2SignInResponse.OpenId"; }

 protected:
  explicit Oauth2SignInResponse_OpenId(::google::protobuf::Arena* arena);
  Oauth2SignInResponse_OpenId(::google::protobuf::Arena* arena, const Oauth2SignInResponse_OpenId& from);
  Oauth2SignInResponse_OpenId(::google::protobuf::Arena* arena, Oauth2SignInResponse_OpenId&& from) noexcept
      : Oauth2SignInResponse_OpenId(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubjectFieldNumber = 1,
    kNameFieldNumber = 2,
    kEmailFieldNumber = 3,
    kPictureFieldNumber = 7,
    kLocaleFieldNumber = 8,
    kProfileFieldNumber = 9,
    kEmailVerifiedFieldNumber = 4,
  };
  // string subject = 1;
  void clear_subject() ;
  const std::string& subject() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subject(Arg_&& arg, Args_... args);
  std::string* mutable_subject();
  PROTOBUF_NODISCARD std::string* release_subject();
  void set_allocated_subject(std::string* value);

  private:
  const std::string& _internal_subject() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subject(
      const std::string& value);
  std::string* _internal_mutable_subject();

  public:
  // optional string name = 2;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string email = 3;
  bool has_email() const;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // optional string picture = 7;
  bool has_picture() const;
  void clear_picture() ;
  const std::string& picture() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_picture(Arg_&& arg, Args_... args);
  std::string* mutable_picture();
  PROTOBUF_NODISCARD std::string* release_picture();
  void set_allocated_picture(std::string* value);

  private:
  const std::string& _internal_picture() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_picture(
      const std::string& value);
  std::string* _internal_mutable_picture();

  public:
  // optional string locale = 8;
  bool has_locale() const;
  void clear_locale() ;
  const std::string& locale() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_locale(Arg_&& arg, Args_... args);
  std::string* mutable_locale();
  PROTOBUF_NODISCARD std::string* release_locale();
  void set_allocated_locale(std::string* value);

  private:
  const std::string& _internal_locale() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_locale(
      const std::string& value);
  std::string* _internal_mutable_locale();

  public:
  // optional string profile = 9;
  bool has_profile() const;
  void clear_profile() ;
  const std::string& profile() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_profile(Arg_&& arg, Args_... args);
  std::string* mutable_profile();
  PROTOBUF_NODISCARD std::string* release_profile();
  void set_allocated_profile(std::string* value);

  private:
  const std::string& _internal_profile() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_profile(
      const std::string& value);
  std::string* _internal_mutable_profile();

  public:
  // bool email_verified = 4;
  void clear_email_verified() ;
  bool email_verified() const;
  void set_email_verified(bool value);

  private:
  bool _internal_email_verified() const;
  void _internal_set_email_verified(bool value);

  public:
  // @@protoc_insertion_point(class_scope:palm.google.v1.Oauth2SignInResponse.OpenId)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      87, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Oauth2SignInResponse_OpenId_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Oauth2SignInResponse_OpenId& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr subject_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::google::protobuf::internal::ArenaStringPtr picture_;
    ::google::protobuf::internal::ArenaStringPtr locale_;
    ::google::protobuf::internal::ArenaStringPtr profile_;
    bool email_verified_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2eproto;
};
// -------------------------------------------------------------------

class Oauth2SignInRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:palm.google.v1.Oauth2SignInRequest) */ {
 public:
  inline Oauth2SignInRequest() : Oauth2SignInRequest(nullptr) {}
  ~Oauth2SignInRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Oauth2SignInRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline Oauth2SignInRequest(const Oauth2SignInRequest& from) : Oauth2SignInRequest(nullptr, from) {}
  inline Oauth2SignInRequest(Oauth2SignInRequest&& from) noexcept
      : Oauth2SignInRequest(nullptr, std::move(from)) {}
  inline Oauth2SignInRequest& operator=(const Oauth2SignInRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Oauth2SignInRequest& operator=(Oauth2SignInRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Oauth2SignInRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const Oauth2SignInRequest* internal_default_instance() {
    return reinterpret_cast<const Oauth2SignInRequest*>(
        &_Oauth2SignInRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Oauth2SignInRequest& a, Oauth2SignInRequest& b) { a.Swap(&b); }
  inline void Swap(Oauth2SignInRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Oauth2SignInRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Oauth2SignInRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Oauth2SignInRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Oauth2SignInRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Oauth2SignInRequest& from) { Oauth2SignInRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Oauth2SignInRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "palm.google.v1.Oauth2SignInRequest"; }

 protected:
  explicit Oauth2SignInRequest(::google::protobuf::Arena* arena);
  Oauth2SignInRequest(::google::protobuf::Arena* arena, const Oauth2SignInRequest& from);
  Oauth2SignInRequest(::google::protobuf::Arena* arena, Oauth2SignInRequest&& from) noexcept
      : Oauth2SignInRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCodeFieldNumber = 1,
    kStateFieldNumber = 2,
  };
  // string code = 1;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // string state = 2;
  void clear_state() ;
  const std::string& state() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_state(Arg_&& arg, Args_... args);
  std::string* mutable_state();
  PROTOBUF_NODISCARD std::string* release_state();
  void set_allocated_state(std::string* value);

  private:
  const std::string& _internal_state() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_state(
      const std::string& value);
  std::string* _internal_mutable_state();

  public:
  // @@protoc_insertion_point(class_scope:palm.google.v1.Oauth2SignInRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      52, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Oauth2SignInRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Oauth2SignInRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::google::protobuf::internal::ArenaStringPtr state_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2eproto;
};
// -------------------------------------------------------------------

class Oauth2AuthCodeURLResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:palm.google.v1.Oauth2AuthCodeURLResponse) */ {
 public:
  inline Oauth2AuthCodeURLResponse() : Oauth2AuthCodeURLResponse(nullptr) {}
  ~Oauth2AuthCodeURLResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Oauth2AuthCodeURLResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline Oauth2AuthCodeURLResponse(const Oauth2AuthCodeURLResponse& from) : Oauth2AuthCodeURLResponse(nullptr, from) {}
  inline Oauth2AuthCodeURLResponse(Oauth2AuthCodeURLResponse&& from) noexcept
      : Oauth2AuthCodeURLResponse(nullptr, std::move(from)) {}
  inline Oauth2AuthCodeURLResponse& operator=(const Oauth2AuthCodeURLResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Oauth2AuthCodeURLResponse& operator=(Oauth2AuthCodeURLResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Oauth2AuthCodeURLResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const Oauth2AuthCodeURLResponse* internal_default_instance() {
    return reinterpret_cast<const Oauth2AuthCodeURLResponse*>(
        &_Oauth2AuthCodeURLResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Oauth2AuthCodeURLResponse& a, Oauth2AuthCodeURLResponse& b) { a.Swap(&b); }
  inline void Swap(Oauth2AuthCodeURLResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Oauth2AuthCodeURLResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Oauth2AuthCodeURLResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Oauth2AuthCodeURLResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Oauth2AuthCodeURLResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Oauth2AuthCodeURLResponse& from) { Oauth2AuthCodeURLResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Oauth2AuthCodeURLResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "palm.google.v1.Oauth2AuthCodeURLResponse"; }

 protected:
  explicit Oauth2AuthCodeURLResponse(::google::protobuf::Arena* arena);
  Oauth2AuthCodeURLResponse(::google::protobuf::Arena* arena, const Oauth2AuthCodeURLResponse& from);
  Oauth2AuthCodeURLResponse(::google::protobuf::Arena* arena, Oauth2AuthCodeURLResponse&& from) noexcept
      : Oauth2AuthCodeURLResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUrlFieldNumber = 1,
  };
  // string url = 1;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // @@protoc_insertion_point(class_scope:palm.google.v1.Oauth2AuthCodeURLResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      52, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Oauth2AuthCodeURLResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Oauth2AuthCodeURLResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr url_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2eproto;
};
// -------------------------------------------------------------------

class Oauth2AuthCodeURLRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:palm.google.v1.Oauth2AuthCodeURLRequest) */ {
 public:
  inline Oauth2AuthCodeURLRequest() : Oauth2AuthCodeURLRequest(nullptr) {}
  ~Oauth2AuthCodeURLRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Oauth2AuthCodeURLRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline Oauth2AuthCodeURLRequest(const Oauth2AuthCodeURLRequest& from) : Oauth2AuthCodeURLRequest(nullptr, from) {}
  inline Oauth2AuthCodeURLRequest(Oauth2AuthCodeURLRequest&& from) noexcept
      : Oauth2AuthCodeURLRequest(nullptr, std::move(from)) {}
  inline Oauth2AuthCodeURLRequest& operator=(const Oauth2AuthCodeURLRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline Oauth2AuthCodeURLRequest& operator=(Oauth2AuthCodeURLRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Oauth2AuthCodeURLRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const Oauth2AuthCodeURLRequest* internal_default_instance() {
    return reinterpret_cast<const Oauth2AuthCodeURLRequest*>(
        &_Oauth2AuthCodeURLRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(Oauth2AuthCodeURLRequest& a, Oauth2AuthCodeURLRequest& b) { a.Swap(&b); }
  inline void Swap(Oauth2AuthCodeURLRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Oauth2AuthCodeURLRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Oauth2AuthCodeURLRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Oauth2AuthCodeURLRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Oauth2AuthCodeURLRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Oauth2AuthCodeURLRequest& from) { Oauth2AuthCodeURLRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Oauth2AuthCodeURLRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "palm.google.v1.Oauth2AuthCodeURLRequest"; }

 protected:
  explicit Oauth2AuthCodeURLRequest(::google::protobuf::Arena* arena);
  Oauth2AuthCodeURLRequest(::google::protobuf::Arena* arena, const Oauth2AuthCodeURLRequest& from);
  Oauth2AuthCodeURLRequest(::google::protobuf::Arena* arena, Oauth2AuthCodeURLRequest&& from) noexcept
      : Oauth2AuthCodeURLRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSubjectFieldNumber = 1,
  };
  // optional string subject = 1;
  bool has_subject() const;
  void clear_subject() ;
  const std::string& subject() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subject(Arg_&& arg, Args_... args);
  std::string* mutable_subject();
  PROTOBUF_NODISCARD std::string* release_subject();
  void set_allocated_subject(std::string* value);

  private:
  const std::string& _internal_subject() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subject(
      const std::string& value);
  std::string* _internal_mutable_subject();

  public:
  // @@protoc_insertion_point(class_scope:palm.google.v1.Oauth2AuthCodeURLRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      55, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Oauth2AuthCodeURLRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Oauth2AuthCodeURLRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr subject_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2eproto;
};
// -------------------------------------------------------------------

class Oauth2SignInResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:palm.google.v1.Oauth2SignInResponse) */ {
 public:
  inline Oauth2SignInResponse() : Oauth2SignInResponse(nullptr) {}
  ~Oauth2SignInResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Oauth2SignInResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline Oauth2SignInResponse(const Oauth2SignInResponse& from) : Oauth2SignInResponse(nullptr, from) {}
  inline Oauth2SignInResponse(Oauth2SignInResponse&& from) noexcept
      : Oauth2SignInResponse(nullptr, std::move(from)) {}
  inline Oauth2SignInResponse& operator=(const Oauth2SignInResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline Oauth2SignInResponse& operator=(Oauth2SignInResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Oauth2SignInResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const Oauth2SignInResponse* internal_default_instance() {
    return reinterpret_cast<const Oauth2SignInResponse*>(
        &_Oauth2SignInResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Oauth2SignInResponse& a, Oauth2SignInResponse& b) { a.Swap(&b); }
  inline void Swap(Oauth2SignInResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Oauth2SignInResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Oauth2SignInResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Oauth2SignInResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Oauth2SignInResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Oauth2SignInResponse& from) { Oauth2SignInResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Oauth2SignInResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "palm.google.v1.Oauth2SignInResponse"; }

 protected:
  explicit Oauth2SignInResponse(::google::protobuf::Arena* arena);
  Oauth2SignInResponse(::google::protobuf::Arena* arena, const Oauth2SignInResponse& from);
  Oauth2SignInResponse(::google::protobuf::Arena* arena, Oauth2SignInResponse&& from) noexcept
      : Oauth2SignInResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------
  using OpenId = Oauth2SignInResponse_OpenId;

  // accessors -------------------------------------------------------
  enum : int {
    kTokenFieldNumber = 2,
    kSubjectFieldNumber = 99,
    kOpenIdFieldNumber = 1,
  };
  // bytes token = 2;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // optional string subject = 99;
  bool has_subject() const;
  void clear_subject() ;
  const std::string& subject() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subject(Arg_&& arg, Args_... args);
  std::string* mutable_subject();
  PROTOBUF_NODISCARD std::string* release_subject();
  void set_allocated_subject(std::string* value);

  private:
  const std::string& _internal_subject() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subject(
      const std::string& value);
  std::string* _internal_mutable_subject();

  public:
  // .palm.google.v1.Oauth2SignInResponse.OpenId open_id = 1;
  bool has_open_id() const;
  void clear_open_id() ;
  const ::palm::google::v1::Oauth2SignInResponse_OpenId& open_id() const;
  PROTOBUF_NODISCARD ::palm::google::v1::Oauth2SignInResponse_OpenId* release_open_id();
  ::palm::google::v1::Oauth2SignInResponse_OpenId* mutable_open_id();
  void set_allocated_open_id(::palm::google::v1::Oauth2SignInResponse_OpenId* value);
  void unsafe_arena_set_allocated_open_id(::palm::google::v1::Oauth2SignInResponse_OpenId* value);
  ::palm::google::v1::Oauth2SignInResponse_OpenId* unsafe_arena_release_open_id();

  private:
  const ::palm::google::v1::Oauth2SignInResponse_OpenId& _internal_open_id() const;
  ::palm::google::v1::Oauth2SignInResponse_OpenId* _internal_mutable_open_id();

  public:
  // @@protoc_insertion_point(class_scope:palm.google.v1.Oauth2SignInResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      51, 7>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Oauth2SignInResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Oauth2SignInResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::google::protobuf::internal::ArenaStringPtr subject_;
    ::palm::google::v1::Oauth2SignInResponse_OpenId* open_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_google_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// Oauth2AuthCodeURLRequest

// optional string subject = 1;
inline bool Oauth2AuthCodeURLRequest::has_subject() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Oauth2AuthCodeURLRequest::clear_subject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subject_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Oauth2AuthCodeURLRequest::subject() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.google.v1.Oauth2AuthCodeURLRequest.subject)
  return _internal_subject();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Oauth2AuthCodeURLRequest::set_subject(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.subject_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.google.v1.Oauth2AuthCodeURLRequest.subject)
}
inline std::string* Oauth2AuthCodeURLRequest::mutable_subject() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subject();
  // @@protoc_insertion_point(field_mutable:palm.google.v1.Oauth2AuthCodeURLRequest.subject)
  return _s;
}
inline const std::string& Oauth2AuthCodeURLRequest::_internal_subject() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subject_.Get();
}
inline void Oauth2AuthCodeURLRequest::_internal_set_subject(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.subject_.Set(value, GetArena());
}
inline std::string* Oauth2AuthCodeURLRequest::_internal_mutable_subject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.subject_.Mutable( GetArena());
}
inline std::string* Oauth2AuthCodeURLRequest::release_subject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.google.v1.Oauth2AuthCodeURLRequest.subject)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.subject_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.subject_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Oauth2AuthCodeURLRequest::set_allocated_subject(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.subject_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subject_.IsDefault()) {
          _impl_.subject_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.google.v1.Oauth2AuthCodeURLRequest.subject)
}

// -------------------------------------------------------------------

// Oauth2AuthCodeURLResponse

// string url = 1;
inline void Oauth2AuthCodeURLResponse::clear_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& Oauth2AuthCodeURLResponse::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.google.v1.Oauth2AuthCodeURLResponse.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Oauth2AuthCodeURLResponse::set_url(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.google.v1.Oauth2AuthCodeURLResponse.url)
}
inline std::string* Oauth2AuthCodeURLResponse::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:palm.google.v1.Oauth2AuthCodeURLResponse.url)
  return _s;
}
inline const std::string& Oauth2AuthCodeURLResponse::_internal_url() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.url_.Get();
}
inline void Oauth2AuthCodeURLResponse::_internal_set_url(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.Set(value, GetArena());
}
inline std::string* Oauth2AuthCodeURLResponse::_internal_mutable_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* Oauth2AuthCodeURLResponse::release_url() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.google.v1.Oauth2AuthCodeURLResponse.url)
  return _impl_.url_.Release();
}
inline void Oauth2AuthCodeURLResponse::set_allocated_url(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.google.v1.Oauth2AuthCodeURLResponse.url)
}

// -------------------------------------------------------------------

// Oauth2SignInRequest

// string code = 1;
inline void Oauth2SignInRequest::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& Oauth2SignInRequest::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.google.v1.Oauth2SignInRequest.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Oauth2SignInRequest::set_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.google.v1.Oauth2SignInRequest.code)
}
inline std::string* Oauth2SignInRequest::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.google.v1.Oauth2SignInRequest.code)
  return _s;
}
inline const std::string& Oauth2SignInRequest::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_.Get();
}
inline void Oauth2SignInRequest::_internal_set_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.Set(value, GetArena());
}
inline std::string* Oauth2SignInRequest::_internal_mutable_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* Oauth2SignInRequest::release_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.google.v1.Oauth2SignInRequest.code)
  return _impl_.code_.Release();
}
inline void Oauth2SignInRequest::set_allocated_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.google.v1.Oauth2SignInRequest.code)
}

// string state = 2;
inline void Oauth2SignInRequest::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_.ClearToEmpty();
}
inline const std::string& Oauth2SignInRequest::state() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.google.v1.Oauth2SignInRequest.state)
  return _internal_state();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Oauth2SignInRequest::set_state(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.google.v1.Oauth2SignInRequest.state)
}
inline std::string* Oauth2SignInRequest::mutable_state() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_state();
  // @@protoc_insertion_point(field_mutable:palm.google.v1.Oauth2SignInRequest.state)
  return _s;
}
inline const std::string& Oauth2SignInRequest::_internal_state() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.state_.Get();
}
inline void Oauth2SignInRequest::_internal_set_state(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_.Set(value, GetArena());
}
inline std::string* Oauth2SignInRequest::_internal_mutable_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.state_.Mutable( GetArena());
}
inline std::string* Oauth2SignInRequest::release_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.google.v1.Oauth2SignInRequest.state)
  return _impl_.state_.Release();
}
inline void Oauth2SignInRequest::set_allocated_state(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.state_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.state_.IsDefault()) {
          _impl_.state_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.google.v1.Oauth2SignInRequest.state)
}

// -------------------------------------------------------------------

// Oauth2SignInResponse_OpenId

// string subject = 1;
inline void Oauth2SignInResponse_OpenId::clear_subject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subject_.ClearToEmpty();
}
inline const std::string& Oauth2SignInResponse_OpenId::subject() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.google.v1.Oauth2SignInResponse.OpenId.subject)
  return _internal_subject();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Oauth2SignInResponse_OpenId::set_subject(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subject_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.google.v1.Oauth2SignInResponse.OpenId.subject)
}
inline std::string* Oauth2SignInResponse_OpenId::mutable_subject() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subject();
  // @@protoc_insertion_point(field_mutable:palm.google.v1.Oauth2SignInResponse.OpenId.subject)
  return _s;
}
inline const std::string& Oauth2SignInResponse_OpenId::_internal_subject() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subject_.Get();
}
inline void Oauth2SignInResponse_OpenId::_internal_set_subject(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subject_.Set(value, GetArena());
}
inline std::string* Oauth2SignInResponse_OpenId::_internal_mutable_subject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.subject_.Mutable( GetArena());
}
inline std::string* Oauth2SignInResponse_OpenId::release_subject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.google.v1.Oauth2SignInResponse.OpenId.subject)
  return _impl_.subject_.Release();
}
inline void Oauth2SignInResponse_OpenId::set_allocated_subject(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subject_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subject_.IsDefault()) {
          _impl_.subject_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.google.v1.Oauth2SignInResponse.OpenId.subject)
}

// optional string name = 2;
inline bool Oauth2SignInResponse_OpenId::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Oauth2SignInResponse_OpenId::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Oauth2SignInResponse_OpenId::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.google.v1.Oauth2SignInResponse.OpenId.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Oauth2SignInResponse_OpenId::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.google.v1.Oauth2SignInResponse.OpenId.name)
}
inline std::string* Oauth2SignInResponse_OpenId::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:palm.google.v1.Oauth2SignInResponse.OpenId.name)
  return _s;
}
inline const std::string& Oauth2SignInResponse_OpenId::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Oauth2SignInResponse_OpenId::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Oauth2SignInResponse_OpenId::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Oauth2SignInResponse_OpenId::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.google.v1.Oauth2SignInResponse.OpenId.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Oauth2SignInResponse_OpenId::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.google.v1.Oauth2SignInResponse.OpenId.name)
}

// optional string email = 3;
inline bool Oauth2SignInResponse_OpenId::has_email() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void Oauth2SignInResponse_OpenId::clear_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& Oauth2SignInResponse_OpenId::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.google.v1.Oauth2SignInResponse.OpenId.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Oauth2SignInResponse_OpenId::set_email(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.google.v1.Oauth2SignInResponse.OpenId.email)
}
inline std::string* Oauth2SignInResponse_OpenId::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:palm.google.v1.Oauth2SignInResponse.OpenId.email)
  return _s;
}
inline const std::string& Oauth2SignInResponse_OpenId::_internal_email() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.email_.Get();
}
inline void Oauth2SignInResponse_OpenId::_internal_set_email(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.email_.Set(value, GetArena());
}
inline std::string* Oauth2SignInResponse_OpenId::_internal_mutable_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* Oauth2SignInResponse_OpenId::release_email() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.google.v1.Oauth2SignInResponse.OpenId.email)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.email_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.email_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Oauth2SignInResponse_OpenId::set_allocated_email(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.email_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.google.v1.Oauth2SignInResponse.OpenId.email)
}

// bool email_verified = 4;
inline void Oauth2SignInResponse_OpenId::clear_email_verified() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_verified_ = false;
}
inline bool Oauth2SignInResponse_OpenId::email_verified() const {
  // @@protoc_insertion_point(field_get:palm.google.v1.Oauth2SignInResponse.OpenId.email_verified)
  return _internal_email_verified();
}
inline void Oauth2SignInResponse_OpenId::set_email_verified(bool value) {
  _internal_set_email_verified(value);
  // @@protoc_insertion_point(field_set:palm.google.v1.Oauth2SignInResponse.OpenId.email_verified)
}
inline bool Oauth2SignInResponse_OpenId::_internal_email_verified() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.email_verified_;
}
inline void Oauth2SignInResponse_OpenId::_internal_set_email_verified(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.email_verified_ = value;
}

// optional string picture = 7;
inline bool Oauth2SignInResponse_OpenId::has_picture() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void Oauth2SignInResponse_OpenId::clear_picture() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.picture_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& Oauth2SignInResponse_OpenId::picture() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.google.v1.Oauth2SignInResponse.OpenId.picture)
  return _internal_picture();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Oauth2SignInResponse_OpenId::set_picture(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.picture_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.google.v1.Oauth2SignInResponse.OpenId.picture)
}
inline std::string* Oauth2SignInResponse_OpenId::mutable_picture() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_picture();
  // @@protoc_insertion_point(field_mutable:palm.google.v1.Oauth2SignInResponse.OpenId.picture)
  return _s;
}
inline const std::string& Oauth2SignInResponse_OpenId::_internal_picture() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.picture_.Get();
}
inline void Oauth2SignInResponse_OpenId::_internal_set_picture(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.picture_.Set(value, GetArena());
}
inline std::string* Oauth2SignInResponse_OpenId::_internal_mutable_picture() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.picture_.Mutable( GetArena());
}
inline std::string* Oauth2SignInResponse_OpenId::release_picture() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.google.v1.Oauth2SignInResponse.OpenId.picture)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.picture_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.picture_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Oauth2SignInResponse_OpenId::set_allocated_picture(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.picture_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.picture_.IsDefault()) {
          _impl_.picture_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.google.v1.Oauth2SignInResponse.OpenId.picture)
}

// optional string locale = 8;
inline bool Oauth2SignInResponse_OpenId::has_locale() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void Oauth2SignInResponse_OpenId::clear_locale() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.locale_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& Oauth2SignInResponse_OpenId::locale() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.google.v1.Oauth2SignInResponse.OpenId.locale)
  return _internal_locale();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Oauth2SignInResponse_OpenId::set_locale(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.locale_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.google.v1.Oauth2SignInResponse.OpenId.locale)
}
inline std::string* Oauth2SignInResponse_OpenId::mutable_locale() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_locale();
  // @@protoc_insertion_point(field_mutable:palm.google.v1.Oauth2SignInResponse.OpenId.locale)
  return _s;
}
inline const std::string& Oauth2SignInResponse_OpenId::_internal_locale() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.locale_.Get();
}
inline void Oauth2SignInResponse_OpenId::_internal_set_locale(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.locale_.Set(value, GetArena());
}
inline std::string* Oauth2SignInResponse_OpenId::_internal_mutable_locale() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.locale_.Mutable( GetArena());
}
inline std::string* Oauth2SignInResponse_OpenId::release_locale() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.google.v1.Oauth2SignInResponse.OpenId.locale)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.locale_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.locale_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Oauth2SignInResponse_OpenId::set_allocated_locale(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.locale_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.locale_.IsDefault()) {
          _impl_.locale_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.google.v1.Oauth2SignInResponse.OpenId.locale)
}

// optional string profile = 9;
inline bool Oauth2SignInResponse_OpenId::has_profile() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void Oauth2SignInResponse_OpenId::clear_profile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.profile_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& Oauth2SignInResponse_OpenId::profile() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.google.v1.Oauth2SignInResponse.OpenId.profile)
  return _internal_profile();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Oauth2SignInResponse_OpenId::set_profile(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.profile_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.google.v1.Oauth2SignInResponse.OpenId.profile)
}
inline std::string* Oauth2SignInResponse_OpenId::mutable_profile() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_profile();
  // @@protoc_insertion_point(field_mutable:palm.google.v1.Oauth2SignInResponse.OpenId.profile)
  return _s;
}
inline const std::string& Oauth2SignInResponse_OpenId::_internal_profile() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.profile_.Get();
}
inline void Oauth2SignInResponse_OpenId::_internal_set_profile(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.profile_.Set(value, GetArena());
}
inline std::string* Oauth2SignInResponse_OpenId::_internal_mutable_profile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.profile_.Mutable( GetArena());
}
inline std::string* Oauth2SignInResponse_OpenId::release_profile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.google.v1.Oauth2SignInResponse.OpenId.profile)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.profile_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.profile_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Oauth2SignInResponse_OpenId::set_allocated_profile(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.profile_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.profile_.IsDefault()) {
          _impl_.profile_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.google.v1.Oauth2SignInResponse.OpenId.profile)
}

// -------------------------------------------------------------------

// Oauth2SignInResponse

// .palm.google.v1.Oauth2SignInResponse.OpenId open_id = 1;
inline bool Oauth2SignInResponse::has_open_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.open_id_ != nullptr);
  return value;
}
inline void Oauth2SignInResponse::clear_open_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.open_id_ != nullptr) _impl_.open_id_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::palm::google::v1::Oauth2SignInResponse_OpenId& Oauth2SignInResponse::_internal_open_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::palm::google::v1::Oauth2SignInResponse_OpenId* p = _impl_.open_id_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::google::v1::Oauth2SignInResponse_OpenId&>(::palm::google::v1::_Oauth2SignInResponse_OpenId_default_instance_);
}
inline const ::palm::google::v1::Oauth2SignInResponse_OpenId& Oauth2SignInResponse::open_id() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.google.v1.Oauth2SignInResponse.open_id)
  return _internal_open_id();
}
inline void Oauth2SignInResponse::unsafe_arena_set_allocated_open_id(::palm::google::v1::Oauth2SignInResponse_OpenId* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.open_id_);
  }
  _impl_.open_id_ = reinterpret_cast<::palm::google::v1::Oauth2SignInResponse_OpenId*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.google.v1.Oauth2SignInResponse.open_id)
}
inline ::palm::google::v1::Oauth2SignInResponse_OpenId* Oauth2SignInResponse::release_open_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::palm::google::v1::Oauth2SignInResponse_OpenId* released = _impl_.open_id_;
  _impl_.open_id_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::google::v1::Oauth2SignInResponse_OpenId* Oauth2SignInResponse::unsafe_arena_release_open_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.google.v1.Oauth2SignInResponse.open_id)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::palm::google::v1::Oauth2SignInResponse_OpenId* temp = _impl_.open_id_;
  _impl_.open_id_ = nullptr;
  return temp;
}
inline ::palm::google::v1::Oauth2SignInResponse_OpenId* Oauth2SignInResponse::_internal_mutable_open_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.open_id_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::palm::google::v1::Oauth2SignInResponse_OpenId>(GetArena());
    _impl_.open_id_ = reinterpret_cast<::palm::google::v1::Oauth2SignInResponse_OpenId*>(p);
  }
  return _impl_.open_id_;
}
inline ::palm::google::v1::Oauth2SignInResponse_OpenId* Oauth2SignInResponse::mutable_open_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::palm::google::v1::Oauth2SignInResponse_OpenId* _msg = _internal_mutable_open_id();
  // @@protoc_insertion_point(field_mutable:palm.google.v1.Oauth2SignInResponse.open_id)
  return _msg;
}
inline void Oauth2SignInResponse::set_allocated_open_id(::palm::google::v1::Oauth2SignInResponse_OpenId* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.open_id_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.open_id_ = reinterpret_cast<::palm::google::v1::Oauth2SignInResponse_OpenId*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.google.v1.Oauth2SignInResponse.open_id)
}

// bytes token = 2;
inline void Oauth2SignInResponse::clear_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& Oauth2SignInResponse::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.google.v1.Oauth2SignInResponse.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Oauth2SignInResponse::set_token(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.google.v1.Oauth2SignInResponse.token)
}
inline std::string* Oauth2SignInResponse::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:palm.google.v1.Oauth2SignInResponse.token)
  return _s;
}
inline const std::string& Oauth2SignInResponse::_internal_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.token_.Get();
}
inline void Oauth2SignInResponse::_internal_set_token(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.Set(value, GetArena());
}
inline std::string* Oauth2SignInResponse::_internal_mutable_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* Oauth2SignInResponse::release_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.google.v1.Oauth2SignInResponse.token)
  return _impl_.token_.Release();
}
inline void Oauth2SignInResponse::set_allocated_token(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.google.v1.Oauth2SignInResponse.token)
}

// optional string subject = 99;
inline bool Oauth2SignInResponse::has_subject() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void Oauth2SignInResponse::clear_subject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.subject_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& Oauth2SignInResponse::subject() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.google.v1.Oauth2SignInResponse.subject)
  return _internal_subject();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Oauth2SignInResponse::set_subject(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.subject_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.google.v1.Oauth2SignInResponse.subject)
}
inline std::string* Oauth2SignInResponse::mutable_subject() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subject();
  // @@protoc_insertion_point(field_mutable:palm.google.v1.Oauth2SignInResponse.subject)
  return _s;
}
inline const std::string& Oauth2SignInResponse::_internal_subject() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.subject_.Get();
}
inline void Oauth2SignInResponse::_internal_set_subject(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.subject_.Set(value, GetArena());
}
inline std::string* Oauth2SignInResponse::_internal_mutable_subject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.subject_.Mutable( GetArena());
}
inline std::string* Oauth2SignInResponse::release_subject() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:palm.google.v1.Oauth2SignInResponse.subject)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.subject_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.subject_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void Oauth2SignInResponse::set_allocated_subject(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.subject_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subject_.IsDefault()) {
          _impl_.subject_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.google.v1.Oauth2SignInResponse.subject)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace google
}  // namespace palm


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_google_2eproto_2epb_2eh
