// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: balsam.proto
// Protobuf C++ Version: 4.25.3

#ifndef GOOGLE_PROTOBUF_INCLUDED_balsam_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_balsam_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025003 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
#include "google/protobuf/duration.pb.h"
#include "google/protobuf/timestamp.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_balsam_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_balsam_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_balsam_2eproto;
namespace palm {
namespace balsam {
namespace v1 {
class AesCodeMessage;
struct AesCodeMessageDefaultTypeInternal;
extern AesCodeMessageDefaultTypeInternal _AesCodeMessage_default_instance_;
class AesPlainMessage;
struct AesPlainMessageDefaultTypeInternal;
extern AesPlainMessageDefaultTypeInternal _AesPlainMessage_default_instance_;
class AttachmentClearRequest;
struct AttachmentClearRequestDefaultTypeInternal;
extern AttachmentClearRequestDefaultTypeInternal _AttachmentClearRequest_default_instance_;
class AttachmentCreateRequest;
struct AttachmentCreateRequestDefaultTypeInternal;
extern AttachmentCreateRequestDefaultTypeInternal _AttachmentCreateRequest_default_instance_;
class AttachmentIndexResponse;
struct AttachmentIndexResponseDefaultTypeInternal;
extern AttachmentIndexResponseDefaultTypeInternal _AttachmentIndexResponse_default_instance_;
class AttachmentIndexResponse_Item;
struct AttachmentIndexResponse_ItemDefaultTypeInternal;
extern AttachmentIndexResponse_ItemDefaultTypeInternal _AttachmentIndexResponse_Item_default_instance_;
class AttachmentListResponse;
struct AttachmentListResponseDefaultTypeInternal;
extern AttachmentListResponseDefaultTypeInternal _AttachmentListResponse_default_instance_;
class AttachmentResourceRequest;
struct AttachmentResourceRequestDefaultTypeInternal;
extern AttachmentResourceRequestDefaultTypeInternal _AttachmentResourceRequest_default_instance_;
class AttachmentSetTitleRequest;
struct AttachmentSetTitleRequestDefaultTypeInternal;
extern AttachmentSetTitleRequestDefaultTypeInternal _AttachmentSetTitleRequest_default_instance_;
class AttachmentShowResponse;
struct AttachmentShowResponseDefaultTypeInternal;
extern AttachmentShowResponseDefaultTypeInternal _AttachmentShowResponse_default_instance_;
class EmailUserByEmailRequest;
struct EmailUserByEmailRequestDefaultTypeInternal;
extern EmailUserByEmailRequestDefaultTypeInternal _EmailUserByEmailRequest_default_instance_;
class EmailUserByNicknameRequest;
struct EmailUserByNicknameRequestDefaultTypeInternal;
extern EmailUserByNicknameRequestDefaultTypeInternal _EmailUserByNicknameRequest_default_instance_;
class EmailUserIndexResponse;
struct EmailUserIndexResponseDefaultTypeInternal;
extern EmailUserIndexResponseDefaultTypeInternal _EmailUserIndexResponse_default_instance_;
class EmailUserIndexResponse_Item;
struct EmailUserIndexResponse_ItemDefaultTypeInternal;
extern EmailUserIndexResponse_ItemDefaultTypeInternal _EmailUserIndexResponse_Item_default_instance_;
class GoogleOauth2UserBySubjectRequest;
struct GoogleOauth2UserBySubjectRequestDefaultTypeInternal;
extern GoogleOauth2UserBySubjectRequestDefaultTypeInternal _GoogleOauth2UserBySubjectRequest_default_instance_;
class GoogleOauth2UserIndexResponse;
struct GoogleOauth2UserIndexResponseDefaultTypeInternal;
extern GoogleOauth2UserIndexResponseDefaultTypeInternal _GoogleOauth2UserIndexResponse_default_instance_;
class GoogleOauth2UserIndexResponse_Item;
struct GoogleOauth2UserIndexResponse_ItemDefaultTypeInternal;
extern GoogleOauth2UserIndexResponse_ItemDefaultTypeInternal _GoogleOauth2UserIndexResponse_Item_default_instance_;
class HMacSignRequest;
struct HMacSignRequestDefaultTypeInternal;
extern HMacSignRequestDefaultTypeInternal _HMacSignRequest_default_instance_;
class HMacSignResponse;
struct HMacSignResponseDefaultTypeInternal;
extern HMacSignResponseDefaultTypeInternal _HMacSignResponse_default_instance_;
class HMacVerifyRequest;
struct HMacVerifyRequestDefaultTypeInternal;
extern HMacVerifyRequestDefaultTypeInternal _HMacVerifyRequest_default_instance_;
class IdRequest;
struct IdRequestDefaultTypeInternal;
extern IdRequestDefaultTypeInternal _IdRequest_default_instance_;
class JwtSignRequest;
struct JwtSignRequestDefaultTypeInternal;
extern JwtSignRequestDefaultTypeInternal _JwtSignRequest_default_instance_;
class JwtSignResponse;
struct JwtSignResponseDefaultTypeInternal;
extern JwtSignResponseDefaultTypeInternal _JwtSignResponse_default_instance_;
class JwtVerifyRequest;
struct JwtVerifyRequestDefaultTypeInternal;
extern JwtVerifyRequestDefaultTypeInternal _JwtVerifyRequest_default_instance_;
class JwtVerifyResponse;
struct JwtVerifyResponseDefaultTypeInternal;
extern JwtVerifyResponseDefaultTypeInternal _JwtVerifyResponse_default_instance_;
class LeaveWordCreateRequest;
struct LeaveWordCreateRequestDefaultTypeInternal;
extern LeaveWordCreateRequestDefaultTypeInternal _LeaveWordCreateRequest_default_instance_;
class LeaveWordIndexResponse;
struct LeaveWordIndexResponseDefaultTypeInternal;
extern LeaveWordIndexResponseDefaultTypeInternal _LeaveWordIndexResponse_default_instance_;
class LeaveWordIndexResponse_Item;
struct LeaveWordIndexResponse_ItemDefaultTypeInternal;
extern LeaveWordIndexResponse_ItemDefaultTypeInternal _LeaveWordIndexResponse_Item_default_instance_;
class LocaleByLangRequest;
struct LocaleByLangRequestDefaultTypeInternal;
extern LocaleByLangRequestDefaultTypeInternal _LocaleByLangRequest_default_instance_;
class LocaleByLangResponse;
struct LocaleByLangResponseDefaultTypeInternal;
extern LocaleByLangResponseDefaultTypeInternal _LocaleByLangResponse_default_instance_;
class LocaleIndexResponse;
struct LocaleIndexResponseDefaultTypeInternal;
extern LocaleIndexResponseDefaultTypeInternal _LocaleIndexResponse_default_instance_;
class LocaleIndexResponse_Item;
struct LocaleIndexResponse_ItemDefaultTypeInternal;
extern LocaleIndexResponse_ItemDefaultTypeInternal _LocaleIndexResponse_Item_default_instance_;
class LocaleSetRequest;
struct LocaleSetRequestDefaultTypeInternal;
extern LocaleSetRequestDefaultTypeInternal _LocaleSetRequest_default_instance_;
class Pager;
struct PagerDefaultTypeInternal;
extern PagerDefaultTypeInternal _Pager_default_instance_;
class Pagination;
struct PaginationDefaultTypeInternal;
extern PaginationDefaultTypeInternal _Pagination_default_instance_;
class ResourceRequest;
struct ResourceRequestDefaultTypeInternal;
extern ResourceRequestDefaultTypeInternal _ResourceRequest_default_instance_;
class SessionIndexResponse;
struct SessionIndexResponseDefaultTypeInternal;
extern SessionIndexResponseDefaultTypeInternal _SessionIndexResponse_default_instance_;
class SessionIndexResponse_Item;
struct SessionIndexResponse_ItemDefaultTypeInternal;
extern SessionIndexResponse_ItemDefaultTypeInternal _SessionIndexResponse_Item_default_instance_;
class SessionListResponse;
struct SessionListResponseDefaultTypeInternal;
extern SessionListResponseDefaultTypeInternal _SessionListResponse_default_instance_;
class SiteBaiduAccount;
struct SiteBaiduAccountDefaultTypeInternal;
extern SiteBaiduAccountDefaultTypeInternal _SiteBaiduAccount_default_instance_;
class SiteBaiduAccount_WebSiteVerify;
struct SiteBaiduAccount_WebSiteVerifyDefaultTypeInternal;
extern SiteBaiduAccount_WebSiteVerifyDefaultTypeInternal _SiteBaiduAccount_WebSiteVerify_default_instance_;
class SiteGetInfoByLangRequest;
struct SiteGetInfoByLangRequestDefaultTypeInternal;
extern SiteGetInfoByLangRequestDefaultTypeInternal _SiteGetInfoByLangRequest_default_instance_;
class SiteGetInfoByLangResponse;
struct SiteGetInfoByLangResponseDefaultTypeInternal;
extern SiteGetInfoByLangResponseDefaultTypeInternal _SiteGetInfoByLangResponse_default_instance_;
class SiteGoogleAccount;
struct SiteGoogleAccountDefaultTypeInternal;
extern SiteGoogleAccountDefaultTypeInternal _SiteGoogleAccount_default_instance_;
class SiteGoogleAccount_ReCaptcha;
struct SiteGoogleAccount_ReCaptchaDefaultTypeInternal;
extern SiteGoogleAccount_ReCaptchaDefaultTypeInternal _SiteGoogleAccount_ReCaptcha_default_instance_;
class SiteGoogleAccount_WebSiteVerify;
struct SiteGoogleAccount_WebSiteVerifyDefaultTypeInternal;
extern SiteGoogleAccount_WebSiteVerifyDefaultTypeInternal _SiteGoogleAccount_WebSiteVerify_default_instance_;
class SiteIndexNowAccount;
struct SiteIndexNowAccountDefaultTypeInternal;
extern SiteIndexNowAccountDefaultTypeInternal _SiteIndexNowAccount_default_instance_;
class SiteIndexNowAccount_WebSiteVerify;
struct SiteIndexNowAccount_WebSiteVerifyDefaultTypeInternal;
extern SiteIndexNowAccount_WebSiteVerifyDefaultTypeInternal _SiteIndexNowAccount_WebSiteVerify_default_instance_;
class SiteInfoRequest;
struct SiteInfoRequestDefaultTypeInternal;
extern SiteInfoRequestDefaultTypeInternal _SiteInfoRequest_default_instance_;
class SiteKeywordsRequest;
struct SiteKeywordsRequestDefaultTypeInternal;
extern SiteKeywordsRequestDefaultTypeInternal _SiteKeywordsRequest_default_instance_;
class SiteLayoutResponse;
struct SiteLayoutResponseDefaultTypeInternal;
extern SiteLayoutResponseDefaultTypeInternal _SiteLayoutResponse_default_instance_;
class SiteLayoutResponse_Author;
struct SiteLayoutResponse_AuthorDefaultTypeInternal;
extern SiteLayoutResponse_AuthorDefaultTypeInternal _SiteLayoutResponse_Author_default_instance_;
class SiteLayoutResponse_CnGab;
struct SiteLayoutResponse_CnGabDefaultTypeInternal;
extern SiteLayoutResponse_CnGabDefaultTypeInternal _SiteLayoutResponse_CnGab_default_instance_;
class SiteLayoutResponse_CnIcp;
struct SiteLayoutResponse_CnIcpDefaultTypeInternal;
extern SiteLayoutResponse_CnIcpDefaultTypeInternal _SiteLayoutResponse_CnIcp_default_instance_;
class SiteStatusResponse;
struct SiteStatusResponseDefaultTypeInternal;
extern SiteStatusResponseDefaultTypeInternal _SiteStatusResponse_default_instance_;
class SiteStatusResponse_OpenSearch;
struct SiteStatusResponse_OpenSearchDefaultTypeInternal;
extern SiteStatusResponse_OpenSearchDefaultTypeInternal _SiteStatusResponse_OpenSearch_default_instance_;
class SiteStatusResponse_PostgreSql;
struct SiteStatusResponse_PostgreSqlDefaultTypeInternal;
extern SiteStatusResponse_PostgreSqlDefaultTypeInternal _SiteStatusResponse_PostgreSql_default_instance_;
class SiteStatusResponse_Redis;
struct SiteStatusResponse_RedisDefaultTypeInternal;
extern SiteStatusResponse_RedisDefaultTypeInternal _SiteStatusResponse_Redis_default_instance_;
class UidRequest;
struct UidRequestDefaultTypeInternal;
extern UidRequestDefaultTypeInternal _UidRequest_default_instance_;
class UserByEmailRequest;
struct UserByEmailRequestDefaultTypeInternal;
extern UserByEmailRequestDefaultTypeInternal _UserByEmailRequest_default_instance_;
class UserByTokenRequest;
struct UserByTokenRequestDefaultTypeInternal;
extern UserByTokenRequestDefaultTypeInternal _UserByTokenRequest_default_instance_;
class UserIndexResponse;
struct UserIndexResponseDefaultTypeInternal;
extern UserIndexResponseDefaultTypeInternal _UserIndexResponse_default_instance_;
class UserIndexResponse_Item;
struct UserIndexResponse_ItemDefaultTypeInternal;
extern UserIndexResponse_ItemDefaultTypeInternal _UserIndexResponse_Item_default_instance_;
class UserLogsRequest;
struct UserLogsRequestDefaultTypeInternal;
extern UserLogsRequestDefaultTypeInternal _UserLogsRequest_default_instance_;
class UserLogsResponse;
struct UserLogsResponseDefaultTypeInternal;
extern UserLogsResponseDefaultTypeInternal _UserLogsResponse_default_instance_;
class UserLogsResponse_Item;
struct UserLogsResponse_ItemDefaultTypeInternal;
extern UserLogsResponse_ItemDefaultTypeInternal _UserLogsResponse_Item_default_instance_;
class UserResetPasswordRequest;
struct UserResetPasswordRequestDefaultTypeInternal;
extern UserResetPasswordRequestDefaultTypeInternal _UserResetPasswordRequest_default_instance_;
class UserSignInByEmailRequest;
struct UserSignInByEmailRequestDefaultTypeInternal;
extern UserSignInByEmailRequestDefaultTypeInternal _UserSignInByEmailRequest_default_instance_;
class UserSignInResponse;
struct UserSignInResponseDefaultTypeInternal;
extern UserSignInResponseDefaultTypeInternal _UserSignInResponse_default_instance_;
class UserSignInResponse_Detail;
struct UserSignInResponse_DetailDefaultTypeInternal;
extern UserSignInResponse_DetailDefaultTypeInternal _UserSignInResponse_Detail_default_instance_;
class UserSignInResponse_Menu;
struct UserSignInResponse_MenuDefaultTypeInternal;
extern UserSignInResponse_MenuDefaultTypeInternal _UserSignInResponse_Menu_default_instance_;
class UserSignInResponse_Permission;
struct UserSignInResponse_PermissionDefaultTypeInternal;
extern UserSignInResponse_PermissionDefaultTypeInternal _UserSignInResponse_Permission_default_instance_;
class UserSignOutRequest;
struct UserSignOutRequestDefaultTypeInternal;
extern UserSignOutRequestDefaultTypeInternal _UserSignOutRequest_default_instance_;
class UserSignUpByEmailRequest;
struct UserSignUpByEmailRequestDefaultTypeInternal;
extern UserSignUpByEmailRequestDefaultTypeInternal _UserSignUpByEmailRequest_default_instance_;
class UserUpdateProfileRequest;
struct UserUpdateProfileRequestDefaultTypeInternal;
extern UserUpdateProfileRequestDefaultTypeInternal _UserUpdateProfileRequest_default_instance_;
class WechatByAppIdAndOpenIdRequest;
struct WechatByAppIdAndOpenIdRequestDefaultTypeInternal;
extern WechatByAppIdAndOpenIdRequestDefaultTypeInternal _WechatByAppIdAndOpenIdRequest_default_instance_;
class WechatByUnionIdRequest;
struct WechatByUnionIdRequestDefaultTypeInternal;
extern WechatByUnionIdRequestDefaultTypeInternal _WechatByUnionIdRequest_default_instance_;
class WechatMiniProgramUserIndexResponse;
struct WechatMiniProgramUserIndexResponseDefaultTypeInternal;
extern WechatMiniProgramUserIndexResponseDefaultTypeInternal _WechatMiniProgramUserIndexResponse_default_instance_;
class WechatMiniProgramUserIndexResponse_Item;
struct WechatMiniProgramUserIndexResponse_ItemDefaultTypeInternal;
extern WechatMiniProgramUserIndexResponse_ItemDefaultTypeInternal _WechatMiniProgramUserIndexResponse_Item_default_instance_;
class WechatOauth2UserIndexResponse;
struct WechatOauth2UserIndexResponseDefaultTypeInternal;
extern WechatOauth2UserIndexResponseDefaultTypeInternal _WechatOauth2UserIndexResponse_default_instance_;
class WechatOauth2UserIndexResponse_Item;
struct WechatOauth2UserIndexResponse_ItemDefaultTypeInternal;
extern WechatOauth2UserIndexResponse_ItemDefaultTypeInternal _WechatOauth2UserIndexResponse_Item_default_instance_;
}  // namespace v1
}  // namespace balsam
}  // namespace palm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace palm {
namespace balsam {
namespace v1 {
enum UserLogsResponse_Item_Level : int {
  UserLogsResponse_Item_Level_Debug = 0,
  UserLogsResponse_Item_Level_Info = 1,
  UserLogsResponse_Item_Level_Warn = 2,
  UserLogsResponse_Item_Level_Error = 3,
  UserLogsResponse_Item_Level_UserLogsResponse_Item_Level_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  UserLogsResponse_Item_Level_UserLogsResponse_Item_Level_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool UserLogsResponse_Item_Level_IsValid(int value);
extern const uint32_t UserLogsResponse_Item_Level_internal_data_[];
constexpr UserLogsResponse_Item_Level UserLogsResponse_Item_Level_Level_MIN = static_cast<UserLogsResponse_Item_Level>(0);
constexpr UserLogsResponse_Item_Level UserLogsResponse_Item_Level_Level_MAX = static_cast<UserLogsResponse_Item_Level>(3);
constexpr int UserLogsResponse_Item_Level_Level_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
UserLogsResponse_Item_Level_descriptor();
template <typename T>
const std::string& UserLogsResponse_Item_Level_Name(T value) {
  static_assert(std::is_same<T, UserLogsResponse_Item_Level>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Level_Name().");
  return UserLogsResponse_Item_Level_Name(static_cast<UserLogsResponse_Item_Level>(value));
}
template <>
inline const std::string& UserLogsResponse_Item_Level_Name(UserLogsResponse_Item_Level value) {
  return ::google::protobuf::internal::NameOfDenseEnum<UserLogsResponse_Item_Level_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool UserLogsResponse_Item_Level_Parse(absl::string_view name, UserLogsResponse_Item_Level* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserLogsResponse_Item_Level>(
      UserLogsResponse_Item_Level_descriptor(), name, value);
}
enum UserSignInResponse_Detail_ProviderType : int {
  UserSignInResponse_Detail_ProviderType_Email = 0,
  UserSignInResponse_Detail_ProviderType_Phone = 1,
  UserSignInResponse_Detail_ProviderType_GoogleOauth2 = 11,
  UserSignInResponse_Detail_ProviderType_WechatOauth2 = 12,
  UserSignInResponse_Detail_ProviderType_WechatMiniProgram = 13,
  UserSignInResponse_Detail_ProviderType_FacebookOauth2 = 14,
  UserSignInResponse_Detail_ProviderType_UserSignInResponse_Detail_ProviderType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  UserSignInResponse_Detail_ProviderType_UserSignInResponse_Detail_ProviderType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool UserSignInResponse_Detail_ProviderType_IsValid(int value);
extern const uint32_t UserSignInResponse_Detail_ProviderType_internal_data_[];
constexpr UserSignInResponse_Detail_ProviderType UserSignInResponse_Detail_ProviderType_ProviderType_MIN = static_cast<UserSignInResponse_Detail_ProviderType>(0);
constexpr UserSignInResponse_Detail_ProviderType UserSignInResponse_Detail_ProviderType_ProviderType_MAX = static_cast<UserSignInResponse_Detail_ProviderType>(14);
constexpr int UserSignInResponse_Detail_ProviderType_ProviderType_ARRAYSIZE = 14 + 1;
const ::google::protobuf::EnumDescriptor*
UserSignInResponse_Detail_ProviderType_descriptor();
template <typename T>
const std::string& UserSignInResponse_Detail_ProviderType_Name(T value) {
  static_assert(std::is_same<T, UserSignInResponse_Detail_ProviderType>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to ProviderType_Name().");
  return UserSignInResponse_Detail_ProviderType_Name(static_cast<UserSignInResponse_Detail_ProviderType>(value));
}
template <>
inline const std::string& UserSignInResponse_Detail_ProviderType_Name(UserSignInResponse_Detail_ProviderType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<UserSignInResponse_Detail_ProviderType_descriptor,
                                                 0, 14>(
      static_cast<int>(value));
}
inline bool UserSignInResponse_Detail_ProviderType_Parse(absl::string_view name, UserSignInResponse_Detail_ProviderType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<UserSignInResponse_Detail_ProviderType>(
      UserSignInResponse_Detail_ProviderType_descriptor(), name, value);
}
enum WechatOauth2UserIndexResponse_Item_Sex : int {
  WechatOauth2UserIndexResponse_Item_Sex_Male = 0,
  WechatOauth2UserIndexResponse_Item_Sex_Female = 1,
  WechatOauth2UserIndexResponse_Item_Sex_WechatOauth2UserIndexResponse_Item_Sex_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  WechatOauth2UserIndexResponse_Item_Sex_WechatOauth2UserIndexResponse_Item_Sex_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool WechatOauth2UserIndexResponse_Item_Sex_IsValid(int value);
extern const uint32_t WechatOauth2UserIndexResponse_Item_Sex_internal_data_[];
constexpr WechatOauth2UserIndexResponse_Item_Sex WechatOauth2UserIndexResponse_Item_Sex_Sex_MIN = static_cast<WechatOauth2UserIndexResponse_Item_Sex>(0);
constexpr WechatOauth2UserIndexResponse_Item_Sex WechatOauth2UserIndexResponse_Item_Sex_Sex_MAX = static_cast<WechatOauth2UserIndexResponse_Item_Sex>(1);
constexpr int WechatOauth2UserIndexResponse_Item_Sex_Sex_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
WechatOauth2UserIndexResponse_Item_Sex_descriptor();
template <typename T>
const std::string& WechatOauth2UserIndexResponse_Item_Sex_Name(T value) {
  static_assert(std::is_same<T, WechatOauth2UserIndexResponse_Item_Sex>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Sex_Name().");
  return WechatOauth2UserIndexResponse_Item_Sex_Name(static_cast<WechatOauth2UserIndexResponse_Item_Sex>(value));
}
template <>
inline const std::string& WechatOauth2UserIndexResponse_Item_Sex_Name(WechatOauth2UserIndexResponse_Item_Sex value) {
  return ::google::protobuf::internal::NameOfDenseEnum<WechatOauth2UserIndexResponse_Item_Sex_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool WechatOauth2UserIndexResponse_Item_Sex_Parse(absl::string_view name, WechatOauth2UserIndexResponse_Item_Sex* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WechatOauth2UserIndexResponse_Item_Sex>(
      WechatOauth2UserIndexResponse_Item_Sex_descriptor(), name, value);
}
enum WechatOauth2UserIndexResponse_Item_Lang : int {
  WechatOauth2UserIndexResponse_Item_Lang_Cn = 0,
  WechatOauth2UserIndexResponse_Item_Lang_En = 1,
  WechatOauth2UserIndexResponse_Item_Lang_WechatOauth2UserIndexResponse_Item_Lang_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  WechatOauth2UserIndexResponse_Item_Lang_WechatOauth2UserIndexResponse_Item_Lang_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool WechatOauth2UserIndexResponse_Item_Lang_IsValid(int value);
extern const uint32_t WechatOauth2UserIndexResponse_Item_Lang_internal_data_[];
constexpr WechatOauth2UserIndexResponse_Item_Lang WechatOauth2UserIndexResponse_Item_Lang_Lang_MIN = static_cast<WechatOauth2UserIndexResponse_Item_Lang>(0);
constexpr WechatOauth2UserIndexResponse_Item_Lang WechatOauth2UserIndexResponse_Item_Lang_Lang_MAX = static_cast<WechatOauth2UserIndexResponse_Item_Lang>(1);
constexpr int WechatOauth2UserIndexResponse_Item_Lang_Lang_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
WechatOauth2UserIndexResponse_Item_Lang_descriptor();
template <typename T>
const std::string& WechatOauth2UserIndexResponse_Item_Lang_Name(T value) {
  static_assert(std::is_same<T, WechatOauth2UserIndexResponse_Item_Lang>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Lang_Name().");
  return WechatOauth2UserIndexResponse_Item_Lang_Name(static_cast<WechatOauth2UserIndexResponse_Item_Lang>(value));
}
template <>
inline const std::string& WechatOauth2UserIndexResponse_Item_Lang_Name(WechatOauth2UserIndexResponse_Item_Lang value) {
  return ::google::protobuf::internal::NameOfDenseEnum<WechatOauth2UserIndexResponse_Item_Lang_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool WechatOauth2UserIndexResponse_Item_Lang_Parse(absl::string_view name, WechatOauth2UserIndexResponse_Item_Lang* value) {
  return ::google::protobuf::internal::ParseNamedEnum<WechatOauth2UserIndexResponse_Item_Lang>(
      WechatOauth2UserIndexResponse_Item_Lang_descriptor(), name, value);
}
enum LeaveWordIndexResponse_Item_Status : int {
  LeaveWordIndexResponse_Item_Status_Pending = 0,
  LeaveWordIndexResponse_Item_Status_Completed = 1,
  LeaveWordIndexResponse_Item_Status_LeaveWordIndexResponse_Item_Status_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  LeaveWordIndexResponse_Item_Status_LeaveWordIndexResponse_Item_Status_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool LeaveWordIndexResponse_Item_Status_IsValid(int value);
extern const uint32_t LeaveWordIndexResponse_Item_Status_internal_data_[];
constexpr LeaveWordIndexResponse_Item_Status LeaveWordIndexResponse_Item_Status_Status_MIN = static_cast<LeaveWordIndexResponse_Item_Status>(0);
constexpr LeaveWordIndexResponse_Item_Status LeaveWordIndexResponse_Item_Status_Status_MAX = static_cast<LeaveWordIndexResponse_Item_Status>(1);
constexpr int LeaveWordIndexResponse_Item_Status_Status_ARRAYSIZE = 1 + 1;
const ::google::protobuf::EnumDescriptor*
LeaveWordIndexResponse_Item_Status_descriptor();
template <typename T>
const std::string& LeaveWordIndexResponse_Item_Status_Name(T value) {
  static_assert(std::is_same<T, LeaveWordIndexResponse_Item_Status>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to Status_Name().");
  return LeaveWordIndexResponse_Item_Status_Name(static_cast<LeaveWordIndexResponse_Item_Status>(value));
}
template <>
inline const std::string& LeaveWordIndexResponse_Item_Status_Name(LeaveWordIndexResponse_Item_Status value) {
  return ::google::protobuf::internal::NameOfDenseEnum<LeaveWordIndexResponse_Item_Status_descriptor,
                                                 0, 1>(
      static_cast<int>(value));
}
inline bool LeaveWordIndexResponse_Item_Status_Parse(absl::string_view name, LeaveWordIndexResponse_Item_Status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LeaveWordIndexResponse_Item_Status>(
      LeaveWordIndexResponse_Item_Status_descriptor(), name, value);
}
enum MediaEditor : int {
  Textarea = 0,
  Markdown = 2,
  Quill = 3,
  MediaEditor_INT_MIN_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::min(),
  MediaEditor_INT_MAX_SENTINEL_DO_NOT_USE_ =
      std::numeric_limits<::int32_t>::max(),
};

bool MediaEditor_IsValid(int value);
extern const uint32_t MediaEditor_internal_data_[];
constexpr MediaEditor MediaEditor_MIN = static_cast<MediaEditor>(0);
constexpr MediaEditor MediaEditor_MAX = static_cast<MediaEditor>(3);
constexpr int MediaEditor_ARRAYSIZE = 3 + 1;
const ::google::protobuf::EnumDescriptor*
MediaEditor_descriptor();
template <typename T>
const std::string& MediaEditor_Name(T value) {
  static_assert(std::is_same<T, MediaEditor>::value ||
                    std::is_integral<T>::value,
                "Incorrect type passed to MediaEditor_Name().");
  return MediaEditor_Name(static_cast<MediaEditor>(value));
}
template <>
inline const std::string& MediaEditor_Name(MediaEditor value) {
  return ::google::protobuf::internal::NameOfDenseEnum<MediaEditor_descriptor,
                                                 0, 3>(
      static_cast<int>(value));
}
inline bool MediaEditor_Parse(absl::string_view name, MediaEditor* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MediaEditor>(
      MediaEditor_descriptor(), name, value);
}

// ===================================================================


// -------------------------------------------------------------------

class WechatByUnionIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.WechatByUnionIdRequest) */ {
 public:
  inline WechatByUnionIdRequest() : WechatByUnionIdRequest(nullptr) {}
  ~WechatByUnionIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatByUnionIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatByUnionIdRequest(const WechatByUnionIdRequest& from)
      : WechatByUnionIdRequest(nullptr, from) {}
  WechatByUnionIdRequest(WechatByUnionIdRequest&& from) noexcept
    : WechatByUnionIdRequest() {
    *this = ::std::move(from);
  }

  inline WechatByUnionIdRequest& operator=(const WechatByUnionIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatByUnionIdRequest& operator=(WechatByUnionIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatByUnionIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatByUnionIdRequest* internal_default_instance() {
    return reinterpret_cast<const WechatByUnionIdRequest*>(
               &_WechatByUnionIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(WechatByUnionIdRequest& a, WechatByUnionIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatByUnionIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatByUnionIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatByUnionIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatByUnionIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatByUnionIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatByUnionIdRequest& from) {
    WechatByUnionIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatByUnionIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.WechatByUnionIdRequest";
  }
  protected:
  explicit WechatByUnionIdRequest(::google::protobuf::Arena* arena);
  WechatByUnionIdRequest(::google::protobuf::Arena* arena, const WechatByUnionIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnionIdFieldNumber = 1,
  };
  // string union_id = 1;
  void clear_union_id() ;
  const std::string& union_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_union_id(Arg_&& arg, Args_... args);
  std::string* mutable_union_id();
  PROTOBUF_NODISCARD std::string* release_union_id();
  void set_allocated_union_id(std::string* value);

  private:
  const std::string& _internal_union_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_union_id(
      const std::string& value);
  std::string* _internal_mutable_union_id();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.WechatByUnionIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      54, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr union_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class WechatByAppIdAndOpenIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.WechatByAppIdAndOpenIdRequest) */ {
 public:
  inline WechatByAppIdAndOpenIdRequest() : WechatByAppIdAndOpenIdRequest(nullptr) {}
  ~WechatByAppIdAndOpenIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatByAppIdAndOpenIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline WechatByAppIdAndOpenIdRequest(const WechatByAppIdAndOpenIdRequest& from)
      : WechatByAppIdAndOpenIdRequest(nullptr, from) {}
  WechatByAppIdAndOpenIdRequest(WechatByAppIdAndOpenIdRequest&& from) noexcept
    : WechatByAppIdAndOpenIdRequest() {
    *this = ::std::move(from);
  }

  inline WechatByAppIdAndOpenIdRequest& operator=(const WechatByAppIdAndOpenIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatByAppIdAndOpenIdRequest& operator=(WechatByAppIdAndOpenIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatByAppIdAndOpenIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatByAppIdAndOpenIdRequest* internal_default_instance() {
    return reinterpret_cast<const WechatByAppIdAndOpenIdRequest*>(
               &_WechatByAppIdAndOpenIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(WechatByAppIdAndOpenIdRequest& a, WechatByAppIdAndOpenIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatByAppIdAndOpenIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatByAppIdAndOpenIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatByAppIdAndOpenIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatByAppIdAndOpenIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatByAppIdAndOpenIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatByAppIdAndOpenIdRequest& from) {
    WechatByAppIdAndOpenIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatByAppIdAndOpenIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.WechatByAppIdAndOpenIdRequest";
  }
  protected:
  explicit WechatByAppIdAndOpenIdRequest(::google::protobuf::Arena* arena);
  WechatByAppIdAndOpenIdRequest(::google::protobuf::Arena* arena, const WechatByAppIdAndOpenIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAppIdFieldNumber = 1,
    kOpenIdFieldNumber = 2,
  };
  // string app_id = 1;
  void clear_app_id() ;
  const std::string& app_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_id(Arg_&& arg, Args_... args);
  std::string* mutable_app_id();
  PROTOBUF_NODISCARD std::string* release_app_id();
  void set_allocated_app_id(std::string* value);

  private:
  const std::string& _internal_app_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_id(
      const std::string& value);
  std::string* _internal_mutable_app_id();

  public:
  // string open_id = 2;
  void clear_open_id() ;
  const std::string& open_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_open_id(Arg_&& arg, Args_... args);
  std::string* mutable_open_id();
  PROTOBUF_NODISCARD std::string* release_open_id();
  void set_allocated_open_id(std::string* value);

  private:
  const std::string& _internal_open_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_open_id(
      const std::string& value);
  std::string* _internal_mutable_open_id();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.WechatByAppIdAndOpenIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      66, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr app_id_;
    ::google::protobuf::internal::ArenaStringPtr open_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class UserUpdateProfileRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.UserUpdateProfileRequest) */ {
 public:
  inline UserUpdateProfileRequest() : UserUpdateProfileRequest(nullptr) {}
  ~UserUpdateProfileRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserUpdateProfileRequest(::google::protobuf::internal::ConstantInitialized);

  inline UserUpdateProfileRequest(const UserUpdateProfileRequest& from)
      : UserUpdateProfileRequest(nullptr, from) {}
  UserUpdateProfileRequest(UserUpdateProfileRequest&& from) noexcept
    : UserUpdateProfileRequest() {
    *this = ::std::move(from);
  }

  inline UserUpdateProfileRequest& operator=(const UserUpdateProfileRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserUpdateProfileRequest& operator=(UserUpdateProfileRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserUpdateProfileRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserUpdateProfileRequest* internal_default_instance() {
    return reinterpret_cast<const UserUpdateProfileRequest*>(
               &_UserUpdateProfileRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(UserUpdateProfileRequest& a, UserUpdateProfileRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UserUpdateProfileRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserUpdateProfileRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserUpdateProfileRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserUpdateProfileRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserUpdateProfileRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserUpdateProfileRequest& from) {
    UserUpdateProfileRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserUpdateProfileRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.UserUpdateProfileRequest";
  }
  protected:
  explicit UserUpdateProfileRequest(::google::protobuf::Arena* arena);
  UserUpdateProfileRequest(::google::protobuf::Arena* arena, const UserUpdateProfileRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLangFieldNumber = 2,
    kTimezoneFieldNumber = 3,
    kIdFieldNumber = 1,
  };
  // string lang = 2;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // string timezone = 3;
  void clear_timezone() ;
  const std::string& timezone() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timezone(Arg_&& arg, Args_... args);
  std::string* mutable_timezone();
  PROTOBUF_NODISCARD std::string* release_timezone();
  void set_allocated_timezone(std::string* value);

  private:
  const std::string& _internal_timezone() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timezone(
      const std::string& value);
  std::string* _internal_mutable_timezone();

  public:
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.UserUpdateProfileRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      60, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr lang_;
    ::google::protobuf::internal::ArenaStringPtr timezone_;
    ::uint64_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class UserSignOutRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.UserSignOutRequest) */ {
 public:
  inline UserSignOutRequest() : UserSignOutRequest(nullptr) {}
  ~UserSignOutRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserSignOutRequest(::google::protobuf::internal::ConstantInitialized);

  inline UserSignOutRequest(const UserSignOutRequest& from)
      : UserSignOutRequest(nullptr, from) {}
  UserSignOutRequest(UserSignOutRequest&& from) noexcept
    : UserSignOutRequest() {
    *this = ::std::move(from);
  }

  inline UserSignOutRequest& operator=(const UserSignOutRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserSignOutRequest& operator=(UserSignOutRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserSignOutRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserSignOutRequest* internal_default_instance() {
    return reinterpret_cast<const UserSignOutRequest*>(
               &_UserSignOutRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(UserSignOutRequest& a, UserSignOutRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UserSignOutRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserSignOutRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserSignOutRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserSignOutRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserSignOutRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserSignOutRequest& from) {
    UserSignOutRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserSignOutRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.UserSignOutRequest";
  }
  protected:
  explicit UserSignOutRequest(::google::protobuf::Arena* arena);
  UserSignOutRequest(::google::protobuf::Arena* arena, const UserSignOutRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIpFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // string ip = 2;
  void clear_ip() ;
  const std::string& ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ip(Arg_&& arg, Args_... args);
  std::string* mutable_ip();
  PROTOBUF_NODISCARD std::string* release_ip();
  void set_allocated_ip(std::string* value);

  private:
  const std::string& _internal_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ip(
      const std::string& value);
  std::string* _internal_mutable_ip();

  public:
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.UserSignOutRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      44, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr ip_;
    ::uint64_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class UserSignInResponse_Permission final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.UserSignInResponse.Permission) */ {
 public:
  inline UserSignInResponse_Permission() : UserSignInResponse_Permission(nullptr) {}
  ~UserSignInResponse_Permission() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserSignInResponse_Permission(::google::protobuf::internal::ConstantInitialized);

  inline UserSignInResponse_Permission(const UserSignInResponse_Permission& from)
      : UserSignInResponse_Permission(nullptr, from) {}
  UserSignInResponse_Permission(UserSignInResponse_Permission&& from) noexcept
    : UserSignInResponse_Permission() {
    *this = ::std::move(from);
  }

  inline UserSignInResponse_Permission& operator=(const UserSignInResponse_Permission& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserSignInResponse_Permission& operator=(UserSignInResponse_Permission&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserSignInResponse_Permission& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserSignInResponse_Permission* internal_default_instance() {
    return reinterpret_cast<const UserSignInResponse_Permission*>(
               &_UserSignInResponse_Permission_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(UserSignInResponse_Permission& a, UserSignInResponse_Permission& b) {
    a.Swap(&b);
  }
  inline void Swap(UserSignInResponse_Permission* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserSignInResponse_Permission* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserSignInResponse_Permission* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserSignInResponse_Permission>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserSignInResponse_Permission& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserSignInResponse_Permission& from) {
    UserSignInResponse_Permission::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserSignInResponse_Permission* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.UserSignInResponse.Permission";
  }
  protected:
  explicit UserSignInResponse_Permission(::google::protobuf::Arena* arena);
  UserSignInResponse_Permission(::google::protobuf::Arena* arena, const UserSignInResponse_Permission& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kOperationFieldNumber = 1,
    kResourceTypeFieldNumber = 2,
    kResourceIdFieldNumber = 3,
  };
  // string operation = 1;
  void clear_operation() ;
  const std::string& operation() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_operation(Arg_&& arg, Args_... args);
  std::string* mutable_operation();
  PROTOBUF_NODISCARD std::string* release_operation();
  void set_allocated_operation(std::string* value);

  private:
  const std::string& _internal_operation() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_operation(
      const std::string& value);
  std::string* _internal_mutable_operation();

  public:
  // string resource_type = 2;
  void clear_resource_type() ;
  const std::string& resource_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resource_type(Arg_&& arg, Args_... args);
  std::string* mutable_resource_type();
  PROTOBUF_NODISCARD std::string* release_resource_type();
  void set_allocated_resource_type(std::string* value);

  private:
  const std::string& _internal_resource_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resource_type(
      const std::string& value);
  std::string* _internal_mutable_resource_type();

  public:
  // optional uint64 resource_id = 3;
  bool has_resource_id() const;
  void clear_resource_id() ;
  ::uint64_t resource_id() const;
  void set_resource_id(::uint64_t value);

  private:
  ::uint64_t _internal_resource_id() const;
  void _internal_set_resource_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.UserSignInResponse.Permission)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      75, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr operation_;
    ::google::protobuf::internal::ArenaStringPtr resource_type_;
    ::uint64_t resource_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class UserSignInResponse_Menu final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.UserSignInResponse.Menu) */ {
 public:
  inline UserSignInResponse_Menu() : UserSignInResponse_Menu(nullptr) {}
  ~UserSignInResponse_Menu() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserSignInResponse_Menu(::google::protobuf::internal::ConstantInitialized);

  inline UserSignInResponse_Menu(const UserSignInResponse_Menu& from)
      : UserSignInResponse_Menu(nullptr, from) {}
  UserSignInResponse_Menu(UserSignInResponse_Menu&& from) noexcept
    : UserSignInResponse_Menu() {
    *this = ::std::move(from);
  }

  inline UserSignInResponse_Menu& operator=(const UserSignInResponse_Menu& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserSignInResponse_Menu& operator=(UserSignInResponse_Menu&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserSignInResponse_Menu& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserSignInResponse_Menu* internal_default_instance() {
    return reinterpret_cast<const UserSignInResponse_Menu*>(
               &_UserSignInResponse_Menu_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(UserSignInResponse_Menu& a, UserSignInResponse_Menu& b) {
    a.Swap(&b);
  }
  inline void Swap(UserSignInResponse_Menu* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserSignInResponse_Menu* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserSignInResponse_Menu* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserSignInResponse_Menu>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserSignInResponse_Menu& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserSignInResponse_Menu& from) {
    UserSignInResponse_Menu::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserSignInResponse_Menu* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.UserSignInResponse.Menu";
  }
  protected:
  explicit UserSignInResponse_Menu(::google::protobuf::Arena* arena);
  UserSignInResponse_Menu(::google::protobuf::Arena* arena, const UserSignInResponse_Menu& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMenusFieldNumber = 9,
    kLabelFieldNumber = 1,
    kToFieldNumber = 2,
    kIconFieldNumber = 3,
  };
  // repeated .palm.balsam.v1.UserSignInResponse.Menu menus = 9;
  int menus_size() const;
  private:
  int _internal_menus_size() const;

  public:
  void clear_menus() ;
  ::palm::balsam::v1::UserSignInResponse_Menu* mutable_menus(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::UserSignInResponse_Menu >*
      mutable_menus();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserSignInResponse_Menu>& _internal_menus() const;
  ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserSignInResponse_Menu>* _internal_mutable_menus();
  public:
  const ::palm::balsam::v1::UserSignInResponse_Menu& menus(int index) const;
  ::palm::balsam::v1::UserSignInResponse_Menu* add_menus();
  const ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::UserSignInResponse_Menu >&
      menus() const;
  // string label = 1;
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // string to = 2;
  void clear_to() ;
  const std::string& to() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_to(Arg_&& arg, Args_... args);
  std::string* mutable_to();
  PROTOBUF_NODISCARD std::string* release_to();
  void set_allocated_to(std::string* value);

  private:
  const std::string& _internal_to() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_to(
      const std::string& value);
  std::string* _internal_mutable_to();

  public:
  // optional string icon = 3;
  bool has_icon() const;
  void clear_icon() ;
  const std::string& icon() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_icon(Arg_&& arg, Args_... args);
  std::string* mutable_icon();
  PROTOBUF_NODISCARD std::string* release_icon();
  void set_allocated_icon(std::string* value);

  private:
  const std::string& _internal_icon() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_icon(
      const std::string& value);
  std::string* _internal_mutable_icon();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.UserSignInResponse.Menu)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      58, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::UserSignInResponse_Menu > menus_;
    ::google::protobuf::internal::ArenaStringPtr label_;
    ::google::protobuf::internal::ArenaStringPtr to_;
    ::google::protobuf::internal::ArenaStringPtr icon_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class UserSignInResponse_Detail final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.UserSignInResponse.Detail) */ {
 public:
  inline UserSignInResponse_Detail() : UserSignInResponse_Detail(nullptr) {}
  ~UserSignInResponse_Detail() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserSignInResponse_Detail(::google::protobuf::internal::ConstantInitialized);

  inline UserSignInResponse_Detail(const UserSignInResponse_Detail& from)
      : UserSignInResponse_Detail(nullptr, from) {}
  UserSignInResponse_Detail(UserSignInResponse_Detail&& from) noexcept
    : UserSignInResponse_Detail() {
    *this = ::std::move(from);
  }

  inline UserSignInResponse_Detail& operator=(const UserSignInResponse_Detail& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserSignInResponse_Detail& operator=(UserSignInResponse_Detail&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserSignInResponse_Detail& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserSignInResponse_Detail* internal_default_instance() {
    return reinterpret_cast<const UserSignInResponse_Detail*>(
               &_UserSignInResponse_Detail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(UserSignInResponse_Detail& a, UserSignInResponse_Detail& b) {
    a.Swap(&b);
  }
  inline void Swap(UserSignInResponse_Detail* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserSignInResponse_Detail* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserSignInResponse_Detail* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserSignInResponse_Detail>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserSignInResponse_Detail& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserSignInResponse_Detail& from) {
    UserSignInResponse_Detail::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserSignInResponse_Detail* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.UserSignInResponse.Detail";
  }
  protected:
  explicit UserSignInResponse_Detail(::google::protobuf::Arena* arena);
  UserSignInResponse_Detail(::google::protobuf::Arena* arena, const UserSignInResponse_Detail& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using ProviderType = UserSignInResponse_Detail_ProviderType;
  static constexpr ProviderType Email = UserSignInResponse_Detail_ProviderType_Email;
  static constexpr ProviderType Phone = UserSignInResponse_Detail_ProviderType_Phone;
  static constexpr ProviderType GoogleOauth2 = UserSignInResponse_Detail_ProviderType_GoogleOauth2;
  static constexpr ProviderType WechatOauth2 = UserSignInResponse_Detail_ProviderType_WechatOauth2;
  static constexpr ProviderType WechatMiniProgram = UserSignInResponse_Detail_ProviderType_WechatMiniProgram;
  static constexpr ProviderType FacebookOauth2 = UserSignInResponse_Detail_ProviderType_FacebookOauth2;
  static inline bool ProviderType_IsValid(int value) {
    return UserSignInResponse_Detail_ProviderType_IsValid(value);
  }
  static constexpr ProviderType ProviderType_MIN = UserSignInResponse_Detail_ProviderType_ProviderType_MIN;
  static constexpr ProviderType ProviderType_MAX = UserSignInResponse_Detail_ProviderType_ProviderType_MAX;
  static constexpr int ProviderType_ARRAYSIZE = UserSignInResponse_Detail_ProviderType_ProviderType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* ProviderType_descriptor() {
    return UserSignInResponse_Detail_ProviderType_descriptor();
  }
  template <typename T>
  static inline const std::string& ProviderType_Name(T value) {
    return UserSignInResponse_Detail_ProviderType_Name(value);
  }
  static inline bool ProviderType_Parse(absl::string_view name, ProviderType* value) {
    return UserSignInResponse_Detail_ProviderType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kAvatarFieldNumber = 2,
    kLangFieldNumber = 3,
    kTimezoneFieldNumber = 4,
    kProviderTypeFieldNumber = 8,
    kHasEmailFieldNumber = 11,
    kHasPhoneFieldNumber = 12,
    kHasGoogleOauth2FieldNumber = 21,
    kHasWechatOauth2FieldNumber = 22,
    kHasWechatMiniProgramFieldNumber = 23,
    kHasFacebookOauth2FieldNumber = 24,
  };
  // optional string name = 1;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string avatar = 2;
  bool has_avatar() const;
  void clear_avatar() ;
  const std::string& avatar() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_avatar(Arg_&& arg, Args_... args);
  std::string* mutable_avatar();
  PROTOBUF_NODISCARD std::string* release_avatar();
  void set_allocated_avatar(std::string* value);

  private:
  const std::string& _internal_avatar() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_avatar(
      const std::string& value);
  std::string* _internal_mutable_avatar();

  public:
  // string lang = 3;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // string timezone = 4;
  void clear_timezone() ;
  const std::string& timezone() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timezone(Arg_&& arg, Args_... args);
  std::string* mutable_timezone();
  PROTOBUF_NODISCARD std::string* release_timezone();
  void set_allocated_timezone(std::string* value);

  private:
  const std::string& _internal_timezone() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timezone(
      const std::string& value);
  std::string* _internal_mutable_timezone();

  public:
  // .palm.balsam.v1.UserSignInResponse.Detail.ProviderType provider_type = 8;
  void clear_provider_type() ;
  ::palm::balsam::v1::UserSignInResponse_Detail_ProviderType provider_type() const;
  void set_provider_type(::palm::balsam::v1::UserSignInResponse_Detail_ProviderType value);

  private:
  ::palm::balsam::v1::UserSignInResponse_Detail_ProviderType _internal_provider_type() const;
  void _internal_set_provider_type(::palm::balsam::v1::UserSignInResponse_Detail_ProviderType value);

  public:
  // bool has_email = 11;
  void clear_has_email() ;
  bool has_email() const;
  void set_has_email(bool value);

  private:
  bool _internal_has_email() const;
  void _internal_set_has_email(bool value);

  public:
  // bool has_phone = 12;
  void clear_has_phone() ;
  bool has_phone() const;
  void set_has_phone(bool value);

  private:
  bool _internal_has_phone() const;
  void _internal_set_has_phone(bool value);

  public:
  // bool has_google_oauth2 = 21;
  void clear_has_google_oauth2() ;
  bool has_google_oauth2() const;
  void set_has_google_oauth2(bool value);

  private:
  bool _internal_has_google_oauth2() const;
  void _internal_set_has_google_oauth2(bool value);

  public:
  // bool has_wechat_oauth2 = 22;
  void clear_has_wechat_oauth2() ;
  bool has_wechat_oauth2() const;
  void set_has_wechat_oauth2(bool value);

  private:
  bool _internal_has_wechat_oauth2() const;
  void _internal_set_has_wechat_oauth2(bool value);

  public:
  // bool has_wechat_mini_program = 23;
  void clear_has_wechat_mini_program() ;
  bool has_wechat_mini_program() const;
  void set_has_wechat_mini_program(bool value);

  private:
  bool _internal_has_wechat_mini_program() const;
  void _internal_set_has_wechat_mini_program(bool value);

  public:
  // bool has_facebook_oauth2 = 24;
  void clear_has_facebook_oauth2() ;
  bool has_facebook_oauth2() const;
  void set_has_facebook_oauth2(bool value);

  private:
  bool _internal_has_facebook_oauth2() const;
  void _internal_set_has_facebook_oauth2(bool value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.UserSignInResponse.Detail)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 0,
      79, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr avatar_;
    ::google::protobuf::internal::ArenaStringPtr lang_;
    ::google::protobuf::internal::ArenaStringPtr timezone_;
    int provider_type_;
    bool has_email_;
    bool has_phone_;
    bool has_google_oauth2_;
    bool has_wechat_oauth2_;
    bool has_wechat_mini_program_;
    bool has_facebook_oauth2_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class UserResetPasswordRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.UserResetPasswordRequest) */ {
 public:
  inline UserResetPasswordRequest() : UserResetPasswordRequest(nullptr) {}
  ~UserResetPasswordRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserResetPasswordRequest(::google::protobuf::internal::ConstantInitialized);

  inline UserResetPasswordRequest(const UserResetPasswordRequest& from)
      : UserResetPasswordRequest(nullptr, from) {}
  UserResetPasswordRequest(UserResetPasswordRequest&& from) noexcept
    : UserResetPasswordRequest() {
    *this = ::std::move(from);
  }

  inline UserResetPasswordRequest& operator=(const UserResetPasswordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserResetPasswordRequest& operator=(UserResetPasswordRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserResetPasswordRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserResetPasswordRequest* internal_default_instance() {
    return reinterpret_cast<const UserResetPasswordRequest*>(
               &_UserResetPasswordRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(UserResetPasswordRequest& a, UserResetPasswordRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UserResetPasswordRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserResetPasswordRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserResetPasswordRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserResetPasswordRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserResetPasswordRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserResetPasswordRequest& from) {
    UserResetPasswordRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserResetPasswordRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.UserResetPasswordRequest";
  }
  protected:
  explicit UserResetPasswordRequest(::google::protobuf::Arena* arena);
  UserResetPasswordRequest(::google::protobuf::Arena* arena, const UserResetPasswordRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokenFieldNumber = 1,
    kPasswordFieldNumber = 2,
    kHomeFieldNumber = 9,
  };
  // string token = 1;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // string password = 2;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // string home = 9;
  void clear_home() ;
  const std::string& home() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_home(Arg_&& arg, Args_... args);
  std::string* mutable_home();
  PROTOBUF_NODISCARD std::string* release_home();
  void set_allocated_home(std::string* value);

  private:
  const std::string& _internal_home() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_home(
      const std::string& value);
  std::string* _internal_mutable_home();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.UserResetPasswordRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 3, 0,
      65, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::google::protobuf::internal::ArenaStringPtr home_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class UserByTokenRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.UserByTokenRequest) */ {
 public:
  inline UserByTokenRequest() : UserByTokenRequest(nullptr) {}
  ~UserByTokenRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserByTokenRequest(::google::protobuf::internal::ConstantInitialized);

  inline UserByTokenRequest(const UserByTokenRequest& from)
      : UserByTokenRequest(nullptr, from) {}
  UserByTokenRequest(UserByTokenRequest&& from) noexcept
    : UserByTokenRequest() {
    *this = ::std::move(from);
  }

  inline UserByTokenRequest& operator=(const UserByTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserByTokenRequest& operator=(UserByTokenRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserByTokenRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserByTokenRequest* internal_default_instance() {
    return reinterpret_cast<const UserByTokenRequest*>(
               &_UserByTokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(UserByTokenRequest& a, UserByTokenRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UserByTokenRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserByTokenRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserByTokenRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserByTokenRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserByTokenRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserByTokenRequest& from) {
    UserByTokenRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserByTokenRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.UserByTokenRequest";
  }
  protected:
  explicit UserByTokenRequest(::google::protobuf::Arena* arena);
  UserByTokenRequest(::google::protobuf::Arena* arena, const UserByTokenRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokenFieldNumber = 1,
  };
  // string token = 1;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.UserByTokenRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      47, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr token_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class UserByEmailRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.UserByEmailRequest) */ {
 public:
  inline UserByEmailRequest() : UserByEmailRequest(nullptr) {}
  ~UserByEmailRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserByEmailRequest(::google::protobuf::internal::ConstantInitialized);

  inline UserByEmailRequest(const UserByEmailRequest& from)
      : UserByEmailRequest(nullptr, from) {}
  UserByEmailRequest(UserByEmailRequest&& from) noexcept
    : UserByEmailRequest() {
    *this = ::std::move(from);
  }

  inline UserByEmailRequest& operator=(const UserByEmailRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserByEmailRequest& operator=(UserByEmailRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserByEmailRequest& default_instance() {
    return *internal_default_instance();
  }
  enum UserCase {
    kEmail = 1,
    kNickname = 2,
    USER_NOT_SET = 0,
  };

  static inline const UserByEmailRequest* internal_default_instance() {
    return reinterpret_cast<const UserByEmailRequest*>(
               &_UserByEmailRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(UserByEmailRequest& a, UserByEmailRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UserByEmailRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserByEmailRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserByEmailRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserByEmailRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserByEmailRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserByEmailRequest& from) {
    UserByEmailRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserByEmailRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.UserByEmailRequest";
  }
  protected:
  explicit UserByEmailRequest(::google::protobuf::Arena* arena);
  UserByEmailRequest(::google::protobuf::Arena* arena, const UserByEmailRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHomeFieldNumber = 9,
    kEmailFieldNumber = 1,
    kNicknameFieldNumber = 2,
  };
  // string home = 9;
  void clear_home() ;
  const std::string& home() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_home(Arg_&& arg, Args_... args);
  std::string* mutable_home();
  PROTOBUF_NODISCARD std::string* release_home();
  void set_allocated_home(std::string* value);

  private:
  const std::string& _internal_home() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_home(
      const std::string& value);
  std::string* _internal_mutable_home();

  public:
  // string email = 1;
  bool has_email() const;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // string nickname = 2;
  bool has_nickname() const;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  void clear_user();
  UserCase user_case() const;
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.UserByEmailRequest)
 private:
  class _Internal;
  void set_has_email();
  void set_has_nickname();

  inline bool has_user() const;
  inline void clear_has_user();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 3, 0,
      59, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr home_;
    union UserUnion {
      constexpr UserUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr email_;
      ::google::protobuf::internal::ArenaStringPtr nickname_;
    } user_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class UidRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.UidRequest) */ {
 public:
  inline UidRequest() : UidRequest(nullptr) {}
  ~UidRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UidRequest(::google::protobuf::internal::ConstantInitialized);

  inline UidRequest(const UidRequest& from)
      : UidRequest(nullptr, from) {}
  UidRequest(UidRequest&& from) noexcept
    : UidRequest() {
    *this = ::std::move(from);
  }

  inline UidRequest& operator=(const UidRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UidRequest& operator=(UidRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UidRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UidRequest* internal_default_instance() {
    return reinterpret_cast<const UidRequest*>(
               &_UidRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(UidRequest& a, UidRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UidRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UidRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UidRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UidRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UidRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UidRequest& from) {
    UidRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UidRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.UidRequest";
  }
  protected:
  explicit UidRequest(::google::protobuf::Arena* arena);
  UidRequest(::google::protobuf::Arena* arena, const UidRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 1,
  };
  // string uid = 1;
  void clear_uid() ;
  const std::string& uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uid(Arg_&& arg, Args_... args);
  std::string* mutable_uid();
  PROTOBUF_NODISCARD std::string* release_uid();
  void set_allocated_uid(std::string* value);

  private:
  const std::string& _internal_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uid(
      const std::string& value);
  std::string* _internal_mutable_uid();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.UidRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      37, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr uid_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteStatusResponse_Redis final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteStatusResponse.Redis) */ {
 public:
  inline SiteStatusResponse_Redis() : SiteStatusResponse_Redis(nullptr) {}
  ~SiteStatusResponse_Redis() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteStatusResponse_Redis(::google::protobuf::internal::ConstantInitialized);

  inline SiteStatusResponse_Redis(const SiteStatusResponse_Redis& from)
      : SiteStatusResponse_Redis(nullptr, from) {}
  SiteStatusResponse_Redis(SiteStatusResponse_Redis&& from) noexcept
    : SiteStatusResponse_Redis() {
    *this = ::std::move(from);
  }

  inline SiteStatusResponse_Redis& operator=(const SiteStatusResponse_Redis& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteStatusResponse_Redis& operator=(SiteStatusResponse_Redis&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteStatusResponse_Redis& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteStatusResponse_Redis* internal_default_instance() {
    return reinterpret_cast<const SiteStatusResponse_Redis*>(
               &_SiteStatusResponse_Redis_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(SiteStatusResponse_Redis& a, SiteStatusResponse_Redis& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteStatusResponse_Redis* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteStatusResponse_Redis* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteStatusResponse_Redis* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteStatusResponse_Redis>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteStatusResponse_Redis& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteStatusResponse_Redis& from) {
    SiteStatusResponse_Redis::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteStatusResponse_Redis* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteStatusResponse.Redis";
  }
  protected:
  explicit SiteStatusResponse_Redis(::google::protobuf::Arena* arena);
  SiteStatusResponse_Redis(::google::protobuf::Arena* arena, const SiteStatusResponse_Redis& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kInfoFieldNumber = 1,
    kNodesFieldNumber = 2,
  };
  // repeated string info = 1;
  int info_size() const;
  private:
  int _internal_info_size() const;

  public:
  void clear_info() ;
  const std::string& info(int index) const;
  std::string* mutable_info(int index);
  void set_info(int index, const std::string& value);
  void set_info(int index, std::string&& value);
  void set_info(int index, const char* value);
  void set_info(int index, const char* value, std::size_t size);
  void set_info(int index, absl::string_view value);
  std::string* add_info();
  void add_info(const std::string& value);
  void add_info(std::string&& value);
  void add_info(const char* value);
  void add_info(const char* value, std::size_t size);
  void add_info(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& info() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_info();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_info() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_info();

  public:
  // repeated string nodes = 2;
  int nodes_size() const;
  private:
  int _internal_nodes_size() const;

  public:
  void clear_nodes() ;
  const std::string& nodes(int index) const;
  std::string* mutable_nodes(int index);
  void set_nodes(int index, const std::string& value);
  void set_nodes(int index, std::string&& value);
  void set_nodes(int index, const char* value);
  void set_nodes(int index, const char* value, std::size_t size);
  void set_nodes(int index, absl::string_view value);
  std::string* add_nodes();
  void add_nodes(const std::string& value);
  void add_nodes(std::string&& value);
  void add_nodes(const char* value);
  void add_nodes(const char* value, std::size_t size);
  void add_nodes(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& nodes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_nodes();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_nodes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_nodes();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteStatusResponse.Redis)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> info_;
    ::google::protobuf::RepeatedPtrField<std::string> nodes_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteStatusResponse_PostgreSql final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteStatusResponse.PostgreSql) */ {
 public:
  inline SiteStatusResponse_PostgreSql() : SiteStatusResponse_PostgreSql(nullptr) {}
  ~SiteStatusResponse_PostgreSql() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteStatusResponse_PostgreSql(::google::protobuf::internal::ConstantInitialized);

  inline SiteStatusResponse_PostgreSql(const SiteStatusResponse_PostgreSql& from)
      : SiteStatusResponse_PostgreSql(nullptr, from) {}
  SiteStatusResponse_PostgreSql(SiteStatusResponse_PostgreSql&& from) noexcept
    : SiteStatusResponse_PostgreSql() {
    *this = ::std::move(from);
  }

  inline SiteStatusResponse_PostgreSql& operator=(const SiteStatusResponse_PostgreSql& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteStatusResponse_PostgreSql& operator=(SiteStatusResponse_PostgreSql&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteStatusResponse_PostgreSql& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteStatusResponse_PostgreSql* internal_default_instance() {
    return reinterpret_cast<const SiteStatusResponse_PostgreSql*>(
               &_SiteStatusResponse_PostgreSql_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(SiteStatusResponse_PostgreSql& a, SiteStatusResponse_PostgreSql& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteStatusResponse_PostgreSql* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteStatusResponse_PostgreSql* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteStatusResponse_PostgreSql* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteStatusResponse_PostgreSql>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteStatusResponse_PostgreSql& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteStatusResponse_PostgreSql& from) {
    SiteStatusResponse_PostgreSql::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteStatusResponse_PostgreSql* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteStatusResponse.PostgreSql";
  }
  protected:
  explicit SiteStatusResponse_PostgreSql(::google::protobuf::Arena* arena);
  SiteStatusResponse_PostgreSql(::google::protobuf::Arena* arena, const SiteStatusResponse_PostgreSql& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVersionsFieldNumber = 2,
    kVersionFieldNumber = 1,
  };
  // repeated string versions = 2;
  int versions_size() const;
  private:
  int _internal_versions_size() const;

  public:
  void clear_versions() ;
  const std::string& versions(int index) const;
  std::string* mutable_versions(int index);
  void set_versions(int index, const std::string& value);
  void set_versions(int index, std::string&& value);
  void set_versions(int index, const char* value);
  void set_versions(int index, const char* value, std::size_t size);
  void set_versions(int index, absl::string_view value);
  std::string* add_versions();
  void add_versions(const std::string& value);
  void add_versions(std::string&& value);
  void add_versions(const char* value);
  void add_versions(const char* value, std::size_t size);
  void add_versions(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& versions() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_versions();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_versions() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_versions();

  public:
  // string version = 1;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteStatusResponse.PostgreSql)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      68, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> versions_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteStatusResponse_OpenSearch final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteStatusResponse.OpenSearch) */ {
 public:
  inline SiteStatusResponse_OpenSearch() : SiteStatusResponse_OpenSearch(nullptr) {}
  ~SiteStatusResponse_OpenSearch() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteStatusResponse_OpenSearch(::google::protobuf::internal::ConstantInitialized);

  inline SiteStatusResponse_OpenSearch(const SiteStatusResponse_OpenSearch& from)
      : SiteStatusResponse_OpenSearch(nullptr, from) {}
  SiteStatusResponse_OpenSearch(SiteStatusResponse_OpenSearch&& from) noexcept
    : SiteStatusResponse_OpenSearch() {
    *this = ::std::move(from);
  }

  inline SiteStatusResponse_OpenSearch& operator=(const SiteStatusResponse_OpenSearch& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteStatusResponse_OpenSearch& operator=(SiteStatusResponse_OpenSearch&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteStatusResponse_OpenSearch& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteStatusResponse_OpenSearch* internal_default_instance() {
    return reinterpret_cast<const SiteStatusResponse_OpenSearch*>(
               &_SiteStatusResponse_OpenSearch_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(SiteStatusResponse_OpenSearch& a, SiteStatusResponse_OpenSearch& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteStatusResponse_OpenSearch* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteStatusResponse_OpenSearch* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteStatusResponse_OpenSearch* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteStatusResponse_OpenSearch>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteStatusResponse_OpenSearch& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteStatusResponse_OpenSearch& from) {
    SiteStatusResponse_OpenSearch::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteStatusResponse_OpenSearch* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteStatusResponse.OpenSearch";
  }
  protected:
  explicit SiteStatusResponse_OpenSearch(::google::protobuf::Arena* arena);
  SiteStatusResponse_OpenSearch(::google::protobuf::Arena* arena, const SiteStatusResponse_OpenSearch& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPluginsFieldNumber = 1,
  };
  // string plugins = 1;
  void clear_plugins() ;
  const std::string& plugins() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_plugins(Arg_&& arg, Args_... args);
  std::string* mutable_plugins();
  PROTOBUF_NODISCARD std::string* release_plugins();
  void set_allocated_plugins(std::string* value);

  private:
  const std::string& _internal_plugins() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_plugins(
      const std::string& value);
  std::string* _internal_mutable_plugins();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteStatusResponse.OpenSearch)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      60, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr plugins_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteLayoutResponse_CnIcp final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteLayoutResponse.CnIcp) */ {
 public:
  inline SiteLayoutResponse_CnIcp() : SiteLayoutResponse_CnIcp(nullptr) {}
  ~SiteLayoutResponse_CnIcp() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteLayoutResponse_CnIcp(::google::protobuf::internal::ConstantInitialized);

  inline SiteLayoutResponse_CnIcp(const SiteLayoutResponse_CnIcp& from)
      : SiteLayoutResponse_CnIcp(nullptr, from) {}
  SiteLayoutResponse_CnIcp(SiteLayoutResponse_CnIcp&& from) noexcept
    : SiteLayoutResponse_CnIcp() {
    *this = ::std::move(from);
  }

  inline SiteLayoutResponse_CnIcp& operator=(const SiteLayoutResponse_CnIcp& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteLayoutResponse_CnIcp& operator=(SiteLayoutResponse_CnIcp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteLayoutResponse_CnIcp& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteLayoutResponse_CnIcp* internal_default_instance() {
    return reinterpret_cast<const SiteLayoutResponse_CnIcp*>(
               &_SiteLayoutResponse_CnIcp_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  friend void swap(SiteLayoutResponse_CnIcp& a, SiteLayoutResponse_CnIcp& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteLayoutResponse_CnIcp* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteLayoutResponse_CnIcp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteLayoutResponse_CnIcp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteLayoutResponse_CnIcp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteLayoutResponse_CnIcp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteLayoutResponse_CnIcp& from) {
    SiteLayoutResponse_CnIcp::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteLayoutResponse_CnIcp* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteLayoutResponse.CnIcp";
  }
  protected:
  explicit SiteLayoutResponse_CnIcp(::google::protobuf::Arena* arena);
  SiteLayoutResponse_CnIcp(::google::protobuf::Arena* arena, const SiteLayoutResponse_CnIcp& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 1,
  };
  // string code = 1;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteLayoutResponse.CnIcp)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      52, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteLayoutResponse_CnGab final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteLayoutResponse.CnGab) */ {
 public:
  inline SiteLayoutResponse_CnGab() : SiteLayoutResponse_CnGab(nullptr) {}
  ~SiteLayoutResponse_CnGab() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteLayoutResponse_CnGab(::google::protobuf::internal::ConstantInitialized);

  inline SiteLayoutResponse_CnGab(const SiteLayoutResponse_CnGab& from)
      : SiteLayoutResponse_CnGab(nullptr, from) {}
  SiteLayoutResponse_CnGab(SiteLayoutResponse_CnGab&& from) noexcept
    : SiteLayoutResponse_CnGab() {
    *this = ::std::move(from);
  }

  inline SiteLayoutResponse_CnGab& operator=(const SiteLayoutResponse_CnGab& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteLayoutResponse_CnGab& operator=(SiteLayoutResponse_CnGab&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteLayoutResponse_CnGab& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteLayoutResponse_CnGab* internal_default_instance() {
    return reinterpret_cast<const SiteLayoutResponse_CnGab*>(
               &_SiteLayoutResponse_CnGab_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  friend void swap(SiteLayoutResponse_CnGab& a, SiteLayoutResponse_CnGab& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteLayoutResponse_CnGab* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteLayoutResponse_CnGab* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteLayoutResponse_CnGab* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteLayoutResponse_CnGab>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteLayoutResponse_CnGab& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteLayoutResponse_CnGab& from) {
    SiteLayoutResponse_CnGab::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteLayoutResponse_CnGab* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteLayoutResponse.CnGab";
  }
  protected:
  explicit SiteLayoutResponse_CnGab(::google::protobuf::Arena* arena);
  SiteLayoutResponse_CnGab(::google::protobuf::Arena* arena, const SiteLayoutResponse_CnGab& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 1,
    kNameFieldNumber = 2,
  };
  // string code = 1;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteLayoutResponse.CnGab)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      56, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteLayoutResponse_Author final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteLayoutResponse.Author) */ {
 public:
  inline SiteLayoutResponse_Author() : SiteLayoutResponse_Author(nullptr) {}
  ~SiteLayoutResponse_Author() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteLayoutResponse_Author(::google::protobuf::internal::ConstantInitialized);

  inline SiteLayoutResponse_Author(const SiteLayoutResponse_Author& from)
      : SiteLayoutResponse_Author(nullptr, from) {}
  SiteLayoutResponse_Author(SiteLayoutResponse_Author&& from) noexcept
    : SiteLayoutResponse_Author() {
    *this = ::std::move(from);
  }

  inline SiteLayoutResponse_Author& operator=(const SiteLayoutResponse_Author& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteLayoutResponse_Author& operator=(SiteLayoutResponse_Author&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteLayoutResponse_Author& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteLayoutResponse_Author* internal_default_instance() {
    return reinterpret_cast<const SiteLayoutResponse_Author*>(
               &_SiteLayoutResponse_Author_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  friend void swap(SiteLayoutResponse_Author& a, SiteLayoutResponse_Author& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteLayoutResponse_Author* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteLayoutResponse_Author* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteLayoutResponse_Author* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteLayoutResponse_Author>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteLayoutResponse_Author& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteLayoutResponse_Author& from) {
    SiteLayoutResponse_Author::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteLayoutResponse_Author* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteLayoutResponse.Author";
  }
  protected:
  explicit SiteLayoutResponse_Author(::google::protobuf::Arena* arena);
  SiteLayoutResponse_Author(::google::protobuf::Arena* arena, const SiteLayoutResponse_Author& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kEmailFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string email = 2;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteLayoutResponse.Author)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      58, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr email_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteKeywordsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteKeywordsRequest) */ {
 public:
  inline SiteKeywordsRequest() : SiteKeywordsRequest(nullptr) {}
  ~SiteKeywordsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteKeywordsRequest(::google::protobuf::internal::ConstantInitialized);

  inline SiteKeywordsRequest(const SiteKeywordsRequest& from)
      : SiteKeywordsRequest(nullptr, from) {}
  SiteKeywordsRequest(SiteKeywordsRequest&& from) noexcept
    : SiteKeywordsRequest() {
    *this = ::std::move(from);
  }

  inline SiteKeywordsRequest& operator=(const SiteKeywordsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteKeywordsRequest& operator=(SiteKeywordsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteKeywordsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteKeywordsRequest* internal_default_instance() {
    return reinterpret_cast<const SiteKeywordsRequest*>(
               &_SiteKeywordsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  friend void swap(SiteKeywordsRequest& a, SiteKeywordsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteKeywordsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteKeywordsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteKeywordsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteKeywordsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteKeywordsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteKeywordsRequest& from) {
    SiteKeywordsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteKeywordsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteKeywordsRequest";
  }
  protected:
  explicit SiteKeywordsRequest(::google::protobuf::Arena* arena);
  SiteKeywordsRequest(::google::protobuf::Arena* arena, const SiteKeywordsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated string items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  const std::string& items(int index) const;
  std::string* mutable_items(int index);
  void set_items(int index, const std::string& value);
  void set_items(int index, std::string&& value);
  void set_items(int index, const char* value);
  void set_items(int index, const char* value, std::size_t size);
  void set_items(int index, absl::string_view value);
  std::string* add_items();
  void add_items(const std::string& value);
  void add_items(std::string&& value);
  void add_items(const char* value);
  void add_items(const char* value, std::size_t size);
  void add_items(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& items() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_items();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_items();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteKeywordsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      48, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField<std::string> items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteInfoRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteInfoRequest) */ {
 public:
  inline SiteInfoRequest() : SiteInfoRequest(nullptr) {}
  ~SiteInfoRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteInfoRequest(::google::protobuf::internal::ConstantInitialized);

  inline SiteInfoRequest(const SiteInfoRequest& from)
      : SiteInfoRequest(nullptr, from) {}
  SiteInfoRequest(SiteInfoRequest&& from) noexcept
    : SiteInfoRequest() {
    *this = ::std::move(from);
  }

  inline SiteInfoRequest& operator=(const SiteInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteInfoRequest& operator=(SiteInfoRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteInfoRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteInfoRequest* internal_default_instance() {
    return reinterpret_cast<const SiteInfoRequest*>(
               &_SiteInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  friend void swap(SiteInfoRequest& a, SiteInfoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteInfoRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteInfoRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteInfoRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteInfoRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteInfoRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteInfoRequest& from) {
    SiteInfoRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteInfoRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteInfoRequest";
  }
  protected:
  explicit SiteInfoRequest(::google::protobuf::Arena* arena);
  SiteInfoRequest(::google::protobuf::Arena* arena, const SiteInfoRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLangFieldNumber = 1,
    kTitleFieldNumber = 2,
    kSubheadFieldNumber = 3,
    kDescriptionFieldNumber = 4,
    kCopyrightFieldNumber = 5,
  };
  // string lang = 1;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // string title = 2;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string subhead = 3;
  void clear_subhead() ;
  const std::string& subhead() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subhead(Arg_&& arg, Args_... args);
  std::string* mutable_subhead();
  PROTOBUF_NODISCARD std::string* release_subhead();
  void set_allocated_subhead(std::string* value);

  private:
  const std::string& _internal_subhead() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subhead(
      const std::string& value);
  std::string* _internal_mutable_subhead();

  public:
  // string description = 4;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string copyright = 5;
  void clear_copyright() ;
  const std::string& copyright() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_copyright(Arg_&& arg, Args_... args);
  std::string* mutable_copyright();
  PROTOBUF_NODISCARD std::string* release_copyright();
  void set_allocated_copyright(std::string* value);

  private:
  const std::string& _internal_copyright() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_copyright(
      const std::string& value);
  std::string* _internal_mutable_copyright();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteInfoRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      75, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr lang_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr subhead_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr copyright_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteIndexNowAccount_WebSiteVerify final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteIndexNowAccount.WebSiteVerify) */ {
 public:
  inline SiteIndexNowAccount_WebSiteVerify() : SiteIndexNowAccount_WebSiteVerify(nullptr) {}
  ~SiteIndexNowAccount_WebSiteVerify() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteIndexNowAccount_WebSiteVerify(::google::protobuf::internal::ConstantInitialized);

  inline SiteIndexNowAccount_WebSiteVerify(const SiteIndexNowAccount_WebSiteVerify& from)
      : SiteIndexNowAccount_WebSiteVerify(nullptr, from) {}
  SiteIndexNowAccount_WebSiteVerify(SiteIndexNowAccount_WebSiteVerify&& from) noexcept
    : SiteIndexNowAccount_WebSiteVerify() {
    *this = ::std::move(from);
  }

  inline SiteIndexNowAccount_WebSiteVerify& operator=(const SiteIndexNowAccount_WebSiteVerify& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteIndexNowAccount_WebSiteVerify& operator=(SiteIndexNowAccount_WebSiteVerify&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteIndexNowAccount_WebSiteVerify& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteIndexNowAccount_WebSiteVerify* internal_default_instance() {
    return reinterpret_cast<const SiteIndexNowAccount_WebSiteVerify*>(
               &_SiteIndexNowAccount_WebSiteVerify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(SiteIndexNowAccount_WebSiteVerify& a, SiteIndexNowAccount_WebSiteVerify& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteIndexNowAccount_WebSiteVerify* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteIndexNowAccount_WebSiteVerify* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteIndexNowAccount_WebSiteVerify* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteIndexNowAccount_WebSiteVerify>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteIndexNowAccount_WebSiteVerify& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteIndexNowAccount_WebSiteVerify& from) {
    SiteIndexNowAccount_WebSiteVerify::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteIndexNowAccount_WebSiteVerify* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteIndexNowAccount.WebSiteVerify";
  }
  protected:
  explicit SiteIndexNowAccount_WebSiteVerify(::google::protobuf::Arena* arena);
  SiteIndexNowAccount_WebSiteVerify(::google::protobuf::Arena* arena, const SiteIndexNowAccount_WebSiteVerify& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKeyFieldNumber = 1,
  };
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteIndexNowAccount.WebSiteVerify)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      60, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr key_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteGoogleAccount_WebSiteVerify final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteGoogleAccount.WebSiteVerify) */ {
 public:
  inline SiteGoogleAccount_WebSiteVerify() : SiteGoogleAccount_WebSiteVerify(nullptr) {}
  ~SiteGoogleAccount_WebSiteVerify() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteGoogleAccount_WebSiteVerify(::google::protobuf::internal::ConstantInitialized);

  inline SiteGoogleAccount_WebSiteVerify(const SiteGoogleAccount_WebSiteVerify& from)
      : SiteGoogleAccount_WebSiteVerify(nullptr, from) {}
  SiteGoogleAccount_WebSiteVerify(SiteGoogleAccount_WebSiteVerify&& from) noexcept
    : SiteGoogleAccount_WebSiteVerify() {
    *this = ::std::move(from);
  }

  inline SiteGoogleAccount_WebSiteVerify& operator=(const SiteGoogleAccount_WebSiteVerify& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteGoogleAccount_WebSiteVerify& operator=(SiteGoogleAccount_WebSiteVerify&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteGoogleAccount_WebSiteVerify& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteGoogleAccount_WebSiteVerify* internal_default_instance() {
    return reinterpret_cast<const SiteGoogleAccount_WebSiteVerify*>(
               &_SiteGoogleAccount_WebSiteVerify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  friend void swap(SiteGoogleAccount_WebSiteVerify& a, SiteGoogleAccount_WebSiteVerify& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteGoogleAccount_WebSiteVerify* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteGoogleAccount_WebSiteVerify* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteGoogleAccount_WebSiteVerify* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteGoogleAccount_WebSiteVerify>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteGoogleAccount_WebSiteVerify& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteGoogleAccount_WebSiteVerify& from) {
    SiteGoogleAccount_WebSiteVerify::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteGoogleAccount_WebSiteVerify* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteGoogleAccount.WebSiteVerify";
  }
  protected:
  explicit SiteGoogleAccount_WebSiteVerify(::google::protobuf::Arena* arena);
  SiteGoogleAccount_WebSiteVerify(::google::protobuf::Arena* arena, const SiteGoogleAccount_WebSiteVerify& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 1,
  };
  // string code = 1;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteGoogleAccount.WebSiteVerify)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      59, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteGoogleAccount_ReCaptcha final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteGoogleAccount.ReCaptcha) */ {
 public:
  inline SiteGoogleAccount_ReCaptcha() : SiteGoogleAccount_ReCaptcha(nullptr) {}
  ~SiteGoogleAccount_ReCaptcha() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteGoogleAccount_ReCaptcha(::google::protobuf::internal::ConstantInitialized);

  inline SiteGoogleAccount_ReCaptcha(const SiteGoogleAccount_ReCaptcha& from)
      : SiteGoogleAccount_ReCaptcha(nullptr, from) {}
  SiteGoogleAccount_ReCaptcha(SiteGoogleAccount_ReCaptcha&& from) noexcept
    : SiteGoogleAccount_ReCaptcha() {
    *this = ::std::move(from);
  }

  inline SiteGoogleAccount_ReCaptcha& operator=(const SiteGoogleAccount_ReCaptcha& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteGoogleAccount_ReCaptcha& operator=(SiteGoogleAccount_ReCaptcha&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteGoogleAccount_ReCaptcha& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteGoogleAccount_ReCaptcha* internal_default_instance() {
    return reinterpret_cast<const SiteGoogleAccount_ReCaptcha*>(
               &_SiteGoogleAccount_ReCaptcha_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  friend void swap(SiteGoogleAccount_ReCaptcha& a, SiteGoogleAccount_ReCaptcha& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteGoogleAccount_ReCaptcha* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteGoogleAccount_ReCaptcha* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteGoogleAccount_ReCaptcha* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteGoogleAccount_ReCaptcha>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteGoogleAccount_ReCaptcha& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteGoogleAccount_ReCaptcha& from) {
    SiteGoogleAccount_ReCaptcha::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteGoogleAccount_ReCaptcha* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteGoogleAccount.ReCaptcha";
  }
  protected:
  explicit SiteGoogleAccount_ReCaptcha(::google::protobuf::Arena* arena);
  SiteGoogleAccount_ReCaptcha(::google::protobuf::Arena* arena, const SiteGoogleAccount_ReCaptcha& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSiteKeyFieldNumber = 1,
    kSecretFieldNumber = 2,
  };
  // string site_key = 1;
  void clear_site_key() ;
  const std::string& site_key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_site_key(Arg_&& arg, Args_... args);
  std::string* mutable_site_key();
  PROTOBUF_NODISCARD std::string* release_site_key();
  void set_allocated_site_key(std::string* value);

  private:
  const std::string& _internal_site_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_site_key(
      const std::string& value);
  std::string* _internal_mutable_site_key();

  public:
  // string secret = 2;
  void clear_secret() ;
  const std::string& secret() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_secret(Arg_&& arg, Args_... args);
  std::string* mutable_secret();
  PROTOBUF_NODISCARD std::string* release_secret();
  void set_allocated_secret(std::string* value);

  private:
  const std::string& _internal_secret() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_secret(
      const std::string& value);
  std::string* _internal_mutable_secret();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteGoogleAccount.ReCaptcha)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      65, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr site_key_;
    ::google::protobuf::internal::ArenaStringPtr secret_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteGetInfoByLangResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteGetInfoByLangResponse) */ {
 public:
  inline SiteGetInfoByLangResponse() : SiteGetInfoByLangResponse(nullptr) {}
  ~SiteGetInfoByLangResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteGetInfoByLangResponse(::google::protobuf::internal::ConstantInitialized);

  inline SiteGetInfoByLangResponse(const SiteGetInfoByLangResponse& from)
      : SiteGetInfoByLangResponse(nullptr, from) {}
  SiteGetInfoByLangResponse(SiteGetInfoByLangResponse&& from) noexcept
    : SiteGetInfoByLangResponse() {
    *this = ::std::move(from);
  }

  inline SiteGetInfoByLangResponse& operator=(const SiteGetInfoByLangResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteGetInfoByLangResponse& operator=(SiteGetInfoByLangResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteGetInfoByLangResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteGetInfoByLangResponse* internal_default_instance() {
    return reinterpret_cast<const SiteGetInfoByLangResponse*>(
               &_SiteGetInfoByLangResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  friend void swap(SiteGetInfoByLangResponse& a, SiteGetInfoByLangResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteGetInfoByLangResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteGetInfoByLangResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteGetInfoByLangResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteGetInfoByLangResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteGetInfoByLangResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteGetInfoByLangResponse& from) {
    SiteGetInfoByLangResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteGetInfoByLangResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteGetInfoByLangResponse";
  }
  protected:
  explicit SiteGetInfoByLangResponse(::google::protobuf::Arena* arena);
  SiteGetInfoByLangResponse(::google::protobuf::Arena* arena, const SiteGetInfoByLangResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTitleFieldNumber = 1,
    kSubheadFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kCopyrightFieldNumber = 4,
  };
  // string title = 1;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string subhead = 2;
  void clear_subhead() ;
  const std::string& subhead() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subhead(Arg_&& arg, Args_... args);
  std::string* mutable_subhead();
  PROTOBUF_NODISCARD std::string* release_subhead();
  void set_allocated_subhead(std::string* value);

  private:
  const std::string& _internal_subhead() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subhead(
      const std::string& value);
  std::string* _internal_mutable_subhead();

  public:
  // string description = 3;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string copyright = 4;
  void clear_copyright() ;
  const std::string& copyright() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_copyright(Arg_&& arg, Args_... args);
  std::string* mutable_copyright();
  PROTOBUF_NODISCARD std::string* release_copyright();
  void set_allocated_copyright(std::string* value);

  private:
  const std::string& _internal_copyright() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_copyright(
      const std::string& value);
  std::string* _internal_mutable_copyright();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteGetInfoByLangResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      81, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr subhead_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr copyright_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteGetInfoByLangRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteGetInfoByLangRequest) */ {
 public:
  inline SiteGetInfoByLangRequest() : SiteGetInfoByLangRequest(nullptr) {}
  ~SiteGetInfoByLangRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteGetInfoByLangRequest(::google::protobuf::internal::ConstantInitialized);

  inline SiteGetInfoByLangRequest(const SiteGetInfoByLangRequest& from)
      : SiteGetInfoByLangRequest(nullptr, from) {}
  SiteGetInfoByLangRequest(SiteGetInfoByLangRequest&& from) noexcept
    : SiteGetInfoByLangRequest() {
    *this = ::std::move(from);
  }

  inline SiteGetInfoByLangRequest& operator=(const SiteGetInfoByLangRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteGetInfoByLangRequest& operator=(SiteGetInfoByLangRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteGetInfoByLangRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteGetInfoByLangRequest* internal_default_instance() {
    return reinterpret_cast<const SiteGetInfoByLangRequest*>(
               &_SiteGetInfoByLangRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  friend void swap(SiteGetInfoByLangRequest& a, SiteGetInfoByLangRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteGetInfoByLangRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteGetInfoByLangRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteGetInfoByLangRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteGetInfoByLangRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteGetInfoByLangRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteGetInfoByLangRequest& from) {
    SiteGetInfoByLangRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteGetInfoByLangRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteGetInfoByLangRequest";
  }
  protected:
  explicit SiteGetInfoByLangRequest(::google::protobuf::Arena* arena);
  SiteGetInfoByLangRequest(::google::protobuf::Arena* arena, const SiteGetInfoByLangRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLangFieldNumber = 1,
  };
  // string lang = 1;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteGetInfoByLangRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      52, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr lang_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteBaiduAccount_WebSiteVerify final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteBaiduAccount.WebSiteVerify) */ {
 public:
  inline SiteBaiduAccount_WebSiteVerify() : SiteBaiduAccount_WebSiteVerify(nullptr) {}
  ~SiteBaiduAccount_WebSiteVerify() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteBaiduAccount_WebSiteVerify(::google::protobuf::internal::ConstantInitialized);

  inline SiteBaiduAccount_WebSiteVerify(const SiteBaiduAccount_WebSiteVerify& from)
      : SiteBaiduAccount_WebSiteVerify(nullptr, from) {}
  SiteBaiduAccount_WebSiteVerify(SiteBaiduAccount_WebSiteVerify&& from) noexcept
    : SiteBaiduAccount_WebSiteVerify() {
    *this = ::std::move(from);
  }

  inline SiteBaiduAccount_WebSiteVerify& operator=(const SiteBaiduAccount_WebSiteVerify& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteBaiduAccount_WebSiteVerify& operator=(SiteBaiduAccount_WebSiteVerify&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteBaiduAccount_WebSiteVerify& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteBaiduAccount_WebSiteVerify* internal_default_instance() {
    return reinterpret_cast<const SiteBaiduAccount_WebSiteVerify*>(
               &_SiteBaiduAccount_WebSiteVerify_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  friend void swap(SiteBaiduAccount_WebSiteVerify& a, SiteBaiduAccount_WebSiteVerify& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteBaiduAccount_WebSiteVerify* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteBaiduAccount_WebSiteVerify* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteBaiduAccount_WebSiteVerify* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteBaiduAccount_WebSiteVerify>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteBaiduAccount_WebSiteVerify& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteBaiduAccount_WebSiteVerify& from) {
    SiteBaiduAccount_WebSiteVerify::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteBaiduAccount_WebSiteVerify* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteBaiduAccount.WebSiteVerify";
  }
  protected:
  explicit SiteBaiduAccount_WebSiteVerify(::google::protobuf::Arena* arena);
  SiteBaiduAccount_WebSiteVerify(::google::protobuf::Arena* arena, const SiteBaiduAccount_WebSiteVerify& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 1,
    kContentFieldNumber = 2,
  };
  // string code = 1;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // string content = 2;
  void clear_content() ;
  const std::string& content() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content(Arg_&& arg, Args_... args);
  std::string* mutable_content();
  PROTOBUF_NODISCARD std::string* release_content();
  void set_allocated_content(std::string* value);

  private:
  const std::string& _internal_content() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content(
      const std::string& value);
  std::string* _internal_mutable_content();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteBaiduAccount.WebSiteVerify)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      65, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::google::protobuf::internal::ArenaStringPtr content_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class ResourceRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.ResourceRequest) */ {
 public:
  inline ResourceRequest() : ResourceRequest(nullptr) {}
  ~ResourceRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ResourceRequest(::google::protobuf::internal::ConstantInitialized);

  inline ResourceRequest(const ResourceRequest& from)
      : ResourceRequest(nullptr, from) {}
  ResourceRequest(ResourceRequest&& from) noexcept
    : ResourceRequest() {
    *this = ::std::move(from);
  }

  inline ResourceRequest& operator=(const ResourceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResourceRequest& operator=(ResourceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResourceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResourceRequest* internal_default_instance() {
    return reinterpret_cast<const ResourceRequest*>(
               &_ResourceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ResourceRequest& a, ResourceRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ResourceRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResourceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResourceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ResourceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResourceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ResourceRequest& from) {
    ResourceRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResourceRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.ResourceRequest";
  }
  protected:
  explicit ResourceRequest(::google::protobuf::Arena* arena);
  ResourceRequest(::google::protobuf::Arena* arena, const ResourceRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeFieldNumber = 1,
    kIdFieldNumber = 2,
  };
  // string type = 1;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // optional uint64 id = 2;
  bool has_id() const;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.ResourceRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      43, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::uint64_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class Pagination final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.Pagination) */ {
 public:
  inline Pagination() : Pagination(nullptr) {}
  ~Pagination() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Pagination(::google::protobuf::internal::ConstantInitialized);

  inline Pagination(const Pagination& from)
      : Pagination(nullptr, from) {}
  Pagination(Pagination&& from) noexcept
    : Pagination() {
    *this = ::std::move(from);
  }

  inline Pagination& operator=(const Pagination& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pagination& operator=(Pagination&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Pagination& default_instance() {
    return *internal_default_instance();
  }
  static inline const Pagination* internal_default_instance() {
    return reinterpret_cast<const Pagination*>(
               &_Pagination_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(Pagination& a, Pagination& b) {
    a.Swap(&b);
  }
  inline void Swap(Pagination* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pagination* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Pagination* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Pagination>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Pagination& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Pagination& from) {
    Pagination::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Pagination* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.Pagination";
  }
  protected:
  explicit Pagination(::google::protobuf::Arena* arena);
  Pagination(::google::protobuf::Arena* arena, const Pagination& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageFieldNumber = 1,
    kSizeFieldNumber = 2,
    kTotalFieldNumber = 3,
  };
  // int64 page = 1;
  void clear_page() ;
  ::int64_t page() const;
  void set_page(::int64_t value);

  private:
  ::int64_t _internal_page() const;
  void _internal_set_page(::int64_t value);

  public:
  // int64 size = 2;
  void clear_size() ;
  ::int64_t size() const;
  void set_size(::int64_t value);

  private:
  ::int64_t _internal_size() const;
  void _internal_set_size(::int64_t value);

  public:
  // int64 total = 3;
  void clear_total() ;
  ::int64_t total() const;
  void set_total(::int64_t value);

  private:
  ::int64_t _internal_total() const;
  void _internal_set_total(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.Pagination)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t page_;
    ::int64_t size_;
    ::int64_t total_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class Pager final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.Pager) */ {
 public:
  inline Pager() : Pager(nullptr) {}
  ~Pager() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR Pager(::google::protobuf::internal::ConstantInitialized);

  inline Pager(const Pager& from)
      : Pager(nullptr, from) {}
  Pager(Pager&& from) noexcept
    : Pager() {
    *this = ::std::move(from);
  }

  inline Pager& operator=(const Pager& from) {
    CopyFrom(from);
    return *this;
  }
  inline Pager& operator=(Pager&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Pager& default_instance() {
    return *internal_default_instance();
  }
  static inline const Pager* internal_default_instance() {
    return reinterpret_cast<const Pager*>(
               &_Pager_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(Pager& a, Pager& b) {
    a.Swap(&b);
  }
  inline void Swap(Pager* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Pager* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Pager* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Pager>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Pager& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const Pager& from) {
    Pager::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Pager* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.Pager";
  }
  protected:
  explicit Pager(::google::protobuf::Arena* arena);
  Pager(::google::protobuf::Arena* arena, const Pager& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPageFieldNumber = 1,
    kSizeFieldNumber = 2,
  };
  // int64 page = 1;
  void clear_page() ;
  ::int64_t page() const;
  void set_page(::int64_t value);

  private:
  ::int64_t _internal_page() const;
  void _internal_set_page(::int64_t value);

  public:
  // int64 size = 2;
  void clear_size() ;
  ::int64_t size() const;
  void set_size(::int64_t value);

  private:
  ::int64_t _internal_size() const;
  void _internal_set_size(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.Pager)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t page_;
    ::int64_t size_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class LocaleSetRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.LocaleSetRequest) */ {
 public:
  inline LocaleSetRequest() : LocaleSetRequest(nullptr) {}
  ~LocaleSetRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LocaleSetRequest(::google::protobuf::internal::ConstantInitialized);

  inline LocaleSetRequest(const LocaleSetRequest& from)
      : LocaleSetRequest(nullptr, from) {}
  LocaleSetRequest(LocaleSetRequest&& from) noexcept
    : LocaleSetRequest() {
    *this = ::std::move(from);
  }

  inline LocaleSetRequest& operator=(const LocaleSetRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocaleSetRequest& operator=(LocaleSetRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LocaleSetRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LocaleSetRequest* internal_default_instance() {
    return reinterpret_cast<const LocaleSetRequest*>(
               &_LocaleSetRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(LocaleSetRequest& a, LocaleSetRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LocaleSetRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocaleSetRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LocaleSetRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LocaleSetRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LocaleSetRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LocaleSetRequest& from) {
    LocaleSetRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LocaleSetRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.LocaleSetRequest";
  }
  protected:
  explicit LocaleSetRequest(::google::protobuf::Arena* arena);
  LocaleSetRequest(::google::protobuf::Arena* arena, const LocaleSetRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLangFieldNumber = 1,
    kCodeFieldNumber = 2,
    kMessageFieldNumber = 3,
  };
  // string lang = 1;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // string code = 2;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // string message = 3;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.LocaleSetRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      55, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr lang_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class LocaleByLangRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.LocaleByLangRequest) */ {
 public:
  inline LocaleByLangRequest() : LocaleByLangRequest(nullptr) {}
  ~LocaleByLangRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LocaleByLangRequest(::google::protobuf::internal::ConstantInitialized);

  inline LocaleByLangRequest(const LocaleByLangRequest& from)
      : LocaleByLangRequest(nullptr, from) {}
  LocaleByLangRequest(LocaleByLangRequest&& from) noexcept
    : LocaleByLangRequest() {
    *this = ::std::move(from);
  }

  inline LocaleByLangRequest& operator=(const LocaleByLangRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocaleByLangRequest& operator=(LocaleByLangRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LocaleByLangRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LocaleByLangRequest* internal_default_instance() {
    return reinterpret_cast<const LocaleByLangRequest*>(
               &_LocaleByLangRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(LocaleByLangRequest& a, LocaleByLangRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LocaleByLangRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocaleByLangRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LocaleByLangRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LocaleByLangRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LocaleByLangRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LocaleByLangRequest& from) {
    LocaleByLangRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LocaleByLangRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.LocaleByLangRequest";
  }
  protected:
  explicit LocaleByLangRequest(::google::protobuf::Arena* arena);
  LocaleByLangRequest(::google::protobuf::Arena* arena, const LocaleByLangRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLangFieldNumber = 1,
  };
  // string lang = 1;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.LocaleByLangRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      47, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr lang_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class LeaveWordCreateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.LeaveWordCreateRequest) */ {
 public:
  inline LeaveWordCreateRequest() : LeaveWordCreateRequest(nullptr) {}
  ~LeaveWordCreateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LeaveWordCreateRequest(::google::protobuf::internal::ConstantInitialized);

  inline LeaveWordCreateRequest(const LeaveWordCreateRequest& from)
      : LeaveWordCreateRequest(nullptr, from) {}
  LeaveWordCreateRequest(LeaveWordCreateRequest&& from) noexcept
    : LeaveWordCreateRequest() {
    *this = ::std::move(from);
  }

  inline LeaveWordCreateRequest& operator=(const LeaveWordCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaveWordCreateRequest& operator=(LeaveWordCreateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaveWordCreateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const LeaveWordCreateRequest* internal_default_instance() {
    return reinterpret_cast<const LeaveWordCreateRequest*>(
               &_LeaveWordCreateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(LeaveWordCreateRequest& a, LeaveWordCreateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(LeaveWordCreateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaveWordCreateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaveWordCreateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LeaveWordCreateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaveWordCreateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LeaveWordCreateRequest& from) {
    LeaveWordCreateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LeaveWordCreateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.LeaveWordCreateRequest";
  }
  protected:
  explicit LeaveWordCreateRequest(::google::protobuf::Arena* arena);
  LeaveWordCreateRequest(::google::protobuf::Arena* arena, const LeaveWordCreateRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBodyFieldNumber = 1,
    kEditorFieldNumber = 2,
  };
  // string body = 1;
  void clear_body() ;
  const std::string& body() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_body(Arg_&& arg, Args_... args);
  std::string* mutable_body();
  PROTOBUF_NODISCARD std::string* release_body();
  void set_allocated_body(std::string* value);

  private:
  const std::string& _internal_body() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_body(
      const std::string& value);
  std::string* _internal_mutable_body();

  public:
  // .palm.balsam.v1.MediaEditor editor = 2;
  void clear_editor() ;
  ::palm::balsam::v1::MediaEditor editor() const;
  void set_editor(::palm::balsam::v1::MediaEditor value);

  private:
  ::palm::balsam::v1::MediaEditor _internal_editor() const;
  void _internal_set_editor(::palm::balsam::v1::MediaEditor value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.LeaveWordCreateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      50, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr body_;
    int editor_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class JwtVerifyResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.JwtVerifyResponse) */ {
 public:
  inline JwtVerifyResponse() : JwtVerifyResponse(nullptr) {}
  ~JwtVerifyResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR JwtVerifyResponse(::google::protobuf::internal::ConstantInitialized);

  inline JwtVerifyResponse(const JwtVerifyResponse& from)
      : JwtVerifyResponse(nullptr, from) {}
  JwtVerifyResponse(JwtVerifyResponse&& from) noexcept
    : JwtVerifyResponse() {
    *this = ::std::move(from);
  }

  inline JwtVerifyResponse& operator=(const JwtVerifyResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline JwtVerifyResponse& operator=(JwtVerifyResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JwtVerifyResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const JwtVerifyResponse* internal_default_instance() {
    return reinterpret_cast<const JwtVerifyResponse*>(
               &_JwtVerifyResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(JwtVerifyResponse& a, JwtVerifyResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(JwtVerifyResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JwtVerifyResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JwtVerifyResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JwtVerifyResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JwtVerifyResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const JwtVerifyResponse& from) {
    JwtVerifyResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(JwtVerifyResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.JwtVerifyResponse";
  }
  protected:
  explicit JwtVerifyResponse(::google::protobuf::Arena* arena);
  JwtVerifyResponse(::google::protobuf::Arena* arena, const JwtVerifyResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJwtIdFieldNumber = 1,
    kKeyIdFieldNumber = 2,
    kSubjectFieldNumber = 11,
    kExtraFieldNumber = 19,
  };
  // string jwt_id = 1;
  void clear_jwt_id() ;
  const std::string& jwt_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_jwt_id(Arg_&& arg, Args_... args);
  std::string* mutable_jwt_id();
  PROTOBUF_NODISCARD std::string* release_jwt_id();
  void set_allocated_jwt_id(std::string* value);

  private:
  const std::string& _internal_jwt_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_jwt_id(
      const std::string& value);
  std::string* _internal_mutable_jwt_id();

  public:
  // optional string key_id = 2;
  bool has_key_id() const;
  void clear_key_id() ;
  const std::string& key_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key_id(Arg_&& arg, Args_... args);
  std::string* mutable_key_id();
  PROTOBUF_NODISCARD std::string* release_key_id();
  void set_allocated_key_id(std::string* value);

  private:
  const std::string& _internal_key_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key_id(
      const std::string& value);
  std::string* _internal_mutable_key_id();

  public:
  // string subject = 11;
  void clear_subject() ;
  const std::string& subject() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subject(Arg_&& arg, Args_... args);
  std::string* mutable_subject();
  PROTOBUF_NODISCARD std::string* release_subject();
  void set_allocated_subject(std::string* value);

  private:
  const std::string& _internal_subject() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subject(
      const std::string& value);
  std::string* _internal_mutable_subject();

  public:
  // optional string extra = 19;
  bool has_extra() const;
  void clear_extra() ;
  const std::string& extra() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_extra(Arg_&& arg, Args_... args);
  std::string* mutable_extra();
  PROTOBUF_NODISCARD std::string* release_extra();
  void set_allocated_extra(std::string* value);

  private:
  const std::string& _internal_extra() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_extra(
      const std::string& value);
  std::string* _internal_mutable_extra();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.JwtVerifyResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      65, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr jwt_id_;
    ::google::protobuf::internal::ArenaStringPtr key_id_;
    ::google::protobuf::internal::ArenaStringPtr subject_;
    ::google::protobuf::internal::ArenaStringPtr extra_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class JwtVerifyRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.JwtVerifyRequest) */ {
 public:
  inline JwtVerifyRequest() : JwtVerifyRequest(nullptr) {}
  ~JwtVerifyRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR JwtVerifyRequest(::google::protobuf::internal::ConstantInitialized);

  inline JwtVerifyRequest(const JwtVerifyRequest& from)
      : JwtVerifyRequest(nullptr, from) {}
  JwtVerifyRequest(JwtVerifyRequest&& from) noexcept
    : JwtVerifyRequest() {
    *this = ::std::move(from);
  }

  inline JwtVerifyRequest& operator=(const JwtVerifyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline JwtVerifyRequest& operator=(JwtVerifyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JwtVerifyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const JwtVerifyRequest* internal_default_instance() {
    return reinterpret_cast<const JwtVerifyRequest*>(
               &_JwtVerifyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(JwtVerifyRequest& a, JwtVerifyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(JwtVerifyRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JwtVerifyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JwtVerifyRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JwtVerifyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JwtVerifyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const JwtVerifyRequest& from) {
    JwtVerifyRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(JwtVerifyRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.JwtVerifyRequest";
  }
  protected:
  explicit JwtVerifyRequest(::google::protobuf::Arena* arena);
  JwtVerifyRequest(::google::protobuf::Arena* arena, const JwtVerifyRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokenFieldNumber = 1,
    kIssuerFieldNumber = 2,
    kAudienceFieldNumber = 3,
  };
  // string token = 1;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // string issuer = 2;
  void clear_issuer() ;
  const std::string& issuer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_issuer(Arg_&& arg, Args_... args);
  std::string* mutable_issuer();
  PROTOBUF_NODISCARD std::string* release_issuer();
  void set_allocated_issuer(std::string* value);

  private:
  const std::string& _internal_issuer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_issuer(
      const std::string& value);
  std::string* _internal_mutable_issuer();

  public:
  // string audience = 3;
  void clear_audience() ;
  const std::string& audience() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_audience(Arg_&& arg, Args_... args);
  std::string* mutable_audience();
  PROTOBUF_NODISCARD std::string* release_audience();
  void set_allocated_audience(std::string* value);

  private:
  const std::string& _internal_audience() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_audience(
      const std::string& value);
  std::string* _internal_mutable_audience();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.JwtVerifyRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      59, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::google::protobuf::internal::ArenaStringPtr issuer_;
    ::google::protobuf::internal::ArenaStringPtr audience_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class JwtSignResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.JwtSignResponse) */ {
 public:
  inline JwtSignResponse() : JwtSignResponse(nullptr) {}
  ~JwtSignResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR JwtSignResponse(::google::protobuf::internal::ConstantInitialized);

  inline JwtSignResponse(const JwtSignResponse& from)
      : JwtSignResponse(nullptr, from) {}
  JwtSignResponse(JwtSignResponse&& from) noexcept
    : JwtSignResponse() {
    *this = ::std::move(from);
  }

  inline JwtSignResponse& operator=(const JwtSignResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline JwtSignResponse& operator=(JwtSignResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JwtSignResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const JwtSignResponse* internal_default_instance() {
    return reinterpret_cast<const JwtSignResponse*>(
               &_JwtSignResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(JwtSignResponse& a, JwtSignResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(JwtSignResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JwtSignResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JwtSignResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JwtSignResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JwtSignResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const JwtSignResponse& from) {
    JwtSignResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(JwtSignResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.JwtSignResponse";
  }
  protected:
  explicit JwtSignResponse(::google::protobuf::Arena* arena);
  JwtSignResponse(::google::protobuf::Arena* arena, const JwtSignResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTokenFieldNumber = 1,
  };
  // string token = 1;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.JwtSignResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      44, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr token_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class IdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.IdRequest) */ {
 public:
  inline IdRequest() : IdRequest(nullptr) {}
  ~IdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR IdRequest(::google::protobuf::internal::ConstantInitialized);

  inline IdRequest(const IdRequest& from)
      : IdRequest(nullptr, from) {}
  IdRequest(IdRequest&& from) noexcept
    : IdRequest() {
    *this = ::std::move(from);
  }

  inline IdRequest& operator=(const IdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline IdRequest& operator=(IdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const IdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const IdRequest* internal_default_instance() {
    return reinterpret_cast<const IdRequest*>(
               &_IdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(IdRequest& a, IdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(IdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  IdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<IdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const IdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const IdRequest& from) {
    IdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(IdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.IdRequest";
  }
  protected:
  explicit IdRequest(::google::protobuf::Arena* arena);
  IdRequest(::google::protobuf::Arena* arena, const IdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
  };
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.IdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint64_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class HMacVerifyRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.HMacVerifyRequest) */ {
 public:
  inline HMacVerifyRequest() : HMacVerifyRequest(nullptr) {}
  ~HMacVerifyRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR HMacVerifyRequest(::google::protobuf::internal::ConstantInitialized);

  inline HMacVerifyRequest(const HMacVerifyRequest& from)
      : HMacVerifyRequest(nullptr, from) {}
  HMacVerifyRequest(HMacVerifyRequest&& from) noexcept
    : HMacVerifyRequest() {
    *this = ::std::move(from);
  }

  inline HMacVerifyRequest& operator=(const HMacVerifyRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline HMacVerifyRequest& operator=(HMacVerifyRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HMacVerifyRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const HMacVerifyRequest* internal_default_instance() {
    return reinterpret_cast<const HMacVerifyRequest*>(
               &_HMacVerifyRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(HMacVerifyRequest& a, HMacVerifyRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(HMacVerifyRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HMacVerifyRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HMacVerifyRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HMacVerifyRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HMacVerifyRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const HMacVerifyRequest& from) {
    HMacVerifyRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HMacVerifyRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.HMacVerifyRequest";
  }
  protected:
  explicit HMacVerifyRequest(::google::protobuf::Arena* arena);
  HMacVerifyRequest(::google::protobuf::Arena* arena, const HMacVerifyRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlainFieldNumber = 1,
    kCodeFieldNumber = 2,
    kSaltFieldNumber = 3,
  };
  // bytes plain = 1;
  void clear_plain() ;
  const std::string& plain() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_plain(Arg_&& arg, Args_... args);
  std::string* mutable_plain();
  PROTOBUF_NODISCARD std::string* release_plain();
  void set_allocated_plain(std::string* value);

  private:
  const std::string& _internal_plain() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_plain(
      const std::string& value);
  std::string* _internal_mutable_plain();

  public:
  // bytes code = 2;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // bytes salt = 3;
  void clear_salt() ;
  const std::string& salt() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_salt(Arg_&& arg, Args_... args);
  std::string* mutable_salt();
  PROTOBUF_NODISCARD std::string* release_salt();
  void set_allocated_salt(std::string* value);

  private:
  const std::string& _internal_salt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_salt(
      const std::string& value);
  std::string* _internal_mutable_salt();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.HMacVerifyRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr plain_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::google::protobuf::internal::ArenaStringPtr salt_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class HMacSignResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.HMacSignResponse) */ {
 public:
  inline HMacSignResponse() : HMacSignResponse(nullptr) {}
  ~HMacSignResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR HMacSignResponse(::google::protobuf::internal::ConstantInitialized);

  inline HMacSignResponse(const HMacSignResponse& from)
      : HMacSignResponse(nullptr, from) {}
  HMacSignResponse(HMacSignResponse&& from) noexcept
    : HMacSignResponse() {
    *this = ::std::move(from);
  }

  inline HMacSignResponse& operator=(const HMacSignResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline HMacSignResponse& operator=(HMacSignResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HMacSignResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const HMacSignResponse* internal_default_instance() {
    return reinterpret_cast<const HMacSignResponse*>(
               &_HMacSignResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(HMacSignResponse& a, HMacSignResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(HMacSignResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HMacSignResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HMacSignResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HMacSignResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HMacSignResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const HMacSignResponse& from) {
    HMacSignResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HMacSignResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.HMacSignResponse";
  }
  protected:
  explicit HMacSignResponse(::google::protobuf::Arena* arena);
  HMacSignResponse(::google::protobuf::Arena* arena, const HMacSignResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCodeFieldNumber = 1,
    kSaltFieldNumber = 2,
  };
  // bytes code = 1;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // bytes salt = 2;
  void clear_salt() ;
  const std::string& salt() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_salt(Arg_&& arg, Args_... args);
  std::string* mutable_salt();
  PROTOBUF_NODISCARD std::string* release_salt();
  void set_allocated_salt(std::string* value);

  private:
  const std::string& _internal_salt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_salt(
      const std::string& value);
  std::string* _internal_mutable_salt();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.HMacSignResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::google::protobuf::internal::ArenaStringPtr salt_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class HMacSignRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.HMacSignRequest) */ {
 public:
  inline HMacSignRequest() : HMacSignRequest(nullptr) {}
  ~HMacSignRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR HMacSignRequest(::google::protobuf::internal::ConstantInitialized);

  inline HMacSignRequest(const HMacSignRequest& from)
      : HMacSignRequest(nullptr, from) {}
  HMacSignRequest(HMacSignRequest&& from) noexcept
    : HMacSignRequest() {
    *this = ::std::move(from);
  }

  inline HMacSignRequest& operator=(const HMacSignRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline HMacSignRequest& operator=(HMacSignRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HMacSignRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const HMacSignRequest* internal_default_instance() {
    return reinterpret_cast<const HMacSignRequest*>(
               &_HMacSignRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(HMacSignRequest& a, HMacSignRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(HMacSignRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HMacSignRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HMacSignRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HMacSignRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HMacSignRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const HMacSignRequest& from) {
    HMacSignRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HMacSignRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.HMacSignRequest";
  }
  protected:
  explicit HMacSignRequest(::google::protobuf::Arena* arena);
  HMacSignRequest(::google::protobuf::Arena* arena, const HMacSignRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPlainFieldNumber = 1,
  };
  // bytes plain = 1;
  void clear_plain() ;
  const std::string& plain() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_plain(Arg_&& arg, Args_... args);
  std::string* mutable_plain();
  PROTOBUF_NODISCARD std::string* release_plain();
  void set_allocated_plain(std::string* value);

  private:
  const std::string& _internal_plain() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_plain(
      const std::string& value);
  std::string* _internal_mutable_plain();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.HMacSignRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr plain_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class GoogleOauth2UserBySubjectRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.GoogleOauth2UserBySubjectRequest) */ {
 public:
  inline GoogleOauth2UserBySubjectRequest() : GoogleOauth2UserBySubjectRequest(nullptr) {}
  ~GoogleOauth2UserBySubjectRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GoogleOauth2UserBySubjectRequest(::google::protobuf::internal::ConstantInitialized);

  inline GoogleOauth2UserBySubjectRequest(const GoogleOauth2UserBySubjectRequest& from)
      : GoogleOauth2UserBySubjectRequest(nullptr, from) {}
  GoogleOauth2UserBySubjectRequest(GoogleOauth2UserBySubjectRequest&& from) noexcept
    : GoogleOauth2UserBySubjectRequest() {
    *this = ::std::move(from);
  }

  inline GoogleOauth2UserBySubjectRequest& operator=(const GoogleOauth2UserBySubjectRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GoogleOauth2UserBySubjectRequest& operator=(GoogleOauth2UserBySubjectRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GoogleOauth2UserBySubjectRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GoogleOauth2UserBySubjectRequest* internal_default_instance() {
    return reinterpret_cast<const GoogleOauth2UserBySubjectRequest*>(
               &_GoogleOauth2UserBySubjectRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(GoogleOauth2UserBySubjectRequest& a, GoogleOauth2UserBySubjectRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GoogleOauth2UserBySubjectRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GoogleOauth2UserBySubjectRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GoogleOauth2UserBySubjectRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GoogleOauth2UserBySubjectRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GoogleOauth2UserBySubjectRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GoogleOauth2UserBySubjectRequest& from) {
    GoogleOauth2UserBySubjectRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GoogleOauth2UserBySubjectRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.GoogleOauth2UserBySubjectRequest";
  }
  protected:
  explicit GoogleOauth2UserBySubjectRequest(::google::protobuf::Arena* arena);
  GoogleOauth2UserBySubjectRequest(::google::protobuf::Arena* arena, const GoogleOauth2UserBySubjectRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubjectFieldNumber = 1,
  };
  // string subject = 1;
  void clear_subject() ;
  const std::string& subject() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subject(Arg_&& arg, Args_... args);
  std::string* mutable_subject();
  PROTOBUF_NODISCARD std::string* release_subject();
  void set_allocated_subject(std::string* value);

  private:
  const std::string& _internal_subject() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subject(
      const std::string& value);
  std::string* _internal_mutable_subject();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.GoogleOauth2UserBySubjectRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      63, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr subject_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class EmailUserByNicknameRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.EmailUserByNicknameRequest) */ {
 public:
  inline EmailUserByNicknameRequest() : EmailUserByNicknameRequest(nullptr) {}
  ~EmailUserByNicknameRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EmailUserByNicknameRequest(::google::protobuf::internal::ConstantInitialized);

  inline EmailUserByNicknameRequest(const EmailUserByNicknameRequest& from)
      : EmailUserByNicknameRequest(nullptr, from) {}
  EmailUserByNicknameRequest(EmailUserByNicknameRequest&& from) noexcept
    : EmailUserByNicknameRequest() {
    *this = ::std::move(from);
  }

  inline EmailUserByNicknameRequest& operator=(const EmailUserByNicknameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmailUserByNicknameRequest& operator=(EmailUserByNicknameRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmailUserByNicknameRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmailUserByNicknameRequest* internal_default_instance() {
    return reinterpret_cast<const EmailUserByNicknameRequest*>(
               &_EmailUserByNicknameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(EmailUserByNicknameRequest& a, EmailUserByNicknameRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(EmailUserByNicknameRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmailUserByNicknameRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmailUserByNicknameRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EmailUserByNicknameRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EmailUserByNicknameRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EmailUserByNicknameRequest& from) {
    EmailUserByNicknameRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EmailUserByNicknameRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.EmailUserByNicknameRequest";
  }
  protected:
  explicit EmailUserByNicknameRequest(::google::protobuf::Arena* arena);
  EmailUserByNicknameRequest(::google::protobuf::Arena* arena, const EmailUserByNicknameRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNicknameFieldNumber = 1,
  };
  // string nickname = 1;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.EmailUserByNicknameRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      58, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class EmailUserByEmailRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.EmailUserByEmailRequest) */ {
 public:
  inline EmailUserByEmailRequest() : EmailUserByEmailRequest(nullptr) {}
  ~EmailUserByEmailRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EmailUserByEmailRequest(::google::protobuf::internal::ConstantInitialized);

  inline EmailUserByEmailRequest(const EmailUserByEmailRequest& from)
      : EmailUserByEmailRequest(nullptr, from) {}
  EmailUserByEmailRequest(EmailUserByEmailRequest&& from) noexcept
    : EmailUserByEmailRequest() {
    *this = ::std::move(from);
  }

  inline EmailUserByEmailRequest& operator=(const EmailUserByEmailRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmailUserByEmailRequest& operator=(EmailUserByEmailRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmailUserByEmailRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmailUserByEmailRequest* internal_default_instance() {
    return reinterpret_cast<const EmailUserByEmailRequest*>(
               &_EmailUserByEmailRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(EmailUserByEmailRequest& a, EmailUserByEmailRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(EmailUserByEmailRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmailUserByEmailRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmailUserByEmailRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EmailUserByEmailRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EmailUserByEmailRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EmailUserByEmailRequest& from) {
    EmailUserByEmailRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EmailUserByEmailRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.EmailUserByEmailRequest";
  }
  protected:
  explicit EmailUserByEmailRequest(::google::protobuf::Arena* arena);
  EmailUserByEmailRequest(::google::protobuf::Arena* arena, const EmailUserByEmailRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEmailFieldNumber = 1,
  };
  // string email = 1;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.EmailUserByEmailRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      52, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr email_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class AttachmentShowResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.AttachmentShowResponse) */ {
 public:
  inline AttachmentShowResponse() : AttachmentShowResponse(nullptr) {}
  ~AttachmentShowResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AttachmentShowResponse(::google::protobuf::internal::ConstantInitialized);

  inline AttachmentShowResponse(const AttachmentShowResponse& from)
      : AttachmentShowResponse(nullptr, from) {}
  AttachmentShowResponse(AttachmentShowResponse&& from) noexcept
    : AttachmentShowResponse() {
    *this = ::std::move(from);
  }

  inline AttachmentShowResponse& operator=(const AttachmentShowResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttachmentShowResponse& operator=(AttachmentShowResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AttachmentShowResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AttachmentShowResponse* internal_default_instance() {
    return reinterpret_cast<const AttachmentShowResponse*>(
               &_AttachmentShowResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(AttachmentShowResponse& a, AttachmentShowResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AttachmentShowResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AttachmentShowResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AttachmentShowResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AttachmentShowResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AttachmentShowResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AttachmentShowResponse& from) {
    AttachmentShowResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AttachmentShowResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.AttachmentShowResponse";
  }
  protected:
  explicit AttachmentShowResponse(::google::protobuf::Arena* arena);
  AttachmentShowResponse(::google::protobuf::Arena* arena, const AttachmentShowResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUrlFieldNumber = 1,
  };
  // string url = 1;
  void clear_url() ;
  const std::string& url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_url(Arg_&& arg, Args_... args);
  std::string* mutable_url();
  PROTOBUF_NODISCARD std::string* release_url();
  void set_allocated_url(std::string* value);

  private:
  const std::string& _internal_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_url(
      const std::string& value);
  std::string* _internal_mutable_url();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.AttachmentShowResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr url_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class AttachmentSetTitleRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.AttachmentSetTitleRequest) */ {
 public:
  inline AttachmentSetTitleRequest() : AttachmentSetTitleRequest(nullptr) {}
  ~AttachmentSetTitleRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AttachmentSetTitleRequest(::google::protobuf::internal::ConstantInitialized);

  inline AttachmentSetTitleRequest(const AttachmentSetTitleRequest& from)
      : AttachmentSetTitleRequest(nullptr, from) {}
  AttachmentSetTitleRequest(AttachmentSetTitleRequest&& from) noexcept
    : AttachmentSetTitleRequest() {
    *this = ::std::move(from);
  }

  inline AttachmentSetTitleRequest& operator=(const AttachmentSetTitleRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttachmentSetTitleRequest& operator=(AttachmentSetTitleRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AttachmentSetTitleRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AttachmentSetTitleRequest* internal_default_instance() {
    return reinterpret_cast<const AttachmentSetTitleRequest*>(
               &_AttachmentSetTitleRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(AttachmentSetTitleRequest& a, AttachmentSetTitleRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AttachmentSetTitleRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AttachmentSetTitleRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AttachmentSetTitleRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AttachmentSetTitleRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AttachmentSetTitleRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AttachmentSetTitleRequest& from) {
    AttachmentSetTitleRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AttachmentSetTitleRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.AttachmentSetTitleRequest";
  }
  protected:
  explicit AttachmentSetTitleRequest(::google::protobuf::Arena* arena);
  AttachmentSetTitleRequest(::google::protobuf::Arena* arena, const AttachmentSetTitleRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTitleFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // string title = 2;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.AttachmentSetTitleRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      54, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::uint64_t id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class AttachmentResourceRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.AttachmentResourceRequest) */ {
 public:
  inline AttachmentResourceRequest() : AttachmentResourceRequest(nullptr) {}
  ~AttachmentResourceRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AttachmentResourceRequest(::google::protobuf::internal::ConstantInitialized);

  inline AttachmentResourceRequest(const AttachmentResourceRequest& from)
      : AttachmentResourceRequest(nullptr, from) {}
  AttachmentResourceRequest(AttachmentResourceRequest&& from) noexcept
    : AttachmentResourceRequest() {
    *this = ::std::move(from);
  }

  inline AttachmentResourceRequest& operator=(const AttachmentResourceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttachmentResourceRequest& operator=(AttachmentResourceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AttachmentResourceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AttachmentResourceRequest* internal_default_instance() {
    return reinterpret_cast<const AttachmentResourceRequest*>(
               &_AttachmentResourceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(AttachmentResourceRequest& a, AttachmentResourceRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AttachmentResourceRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AttachmentResourceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AttachmentResourceRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AttachmentResourceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AttachmentResourceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AttachmentResourceRequest& from) {
    AttachmentResourceRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AttachmentResourceRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.AttachmentResourceRequest";
  }
  protected:
  explicit AttachmentResourceRequest(::google::protobuf::Arena* arena);
  AttachmentResourceRequest(::google::protobuf::Arena* arena, const AttachmentResourceRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResourceTypeFieldNumber = 2,
    kIdFieldNumber = 1,
    kResourceIdFieldNumber = 3,
  };
  // string resource_type = 2;
  void clear_resource_type() ;
  const std::string& resource_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resource_type(Arg_&& arg, Args_... args);
  std::string* mutable_resource_type();
  PROTOBUF_NODISCARD std::string* release_resource_type();
  void set_allocated_resource_type(std::string* value);

  private:
  const std::string& _internal_resource_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resource_type(
      const std::string& value);
  std::string* _internal_mutable_resource_type();

  public:
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // optional uint64 resource_id = 3;
  bool has_resource_id() const;
  void clear_resource_id() ;
  ::uint64_t resource_id() const;
  void set_resource_id(::uint64_t value);

  private:
  ::uint64_t _internal_resource_id() const;
  void _internal_set_resource_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.AttachmentResourceRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      62, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr resource_type_;
    ::uint64_t id_;
    ::uint64_t resource_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class AttachmentCreateRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.AttachmentCreateRequest) */ {
 public:
  inline AttachmentCreateRequest() : AttachmentCreateRequest(nullptr) {}
  ~AttachmentCreateRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AttachmentCreateRequest(::google::protobuf::internal::ConstantInitialized);

  inline AttachmentCreateRequest(const AttachmentCreateRequest& from)
      : AttachmentCreateRequest(nullptr, from) {}
  AttachmentCreateRequest(AttachmentCreateRequest&& from) noexcept
    : AttachmentCreateRequest() {
    *this = ::std::move(from);
  }

  inline AttachmentCreateRequest& operator=(const AttachmentCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttachmentCreateRequest& operator=(AttachmentCreateRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AttachmentCreateRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AttachmentCreateRequest* internal_default_instance() {
    return reinterpret_cast<const AttachmentCreateRequest*>(
               &_AttachmentCreateRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(AttachmentCreateRequest& a, AttachmentCreateRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AttachmentCreateRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AttachmentCreateRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AttachmentCreateRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AttachmentCreateRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AttachmentCreateRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AttachmentCreateRequest& from) {
    AttachmentCreateRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AttachmentCreateRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.AttachmentCreateRequest";
  }
  protected:
  explicit AttachmentCreateRequest(::google::protobuf::Arena* arena);
  AttachmentCreateRequest(::google::protobuf::Arena* arena, const AttachmentCreateRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBucketFieldNumber = 2,
    kObjectFieldNumber = 3,
    kTitleFieldNumber = 4,
    kContentTypeFieldNumber = 6,
    kUserFieldNumber = 1,
    kSizeFieldNumber = 5,
    kPublicFieldNumber = 9,
  };
  // string bucket = 2;
  void clear_bucket() ;
  const std::string& bucket() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bucket(Arg_&& arg, Args_... args);
  std::string* mutable_bucket();
  PROTOBUF_NODISCARD std::string* release_bucket();
  void set_allocated_bucket(std::string* value);

  private:
  const std::string& _internal_bucket() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bucket(
      const std::string& value);
  std::string* _internal_mutable_bucket();

  public:
  // string object = 3;
  void clear_object() ;
  const std::string& object() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_object(Arg_&& arg, Args_... args);
  std::string* mutable_object();
  PROTOBUF_NODISCARD std::string* release_object();
  void set_allocated_object(std::string* value);

  private:
  const std::string& _internal_object() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_object(
      const std::string& value);
  std::string* _internal_mutable_object();

  public:
  // string title = 4;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string content_type = 6;
  void clear_content_type() ;
  const std::string& content_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content_type(Arg_&& arg, Args_... args);
  std::string* mutable_content_type();
  PROTOBUF_NODISCARD std::string* release_content_type();
  void set_allocated_content_type(std::string* value);

  private:
  const std::string& _internal_content_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content_type(
      const std::string& value);
  std::string* _internal_mutable_content_type();

  public:
  // uint64 user = 1;
  void clear_user() ;
  ::uint64_t user() const;
  void set_user(::uint64_t value);

  private:
  ::uint64_t _internal_user() const;
  void _internal_set_user(::uint64_t value);

  public:
  // uint64 size = 5;
  void clear_size() ;
  ::uint64_t size() const;
  void set_size(::uint64_t value);

  private:
  ::uint64_t _internal_size() const;
  void _internal_set_size(::uint64_t value);

  public:
  // bool public = 9;
  void clear_public_() ;
  bool public_() const;
  void set_public_(bool value);

  private:
  bool _internal_public_() const;
  void _internal_set_public_(bool value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.AttachmentCreateRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      76, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr bucket_;
    ::google::protobuf::internal::ArenaStringPtr object_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr content_type_;
    ::uint64_t user_;
    ::uint64_t size_;
    bool public__;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class AttachmentClearRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.AttachmentClearRequest) */ {
 public:
  inline AttachmentClearRequest() : AttachmentClearRequest(nullptr) {}
  ~AttachmentClearRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AttachmentClearRequest(::google::protobuf::internal::ConstantInitialized);

  inline AttachmentClearRequest(const AttachmentClearRequest& from)
      : AttachmentClearRequest(nullptr, from) {}
  AttachmentClearRequest(AttachmentClearRequest&& from) noexcept
    : AttachmentClearRequest() {
    *this = ::std::move(from);
  }

  inline AttachmentClearRequest& operator=(const AttachmentClearRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttachmentClearRequest& operator=(AttachmentClearRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AttachmentClearRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AttachmentClearRequest* internal_default_instance() {
    return reinterpret_cast<const AttachmentClearRequest*>(
               &_AttachmentClearRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(AttachmentClearRequest& a, AttachmentClearRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AttachmentClearRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AttachmentClearRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AttachmentClearRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AttachmentClearRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AttachmentClearRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AttachmentClearRequest& from) {
    AttachmentClearRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AttachmentClearRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.AttachmentClearRequest";
  }
  protected:
  explicit AttachmentClearRequest(::google::protobuf::Arena* arena);
  AttachmentClearRequest(::google::protobuf::Arena* arena, const AttachmentClearRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDaysToKeepFieldNumber = 1,
  };
  // uint32 days_to_keep = 1;
  void clear_days_to_keep() ;
  ::uint32_t days_to_keep() const;
  void set_days_to_keep(::uint32_t value);

  private:
  ::uint32_t _internal_days_to_keep() const;
  void _internal_set_days_to_keep(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.AttachmentClearRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::uint32_t days_to_keep_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class AesPlainMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.AesPlainMessage) */ {
 public:
  inline AesPlainMessage() : AesPlainMessage(nullptr) {}
  ~AesPlainMessage() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AesPlainMessage(::google::protobuf::internal::ConstantInitialized);

  inline AesPlainMessage(const AesPlainMessage& from)
      : AesPlainMessage(nullptr, from) {}
  AesPlainMessage(AesPlainMessage&& from) noexcept
    : AesPlainMessage() {
    *this = ::std::move(from);
  }

  inline AesPlainMessage& operator=(const AesPlainMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline AesPlainMessage& operator=(AesPlainMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AesPlainMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const AesPlainMessage* internal_default_instance() {
    return reinterpret_cast<const AesPlainMessage*>(
               &_AesPlainMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(AesPlainMessage& a, AesPlainMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(AesPlainMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AesPlainMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AesPlainMessage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AesPlainMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AesPlainMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AesPlainMessage& from) {
    AesPlainMessage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AesPlainMessage* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.AesPlainMessage";
  }
  protected:
  explicit AesPlainMessage(::google::protobuf::Arena* arena);
  AesPlainMessage(::google::protobuf::Arena* arena, const AesPlainMessage& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadFieldNumber = 1,
  };
  // bytes payload = 1;
  void clear_payload() ;
  const std::string& payload() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payload(Arg_&& arg, Args_... args);
  std::string* mutable_payload();
  PROTOBUF_NODISCARD std::string* release_payload();
  void set_allocated_payload(std::string* value);

  private:
  const std::string& _internal_payload() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payload(
      const std::string& value);
  std::string* _internal_mutable_payload();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.AesPlainMessage)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr payload_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class AesCodeMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.AesCodeMessage) */ {
 public:
  inline AesCodeMessage() : AesCodeMessage(nullptr) {}
  ~AesCodeMessage() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AesCodeMessage(::google::protobuf::internal::ConstantInitialized);

  inline AesCodeMessage(const AesCodeMessage& from)
      : AesCodeMessage(nullptr, from) {}
  AesCodeMessage(AesCodeMessage&& from) noexcept
    : AesCodeMessage() {
    *this = ::std::move(from);
  }

  inline AesCodeMessage& operator=(const AesCodeMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline AesCodeMessage& operator=(AesCodeMessage&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AesCodeMessage& default_instance() {
    return *internal_default_instance();
  }
  static inline const AesCodeMessage* internal_default_instance() {
    return reinterpret_cast<const AesCodeMessage*>(
               &_AesCodeMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(AesCodeMessage& a, AesCodeMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(AesCodeMessage* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AesCodeMessage* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AesCodeMessage* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AesCodeMessage>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AesCodeMessage& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AesCodeMessage& from) {
    AesCodeMessage::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AesCodeMessage* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.AesCodeMessage";
  }
  protected:
  explicit AesCodeMessage(::google::protobuf::Arena* arena);
  AesCodeMessage(::google::protobuf::Arena* arena, const AesCodeMessage& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadFieldNumber = 1,
    kSaltFieldNumber = 2,
  };
  // bytes payload = 1;
  void clear_payload() ;
  const std::string& payload() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_payload(Arg_&& arg, Args_... args);
  std::string* mutable_payload();
  PROTOBUF_NODISCARD std::string* release_payload();
  void set_allocated_payload(std::string* value);

  private:
  const std::string& _internal_payload() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_payload(
      const std::string& value);
  std::string* _internal_mutable_payload();

  public:
  // bytes salt = 2;
  void clear_salt() ;
  const std::string& salt() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_salt(Arg_&& arg, Args_... args);
  std::string* mutable_salt();
  PROTOBUF_NODISCARD std::string* release_salt();
  void set_allocated_salt(std::string* value);

  private:
  const std::string& _internal_salt() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_salt(
      const std::string& value);
  std::string* _internal_mutable_salt();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.AesCodeMessage)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr payload_;
    ::google::protobuf::internal::ArenaStringPtr salt_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class WechatOauth2UserIndexResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.WechatOauth2UserIndexResponse.Item) */ {
 public:
  inline WechatOauth2UserIndexResponse_Item() : WechatOauth2UserIndexResponse_Item(nullptr) {}
  ~WechatOauth2UserIndexResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatOauth2UserIndexResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline WechatOauth2UserIndexResponse_Item(const WechatOauth2UserIndexResponse_Item& from)
      : WechatOauth2UserIndexResponse_Item(nullptr, from) {}
  WechatOauth2UserIndexResponse_Item(WechatOauth2UserIndexResponse_Item&& from) noexcept
    : WechatOauth2UserIndexResponse_Item() {
    *this = ::std::move(from);
  }

  inline WechatOauth2UserIndexResponse_Item& operator=(const WechatOauth2UserIndexResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatOauth2UserIndexResponse_Item& operator=(WechatOauth2UserIndexResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatOauth2UserIndexResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatOauth2UserIndexResponse_Item* internal_default_instance() {
    return reinterpret_cast<const WechatOauth2UserIndexResponse_Item*>(
               &_WechatOauth2UserIndexResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(WechatOauth2UserIndexResponse_Item& a, WechatOauth2UserIndexResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatOauth2UserIndexResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatOauth2UserIndexResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatOauth2UserIndexResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatOauth2UserIndexResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatOauth2UserIndexResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatOauth2UserIndexResponse_Item& from) {
    WechatOauth2UserIndexResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatOauth2UserIndexResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.WechatOauth2UserIndexResponse.Item";
  }
  protected:
  explicit WechatOauth2UserIndexResponse_Item(::google::protobuf::Arena* arena);
  WechatOauth2UserIndexResponse_Item(::google::protobuf::Arena* arena, const WechatOauth2UserIndexResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Sex = WechatOauth2UserIndexResponse_Item_Sex;
  static constexpr Sex Male = WechatOauth2UserIndexResponse_Item_Sex_Male;
  static constexpr Sex Female = WechatOauth2UserIndexResponse_Item_Sex_Female;
  static inline bool Sex_IsValid(int value) {
    return WechatOauth2UserIndexResponse_Item_Sex_IsValid(value);
  }
  static constexpr Sex Sex_MIN = WechatOauth2UserIndexResponse_Item_Sex_Sex_MIN;
  static constexpr Sex Sex_MAX = WechatOauth2UserIndexResponse_Item_Sex_Sex_MAX;
  static constexpr int Sex_ARRAYSIZE = WechatOauth2UserIndexResponse_Item_Sex_Sex_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Sex_descriptor() {
    return WechatOauth2UserIndexResponse_Item_Sex_descriptor();
  }
  template <typename T>
  static inline const std::string& Sex_Name(T value) {
    return WechatOauth2UserIndexResponse_Item_Sex_Name(value);
  }
  static inline bool Sex_Parse(absl::string_view name, Sex* value) {
    return WechatOauth2UserIndexResponse_Item_Sex_Parse(name, value);
  }

  using Lang = WechatOauth2UserIndexResponse_Item_Lang;
  static constexpr Lang Cn = WechatOauth2UserIndexResponse_Item_Lang_Cn;
  static constexpr Lang En = WechatOauth2UserIndexResponse_Item_Lang_En;
  static inline bool Lang_IsValid(int value) {
    return WechatOauth2UserIndexResponse_Item_Lang_IsValid(value);
  }
  static constexpr Lang Lang_MIN = WechatOauth2UserIndexResponse_Item_Lang_Lang_MIN;
  static constexpr Lang Lang_MAX = WechatOauth2UserIndexResponse_Item_Lang_Lang_MAX;
  static constexpr int Lang_ARRAYSIZE = WechatOauth2UserIndexResponse_Item_Lang_Lang_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Lang_descriptor() {
    return WechatOauth2UserIndexResponse_Item_Lang_descriptor();
  }
  template <typename T>
  static inline const std::string& Lang_Name(T value) {
    return WechatOauth2UserIndexResponse_Item_Lang_Name(value);
  }
  static inline bool Lang_Parse(absl::string_view name, Lang* value) {
    return WechatOauth2UserIndexResponse_Item_Lang_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kPrivilegeFieldNumber = 12,
    kUnionIdFieldNumber = 3,
    kAppIdFieldNumber = 4,
    kOpenIdFieldNumber = 5,
    kNicknameFieldNumber = 6,
    kCityFieldNumber = 8,
    kProvinceFieldNumber = 9,
    kCountryFieldNumber = 10,
    kHeadImgUrlFieldNumber = 11,
    kDeletedAtFieldNumber = 18,
    kUpdatedAtFieldNumber = 19,
    kIdFieldNumber = 1,
    kUserIdFieldNumber = 2,
    kSexFieldNumber = 7,
    kLangFieldNumber = 13,
  };
  // repeated string privilege = 12;
  int privilege_size() const;
  private:
  int _internal_privilege_size() const;

  public:
  void clear_privilege() ;
  const std::string& privilege(int index) const;
  std::string* mutable_privilege(int index);
  void set_privilege(int index, const std::string& value);
  void set_privilege(int index, std::string&& value);
  void set_privilege(int index, const char* value);
  void set_privilege(int index, const char* value, std::size_t size);
  void set_privilege(int index, absl::string_view value);
  std::string* add_privilege();
  void add_privilege(const std::string& value);
  void add_privilege(std::string&& value);
  void add_privilege(const char* value);
  void add_privilege(const char* value, std::size_t size);
  void add_privilege(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& privilege() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_privilege();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_privilege() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_privilege();

  public:
  // string union_id = 3;
  void clear_union_id() ;
  const std::string& union_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_union_id(Arg_&& arg, Args_... args);
  std::string* mutable_union_id();
  PROTOBUF_NODISCARD std::string* release_union_id();
  void set_allocated_union_id(std::string* value);

  private:
  const std::string& _internal_union_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_union_id(
      const std::string& value);
  std::string* _internal_mutable_union_id();

  public:
  // string app_id = 4;
  void clear_app_id() ;
  const std::string& app_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_id(Arg_&& arg, Args_... args);
  std::string* mutable_app_id();
  PROTOBUF_NODISCARD std::string* release_app_id();
  void set_allocated_app_id(std::string* value);

  private:
  const std::string& _internal_app_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_id(
      const std::string& value);
  std::string* _internal_mutable_app_id();

  public:
  // string open_id = 5;
  void clear_open_id() ;
  const std::string& open_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_open_id(Arg_&& arg, Args_... args);
  std::string* mutable_open_id();
  PROTOBUF_NODISCARD std::string* release_open_id();
  void set_allocated_open_id(std::string* value);

  private:
  const std::string& _internal_open_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_open_id(
      const std::string& value);
  std::string* _internal_mutable_open_id();

  public:
  // string nickname = 6;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string city = 8;
  void clear_city() ;
  const std::string& city() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_city(Arg_&& arg, Args_... args);
  std::string* mutable_city();
  PROTOBUF_NODISCARD std::string* release_city();
  void set_allocated_city(std::string* value);

  private:
  const std::string& _internal_city() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_city(
      const std::string& value);
  std::string* _internal_mutable_city();

  public:
  // string province = 9;
  void clear_province() ;
  const std::string& province() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_province(Arg_&& arg, Args_... args);
  std::string* mutable_province();
  PROTOBUF_NODISCARD std::string* release_province();
  void set_allocated_province(std::string* value);

  private:
  const std::string& _internal_province() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_province(
      const std::string& value);
  std::string* _internal_mutable_province();

  public:
  // string country = 10;
  void clear_country() ;
  const std::string& country() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_country(Arg_&& arg, Args_... args);
  std::string* mutable_country();
  PROTOBUF_NODISCARD std::string* release_country();
  void set_allocated_country(std::string* value);

  private:
  const std::string& _internal_country() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_country(
      const std::string& value);
  std::string* _internal_mutable_country();

  public:
  // optional string head_img_url = 11;
  bool has_head_img_url() const;
  void clear_head_img_url() ;
  const std::string& head_img_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_head_img_url(Arg_&& arg, Args_... args);
  std::string* mutable_head_img_url();
  PROTOBUF_NODISCARD std::string* release_head_img_url();
  void set_allocated_head_img_url(std::string* value);

  private:
  const std::string& _internal_head_img_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_head_img_url(
      const std::string& value);
  std::string* _internal_mutable_head_img_url();

  public:
  // optional .google.protobuf.Timestamp deleted_at = 18;
  bool has_deleted_at() const;
  void clear_deleted_at() ;
  const ::google::protobuf::Timestamp& deleted_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_deleted_at();
  ::google::protobuf::Timestamp* mutable_deleted_at();
  void set_allocated_deleted_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_deleted_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_deleted_at();

  private:
  const ::google::protobuf::Timestamp& _internal_deleted_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_deleted_at();

  public:
  // .google.protobuf.Timestamp updated_at = 19;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // uint64 user_id = 2;
  void clear_user_id() ;
  ::uint64_t user_id() const;
  void set_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_user_id() const;
  void _internal_set_user_id(::uint64_t value);

  public:
  // .palm.balsam.v1.WechatOauth2UserIndexResponse.Item.Sex sex = 7;
  void clear_sex() ;
  ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Sex sex() const;
  void set_sex(::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Sex value);

  private:
  ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Sex _internal_sex() const;
  void _internal_set_sex(::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Sex value);

  public:
  // .palm.balsam.v1.WechatOauth2UserIndexResponse.Item.Lang lang = 13;
  void clear_lang() ;
  ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Lang lang() const;
  void set_lang(::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Lang value);

  private:
  ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Lang _internal_lang() const;
  void _internal_set_lang(::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Lang value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.WechatOauth2UserIndexResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 15, 2,
      135, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> privilege_;
    ::google::protobuf::internal::ArenaStringPtr union_id_;
    ::google::protobuf::internal::ArenaStringPtr app_id_;
    ::google::protobuf::internal::ArenaStringPtr open_id_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr city_;
    ::google::protobuf::internal::ArenaStringPtr province_;
    ::google::protobuf::internal::ArenaStringPtr country_;
    ::google::protobuf::internal::ArenaStringPtr head_img_url_;
    ::google::protobuf::Timestamp* deleted_at_;
    ::google::protobuf::Timestamp* updated_at_;
    ::uint64_t id_;
    ::uint64_t user_id_;
    int sex_;
    int lang_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class WechatMiniProgramUserIndexResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item) */ {
 public:
  inline WechatMiniProgramUserIndexResponse_Item() : WechatMiniProgramUserIndexResponse_Item(nullptr) {}
  ~WechatMiniProgramUserIndexResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatMiniProgramUserIndexResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline WechatMiniProgramUserIndexResponse_Item(const WechatMiniProgramUserIndexResponse_Item& from)
      : WechatMiniProgramUserIndexResponse_Item(nullptr, from) {}
  WechatMiniProgramUserIndexResponse_Item(WechatMiniProgramUserIndexResponse_Item&& from) noexcept
    : WechatMiniProgramUserIndexResponse_Item() {
    *this = ::std::move(from);
  }

  inline WechatMiniProgramUserIndexResponse_Item& operator=(const WechatMiniProgramUserIndexResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatMiniProgramUserIndexResponse_Item& operator=(WechatMiniProgramUserIndexResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatMiniProgramUserIndexResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatMiniProgramUserIndexResponse_Item* internal_default_instance() {
    return reinterpret_cast<const WechatMiniProgramUserIndexResponse_Item*>(
               &_WechatMiniProgramUserIndexResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(WechatMiniProgramUserIndexResponse_Item& a, WechatMiniProgramUserIndexResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatMiniProgramUserIndexResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatMiniProgramUserIndexResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatMiniProgramUserIndexResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatMiniProgramUserIndexResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatMiniProgramUserIndexResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatMiniProgramUserIndexResponse_Item& from) {
    WechatMiniProgramUserIndexResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatMiniProgramUserIndexResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item";
  }
  protected:
  explicit WechatMiniProgramUserIndexResponse_Item(::google::protobuf::Arena* arena);
  WechatMiniProgramUserIndexResponse_Item(::google::protobuf::Arena* arena, const WechatMiniProgramUserIndexResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnionIdFieldNumber = 3,
    kAppIdFieldNumber = 4,
    kOpenIdFieldNumber = 5,
    kNicknameFieldNumber = 6,
    kAvatarUrlFieldNumber = 7,
    kDeletedAtFieldNumber = 8,
    kUpdatedAtFieldNumber = 9,
    kIdFieldNumber = 1,
    kUserIdFieldNumber = 2,
  };
  // string union_id = 3;
  void clear_union_id() ;
  const std::string& union_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_union_id(Arg_&& arg, Args_... args);
  std::string* mutable_union_id();
  PROTOBUF_NODISCARD std::string* release_union_id();
  void set_allocated_union_id(std::string* value);

  private:
  const std::string& _internal_union_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_union_id(
      const std::string& value);
  std::string* _internal_mutable_union_id();

  public:
  // string app_id = 4;
  void clear_app_id() ;
  const std::string& app_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_app_id(Arg_&& arg, Args_... args);
  std::string* mutable_app_id();
  PROTOBUF_NODISCARD std::string* release_app_id();
  void set_allocated_app_id(std::string* value);

  private:
  const std::string& _internal_app_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_app_id(
      const std::string& value);
  std::string* _internal_mutable_app_id();

  public:
  // string open_id = 5;
  void clear_open_id() ;
  const std::string& open_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_open_id(Arg_&& arg, Args_... args);
  std::string* mutable_open_id();
  PROTOBUF_NODISCARD std::string* release_open_id();
  void set_allocated_open_id(std::string* value);

  private:
  const std::string& _internal_open_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_open_id(
      const std::string& value);
  std::string* _internal_mutable_open_id();

  public:
  // optional string nickname = 6;
  bool has_nickname() const;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // optional string avatar_url = 7;
  bool has_avatar_url() const;
  void clear_avatar_url() ;
  const std::string& avatar_url() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_avatar_url(Arg_&& arg, Args_... args);
  std::string* mutable_avatar_url();
  PROTOBUF_NODISCARD std::string* release_avatar_url();
  void set_allocated_avatar_url(std::string* value);

  private:
  const std::string& _internal_avatar_url() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_avatar_url(
      const std::string& value);
  std::string* _internal_mutable_avatar_url();

  public:
  // optional .google.protobuf.Timestamp deleted_at = 8;
  bool has_deleted_at() const;
  void clear_deleted_at() ;
  const ::google::protobuf::Timestamp& deleted_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_deleted_at();
  ::google::protobuf::Timestamp* mutable_deleted_at();
  void set_allocated_deleted_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_deleted_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_deleted_at();

  private:
  const ::google::protobuf::Timestamp& _internal_deleted_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_deleted_at();

  public:
  // .google.protobuf.Timestamp updated_at = 9;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // uint64 user_id = 2;
  void clear_user_id() ;
  ::uint64_t user_id() const;
  void set_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_user_id() const;
  void _internal_set_user_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 2,
      110, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr union_id_;
    ::google::protobuf::internal::ArenaStringPtr app_id_;
    ::google::protobuf::internal::ArenaStringPtr open_id_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr avatar_url_;
    ::google::protobuf::Timestamp* deleted_at_;
    ::google::protobuf::Timestamp* updated_at_;
    ::uint64_t id_;
    ::uint64_t user_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class UserSignUpByEmailRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.UserSignUpByEmailRequest) */ {
 public:
  inline UserSignUpByEmailRequest() : UserSignUpByEmailRequest(nullptr) {}
  ~UserSignUpByEmailRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserSignUpByEmailRequest(::google::protobuf::internal::ConstantInitialized);

  inline UserSignUpByEmailRequest(const UserSignUpByEmailRequest& from)
      : UserSignUpByEmailRequest(nullptr, from) {}
  UserSignUpByEmailRequest(UserSignUpByEmailRequest&& from) noexcept
    : UserSignUpByEmailRequest() {
    *this = ::std::move(from);
  }

  inline UserSignUpByEmailRequest& operator=(const UserSignUpByEmailRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserSignUpByEmailRequest& operator=(UserSignUpByEmailRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserSignUpByEmailRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserSignUpByEmailRequest* internal_default_instance() {
    return reinterpret_cast<const UserSignUpByEmailRequest*>(
               &_UserSignUpByEmailRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(UserSignUpByEmailRequest& a, UserSignUpByEmailRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UserSignUpByEmailRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserSignUpByEmailRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserSignUpByEmailRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserSignUpByEmailRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserSignUpByEmailRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserSignUpByEmailRequest& from) {
    UserSignUpByEmailRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserSignUpByEmailRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.UserSignUpByEmailRequest";
  }
  protected:
  explicit UserSignUpByEmailRequest(::google::protobuf::Arena* arena);
  UserSignUpByEmailRequest(::google::protobuf::Arena* arena, const UserSignUpByEmailRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRealNameFieldNumber = 1,
    kEmailFieldNumber = 2,
    kNicknameFieldNumber = 3,
    kPasswordFieldNumber = 4,
    kTimezoneFieldNumber = 5,
    kHomeFieldNumber = 6,
    kTtlFieldNumber = 9,
  };
  // string real_name = 1;
  void clear_real_name() ;
  const std::string& real_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_real_name(Arg_&& arg, Args_... args);
  std::string* mutable_real_name();
  PROTOBUF_NODISCARD std::string* release_real_name();
  void set_allocated_real_name(std::string* value);

  private:
  const std::string& _internal_real_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_real_name(
      const std::string& value);
  std::string* _internal_mutable_real_name();

  public:
  // string email = 2;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // string nickname = 3;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string password = 4;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // string timezone = 5;
  void clear_timezone() ;
  const std::string& timezone() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timezone(Arg_&& arg, Args_... args);
  std::string* mutable_timezone();
  PROTOBUF_NODISCARD std::string* release_timezone();
  void set_allocated_timezone(std::string* value);

  private:
  const std::string& _internal_timezone() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timezone(
      const std::string& value);
  std::string* _internal_mutable_timezone();

  public:
  // string home = 6;
  void clear_home() ;
  const std::string& home() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_home(Arg_&& arg, Args_... args);
  std::string* mutable_home();
  PROTOBUF_NODISCARD std::string* release_home();
  void set_allocated_home(std::string* value);

  private:
  const std::string& _internal_home() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_home(
      const std::string& value);
  std::string* _internal_mutable_home();

  public:
  // .google.protobuf.Duration ttl = 9;
  bool has_ttl() const;
  void clear_ttl() ;
  const ::google::protobuf::Duration& ttl() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_ttl();
  ::google::protobuf::Duration* mutable_ttl();
  void set_allocated_ttl(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_ttl(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_ttl();

  private:
  const ::google::protobuf::Duration& _internal_ttl() const;
  ::google::protobuf::Duration* _internal_mutable_ttl();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.UserSignUpByEmailRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 1,
      90, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr real_name_;
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::google::protobuf::internal::ArenaStringPtr timezone_;
    ::google::protobuf::internal::ArenaStringPtr home_;
    ::google::protobuf::Duration* ttl_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class UserSignInResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.UserSignInResponse) */ {
 public:
  inline UserSignInResponse() : UserSignInResponse(nullptr) {}
  ~UserSignInResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserSignInResponse(::google::protobuf::internal::ConstantInitialized);

  inline UserSignInResponse(const UserSignInResponse& from)
      : UserSignInResponse(nullptr, from) {}
  UserSignInResponse(UserSignInResponse&& from) noexcept
    : UserSignInResponse() {
    *this = ::std::move(from);
  }

  inline UserSignInResponse& operator=(const UserSignInResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserSignInResponse& operator=(UserSignInResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserSignInResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserSignInResponse* internal_default_instance() {
    return reinterpret_cast<const UserSignInResponse*>(
               &_UserSignInResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(UserSignInResponse& a, UserSignInResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UserSignInResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserSignInResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserSignInResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserSignInResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserSignInResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserSignInResponse& from) {
    UserSignInResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserSignInResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.UserSignInResponse";
  }
  protected:
  explicit UserSignInResponse(::google::protobuf::Arena* arena);
  UserSignInResponse(::google::protobuf::Arena* arena, const UserSignInResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Detail = UserSignInResponse_Detail;
  using Permission = UserSignInResponse_Permission;
  using Menu = UserSignInResponse_Menu;

  // accessors -------------------------------------------------------

  enum : int {
    kRolesFieldNumber = 11,
    kPermissionsFieldNumber = 12,
    kMenusFieldNumber = 13,
    kTokenFieldNumber = 1,
    kDetailFieldNumber = 2,
    kIsAdministratorFieldNumber = 98,
    kIsRootFieldNumber = 99,
  };
  // repeated string roles = 11;
  int roles_size() const;
  private:
  int _internal_roles_size() const;

  public:
  void clear_roles() ;
  const std::string& roles(int index) const;
  std::string* mutable_roles(int index);
  void set_roles(int index, const std::string& value);
  void set_roles(int index, std::string&& value);
  void set_roles(int index, const char* value);
  void set_roles(int index, const char* value, std::size_t size);
  void set_roles(int index, absl::string_view value);
  std::string* add_roles();
  void add_roles(const std::string& value);
  void add_roles(std::string&& value);
  void add_roles(const char* value);
  void add_roles(const char* value, std::size_t size);
  void add_roles(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& roles() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_roles();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_roles() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_roles();

  public:
  // repeated .palm.balsam.v1.UserSignInResponse.Permission permissions = 12;
  int permissions_size() const;
  private:
  int _internal_permissions_size() const;

  public:
  void clear_permissions() ;
  ::palm::balsam::v1::UserSignInResponse_Permission* mutable_permissions(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::UserSignInResponse_Permission >*
      mutable_permissions();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserSignInResponse_Permission>& _internal_permissions() const;
  ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserSignInResponse_Permission>* _internal_mutable_permissions();
  public:
  const ::palm::balsam::v1::UserSignInResponse_Permission& permissions(int index) const;
  ::palm::balsam::v1::UserSignInResponse_Permission* add_permissions();
  const ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::UserSignInResponse_Permission >&
      permissions() const;
  // repeated .palm.balsam.v1.UserSignInResponse.Menu menus = 13;
  int menus_size() const;
  private:
  int _internal_menus_size() const;

  public:
  void clear_menus() ;
  ::palm::balsam::v1::UserSignInResponse_Menu* mutable_menus(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::UserSignInResponse_Menu >*
      mutable_menus();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserSignInResponse_Menu>& _internal_menus() const;
  ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserSignInResponse_Menu>* _internal_mutable_menus();
  public:
  const ::palm::balsam::v1::UserSignInResponse_Menu& menus(int index) const;
  ::palm::balsam::v1::UserSignInResponse_Menu* add_menus();
  const ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::UserSignInResponse_Menu >&
      menus() const;
  // string token = 1;
  void clear_token() ;
  const std::string& token() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_token(Arg_&& arg, Args_... args);
  std::string* mutable_token();
  PROTOBUF_NODISCARD std::string* release_token();
  void set_allocated_token(std::string* value);

  private:
  const std::string& _internal_token() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_token(
      const std::string& value);
  std::string* _internal_mutable_token();

  public:
  // .palm.balsam.v1.UserSignInResponse.Detail detail = 2;
  bool has_detail() const;
  void clear_detail() ;
  const ::palm::balsam::v1::UserSignInResponse_Detail& detail() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::UserSignInResponse_Detail* release_detail();
  ::palm::balsam::v1::UserSignInResponse_Detail* mutable_detail();
  void set_allocated_detail(::palm::balsam::v1::UserSignInResponse_Detail* value);
  void unsafe_arena_set_allocated_detail(::palm::balsam::v1::UserSignInResponse_Detail* value);
  ::palm::balsam::v1::UserSignInResponse_Detail* unsafe_arena_release_detail();

  private:
  const ::palm::balsam::v1::UserSignInResponse_Detail& _internal_detail() const;
  ::palm::balsam::v1::UserSignInResponse_Detail* _internal_mutable_detail();

  public:
  // bool is_administrator = 98;
  void clear_is_administrator() ;
  bool is_administrator() const;
  void set_is_administrator(bool value);

  private:
  bool _internal_is_administrator() const;
  void _internal_set_is_administrator(bool value);

  public:
  // bool is_root = 99;
  void clear_is_root() ;
  bool is_root() const;
  void set_is_root(bool value);

  private:
  bool _internal_is_root() const;
  void _internal_set_is_root(bool value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.UserSignInResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 3,
      52, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> roles_;
    ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::UserSignInResponse_Permission > permissions_;
    ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::UserSignInResponse_Menu > menus_;
    ::google::protobuf::internal::ArenaStringPtr token_;
    ::palm::balsam::v1::UserSignInResponse_Detail* detail_;
    bool is_administrator_;
    bool is_root_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class UserSignInByEmailRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.UserSignInByEmailRequest) */ {
 public:
  inline UserSignInByEmailRequest() : UserSignInByEmailRequest(nullptr) {}
  ~UserSignInByEmailRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserSignInByEmailRequest(::google::protobuf::internal::ConstantInitialized);

  inline UserSignInByEmailRequest(const UserSignInByEmailRequest& from)
      : UserSignInByEmailRequest(nullptr, from) {}
  UserSignInByEmailRequest(UserSignInByEmailRequest&& from) noexcept
    : UserSignInByEmailRequest() {
    *this = ::std::move(from);
  }

  inline UserSignInByEmailRequest& operator=(const UserSignInByEmailRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserSignInByEmailRequest& operator=(UserSignInByEmailRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserSignInByEmailRequest& default_instance() {
    return *internal_default_instance();
  }
  enum UserCase {
    kEmail = 1,
    kNickname = 2,
    USER_NOT_SET = 0,
  };

  static inline const UserSignInByEmailRequest* internal_default_instance() {
    return reinterpret_cast<const UserSignInByEmailRequest*>(
               &_UserSignInByEmailRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(UserSignInByEmailRequest& a, UserSignInByEmailRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UserSignInByEmailRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserSignInByEmailRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserSignInByEmailRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserSignInByEmailRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserSignInByEmailRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserSignInByEmailRequest& from) {
    UserSignInByEmailRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserSignInByEmailRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.UserSignInByEmailRequest";
  }
  protected:
  explicit UserSignInByEmailRequest(::google::protobuf::Arena* arena);
  UserSignInByEmailRequest(::google::protobuf::Arena* arena, const UserSignInByEmailRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPasswordFieldNumber = 8,
    kTtlFieldNumber = 9,
    kEmailFieldNumber = 1,
    kNicknameFieldNumber = 2,
  };
  // string password = 8;
  void clear_password() ;
  const std::string& password() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  std::string* mutable_password();
  PROTOBUF_NODISCARD std::string* release_password();
  void set_allocated_password(std::string* value);

  private:
  const std::string& _internal_password() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_password(
      const std::string& value);
  std::string* _internal_mutable_password();

  public:
  // .google.protobuf.Duration ttl = 9;
  bool has_ttl() const;
  void clear_ttl() ;
  const ::google::protobuf::Duration& ttl() const;
  PROTOBUF_NODISCARD ::google::protobuf::Duration* release_ttl();
  ::google::protobuf::Duration* mutable_ttl();
  void set_allocated_ttl(::google::protobuf::Duration* value);
  void unsafe_arena_set_allocated_ttl(::google::protobuf::Duration* value);
  ::google::protobuf::Duration* unsafe_arena_release_ttl();

  private:
  const ::google::protobuf::Duration& _internal_ttl() const;
  ::google::protobuf::Duration* _internal_mutable_ttl();

  public:
  // string email = 1;
  bool has_email() const;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // string nickname = 2;
  bool has_nickname() const;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  void clear_user();
  UserCase user_case() const;
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.UserSignInByEmailRequest)
 private:
  class _Internal;
  void set_has_email();
  void set_has_nickname();

  inline bool has_user() const;
  inline void clear_has_user();

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 4, 1,
      69, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::google::protobuf::Duration* ttl_;
    union UserUnion {
      constexpr UserUnion() : _constinit_{} {}
        ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::internal::ArenaStringPtr email_;
      ::google::protobuf::internal::ArenaStringPtr nickname_;
    } user_;
    ::uint32_t _oneof_case_[1];

    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class UserLogsResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.UserLogsResponse.Item) */ {
 public:
  inline UserLogsResponse_Item() : UserLogsResponse_Item(nullptr) {}
  ~UserLogsResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserLogsResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline UserLogsResponse_Item(const UserLogsResponse_Item& from)
      : UserLogsResponse_Item(nullptr, from) {}
  UserLogsResponse_Item(UserLogsResponse_Item&& from) noexcept
    : UserLogsResponse_Item() {
    *this = ::std::move(from);
  }

  inline UserLogsResponse_Item& operator=(const UserLogsResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserLogsResponse_Item& operator=(UserLogsResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserLogsResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserLogsResponse_Item* internal_default_instance() {
    return reinterpret_cast<const UserLogsResponse_Item*>(
               &_UserLogsResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(UserLogsResponse_Item& a, UserLogsResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(UserLogsResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserLogsResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserLogsResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserLogsResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserLogsResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserLogsResponse_Item& from) {
    UserLogsResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserLogsResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.UserLogsResponse.Item";
  }
  protected:
  explicit UserLogsResponse_Item(::google::protobuf::Arena* arena);
  UserLogsResponse_Item(::google::protobuf::Arena* arena, const UserLogsResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Level = UserLogsResponse_Item_Level;
  static constexpr Level Debug = UserLogsResponse_Item_Level_Debug;
  static constexpr Level Info = UserLogsResponse_Item_Level_Info;
  static constexpr Level Warn = UserLogsResponse_Item_Level_Warn;
  static constexpr Level Error = UserLogsResponse_Item_Level_Error;
  static inline bool Level_IsValid(int value) {
    return UserLogsResponse_Item_Level_IsValid(value);
  }
  static constexpr Level Level_MIN = UserLogsResponse_Item_Level_Level_MIN;
  static constexpr Level Level_MAX = UserLogsResponse_Item_Level_Level_MAX;
  static constexpr int Level_ARRAYSIZE = UserLogsResponse_Item_Level_Level_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Level_descriptor() {
    return UserLogsResponse_Item_Level_descriptor();
  }
  template <typename T>
  static inline const std::string& Level_Name(T value) {
    return UserLogsResponse_Item_Level_Name(value);
  }
  static inline bool Level_Parse(absl::string_view name, Level* value) {
    return UserLogsResponse_Item_Level_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kPluginFieldNumber = 2,
    kIpFieldNumber = 3,
    kResourceTypeFieldNumber = 5,
    kMessageFieldNumber = 7,
    kCreatedAtFieldNumber = 8,
    kIdFieldNumber = 1,
    kResourceIdFieldNumber = 6,
    kLevelFieldNumber = 4,
  };
  // string plugin = 2;
  void clear_plugin() ;
  const std::string& plugin() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_plugin(Arg_&& arg, Args_... args);
  std::string* mutable_plugin();
  PROTOBUF_NODISCARD std::string* release_plugin();
  void set_allocated_plugin(std::string* value);

  private:
  const std::string& _internal_plugin() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_plugin(
      const std::string& value);
  std::string* _internal_mutable_plugin();

  public:
  // string ip = 3;
  void clear_ip() ;
  const std::string& ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ip(Arg_&& arg, Args_... args);
  std::string* mutable_ip();
  PROTOBUF_NODISCARD std::string* release_ip();
  void set_allocated_ip(std::string* value);

  private:
  const std::string& _internal_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ip(
      const std::string& value);
  std::string* _internal_mutable_ip();

  public:
  // string resource_type = 5;
  void clear_resource_type() ;
  const std::string& resource_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_resource_type(Arg_&& arg, Args_... args);
  std::string* mutable_resource_type();
  PROTOBUF_NODISCARD std::string* release_resource_type();
  void set_allocated_resource_type(std::string* value);

  private:
  const std::string& _internal_resource_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_resource_type(
      const std::string& value);
  std::string* _internal_mutable_resource_type();

  public:
  // string message = 7;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // .google.protobuf.Timestamp created_at = 8;
  bool has_created_at() const;
  void clear_created_at() ;
  const ::google::protobuf::Timestamp& created_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created_at();
  ::google::protobuf::Timestamp* mutable_created_at();
  void set_allocated_created_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created_at();

  private:
  const ::google::protobuf::Timestamp& _internal_created_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_created_at();

  public:
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // optional uint64 resource_id = 6;
  bool has_resource_id() const;
  void clear_resource_id() ;
  ::uint64_t resource_id() const;
  void set_resource_id(::uint64_t value);

  private:
  ::uint64_t _internal_resource_id() const;
  void _internal_set_resource_id(::uint64_t value);

  public:
  // .palm.balsam.v1.UserLogsResponse.Item.Level level = 4;
  void clear_level() ;
  ::palm::balsam::v1::UserLogsResponse_Item_Level level() const;
  void set_level(::palm::balsam::v1::UserLogsResponse_Item_Level value);

  private:
  ::palm::balsam::v1::UserLogsResponse_Item_Level _internal_level() const;
  void _internal_set_level(::palm::balsam::v1::UserLogsResponse_Item_Level value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.UserLogsResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 1,
      81, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr plugin_;
    ::google::protobuf::internal::ArenaStringPtr ip_;
    ::google::protobuf::internal::ArenaStringPtr resource_type_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::Timestamp* created_at_;
    ::uint64_t id_;
    ::uint64_t resource_id_;
    int level_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class UserLogsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.UserLogsRequest) */ {
 public:
  inline UserLogsRequest() : UserLogsRequest(nullptr) {}
  ~UserLogsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserLogsRequest(::google::protobuf::internal::ConstantInitialized);

  inline UserLogsRequest(const UserLogsRequest& from)
      : UserLogsRequest(nullptr, from) {}
  UserLogsRequest(UserLogsRequest&& from) noexcept
    : UserLogsRequest() {
    *this = ::std::move(from);
  }

  inline UserLogsRequest& operator=(const UserLogsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserLogsRequest& operator=(UserLogsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserLogsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserLogsRequest* internal_default_instance() {
    return reinterpret_cast<const UserLogsRequest*>(
               &_UserLogsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(UserLogsRequest& a, UserLogsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(UserLogsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserLogsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserLogsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserLogsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserLogsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserLogsRequest& from) {
    UserLogsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserLogsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.UserLogsRequest";
  }
  protected:
  explicit UserLogsRequest(::google::protobuf::Arena* arena);
  UserLogsRequest(::google::protobuf::Arena* arena, const UserLogsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPagerFieldNumber = 9,
    kUserFieldNumber = 1,
  };
  // .palm.balsam.v1.Pager pager = 9;
  bool has_pager() const;
  void clear_pager() ;
  const ::palm::balsam::v1::Pager& pager() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::Pager* release_pager();
  ::palm::balsam::v1::Pager* mutable_pager();
  void set_allocated_pager(::palm::balsam::v1::Pager* value);
  void unsafe_arena_set_allocated_pager(::palm::balsam::v1::Pager* value);
  ::palm::balsam::v1::Pager* unsafe_arena_release_pager();

  private:
  const ::palm::balsam::v1::Pager& _internal_pager() const;
  ::palm::balsam::v1::Pager* _internal_mutable_pager();

  public:
  // optional uint64 user = 1;
  bool has_user() const;
  void clear_user() ;
  ::uint64_t user() const;
  void set_user(::uint64_t value);

  private:
  ::uint64_t _internal_user() const;
  void _internal_set_user(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.UserLogsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::palm::balsam::v1::Pager* pager_;
    ::uint64_t user_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class UserIndexResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.UserIndexResponse.Item) */ {
 public:
  inline UserIndexResponse_Item() : UserIndexResponse_Item(nullptr) {}
  ~UserIndexResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserIndexResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline UserIndexResponse_Item(const UserIndexResponse_Item& from)
      : UserIndexResponse_Item(nullptr, from) {}
  UserIndexResponse_Item(UserIndexResponse_Item&& from) noexcept
    : UserIndexResponse_Item() {
    *this = ::std::move(from);
  }

  inline UserIndexResponse_Item& operator=(const UserIndexResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserIndexResponse_Item& operator=(UserIndexResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserIndexResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserIndexResponse_Item* internal_default_instance() {
    return reinterpret_cast<const UserIndexResponse_Item*>(
               &_UserIndexResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(UserIndexResponse_Item& a, UserIndexResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(UserIndexResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserIndexResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserIndexResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserIndexResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserIndexResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserIndexResponse_Item& from) {
    UserIndexResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserIndexResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.UserIndexResponse.Item";
  }
  protected:
  explicit UserIndexResponse_Item(::google::protobuf::Arena* arena);
  UserIndexResponse_Item(::google::protobuf::Arena* arena, const UserIndexResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 2,
    kLangFieldNumber = 3,
    kTimezoneFieldNumber = 4,
    kCurrentSignInIpFieldNumber = 7,
    kLastSignInIpFieldNumber = 9,
    kCurrentSignInAtFieldNumber = 6,
    kLastSignInAtFieldNumber = 8,
    kLockedaAtFieldNumber = 10,
    kDeletedAtFieldNumber = 11,
    kUpdatedAtFieldNumber = 12,
    kIdFieldNumber = 1,
    kSignInCountFieldNumber = 5,
  };
  // string uid = 2;
  void clear_uid() ;
  const std::string& uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uid(Arg_&& arg, Args_... args);
  std::string* mutable_uid();
  PROTOBUF_NODISCARD std::string* release_uid();
  void set_allocated_uid(std::string* value);

  private:
  const std::string& _internal_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uid(
      const std::string& value);
  std::string* _internal_mutable_uid();

  public:
  // string lang = 3;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // string timezone = 4;
  void clear_timezone() ;
  const std::string& timezone() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_timezone(Arg_&& arg, Args_... args);
  std::string* mutable_timezone();
  PROTOBUF_NODISCARD std::string* release_timezone();
  void set_allocated_timezone(std::string* value);

  private:
  const std::string& _internal_timezone() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_timezone(
      const std::string& value);
  std::string* _internal_mutable_timezone();

  public:
  // optional string current_sign_in_ip = 7;
  bool has_current_sign_in_ip() const;
  void clear_current_sign_in_ip() ;
  const std::string& current_sign_in_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_current_sign_in_ip(Arg_&& arg, Args_... args);
  std::string* mutable_current_sign_in_ip();
  PROTOBUF_NODISCARD std::string* release_current_sign_in_ip();
  void set_allocated_current_sign_in_ip(std::string* value);

  private:
  const std::string& _internal_current_sign_in_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_current_sign_in_ip(
      const std::string& value);
  std::string* _internal_mutable_current_sign_in_ip();

  public:
  // optional string last_sign_in_ip = 9;
  bool has_last_sign_in_ip() const;
  void clear_last_sign_in_ip() ;
  const std::string& last_sign_in_ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_last_sign_in_ip(Arg_&& arg, Args_... args);
  std::string* mutable_last_sign_in_ip();
  PROTOBUF_NODISCARD std::string* release_last_sign_in_ip();
  void set_allocated_last_sign_in_ip(std::string* value);

  private:
  const std::string& _internal_last_sign_in_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_last_sign_in_ip(
      const std::string& value);
  std::string* _internal_mutable_last_sign_in_ip();

  public:
  // optional .google.protobuf.Timestamp current_sign_in_at = 6;
  bool has_current_sign_in_at() const;
  void clear_current_sign_in_at() ;
  const ::google::protobuf::Timestamp& current_sign_in_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_current_sign_in_at();
  ::google::protobuf::Timestamp* mutable_current_sign_in_at();
  void set_allocated_current_sign_in_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_current_sign_in_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_current_sign_in_at();

  private:
  const ::google::protobuf::Timestamp& _internal_current_sign_in_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_current_sign_in_at();

  public:
  // optional .google.protobuf.Timestamp last_sign_in_at = 8;
  bool has_last_sign_in_at() const;
  void clear_last_sign_in_at() ;
  const ::google::protobuf::Timestamp& last_sign_in_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_last_sign_in_at();
  ::google::protobuf::Timestamp* mutable_last_sign_in_at();
  void set_allocated_last_sign_in_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_last_sign_in_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_last_sign_in_at();

  private:
  const ::google::protobuf::Timestamp& _internal_last_sign_in_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_last_sign_in_at();

  public:
  // optional .google.protobuf.Timestamp lockeda_at = 10;
  bool has_lockeda_at() const;
  void clear_lockeda_at() ;
  const ::google::protobuf::Timestamp& lockeda_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_lockeda_at();
  ::google::protobuf::Timestamp* mutable_lockeda_at();
  void set_allocated_lockeda_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_lockeda_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_lockeda_at();

  private:
  const ::google::protobuf::Timestamp& _internal_lockeda_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_lockeda_at();

  public:
  // optional .google.protobuf.Timestamp deleted_at = 11;
  bool has_deleted_at() const;
  void clear_deleted_at() ;
  const ::google::protobuf::Timestamp& deleted_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_deleted_at();
  ::google::protobuf::Timestamp* mutable_deleted_at();
  void set_allocated_deleted_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_deleted_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_deleted_at();

  private:
  const ::google::protobuf::Timestamp& _internal_deleted_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_deleted_at();

  public:
  // .google.protobuf.Timestamp updated_at = 12;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // uint32 sign_in_count = 5;
  void clear_sign_in_count() ;
  ::uint32_t sign_in_count() const;
  void set_sign_in_count(::uint32_t value);

  private:
  ::uint32_t _internal_sign_in_count() const;
  void _internal_set_sign_in_count(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.UserIndexResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 5,
      102, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr uid_;
    ::google::protobuf::internal::ArenaStringPtr lang_;
    ::google::protobuf::internal::ArenaStringPtr timezone_;
    ::google::protobuf::internal::ArenaStringPtr current_sign_in_ip_;
    ::google::protobuf::internal::ArenaStringPtr last_sign_in_ip_;
    ::google::protobuf::Timestamp* current_sign_in_at_;
    ::google::protobuf::Timestamp* last_sign_in_at_;
    ::google::protobuf::Timestamp* lockeda_at_;
    ::google::protobuf::Timestamp* deleted_at_;
    ::google::protobuf::Timestamp* updated_at_;
    ::uint64_t id_;
    ::uint32_t sign_in_count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteStatusResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteStatusResponse) */ {
 public:
  inline SiteStatusResponse() : SiteStatusResponse(nullptr) {}
  ~SiteStatusResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteStatusResponse(::google::protobuf::internal::ConstantInitialized);

  inline SiteStatusResponse(const SiteStatusResponse& from)
      : SiteStatusResponse(nullptr, from) {}
  SiteStatusResponse(SiteStatusResponse&& from) noexcept
    : SiteStatusResponse() {
    *this = ::std::move(from);
  }

  inline SiteStatusResponse& operator=(const SiteStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteStatusResponse& operator=(SiteStatusResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteStatusResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteStatusResponse* internal_default_instance() {
    return reinterpret_cast<const SiteStatusResponse*>(
               &_SiteStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(SiteStatusResponse& a, SiteStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteStatusResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteStatusResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteStatusResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteStatusResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteStatusResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteStatusResponse& from) {
    SiteStatusResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteStatusResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteStatusResponse";
  }
  protected:
  explicit SiteStatusResponse(::google::protobuf::Arena* arena);
  SiteStatusResponse(::google::protobuf::Arena* arena, const SiteStatusResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Redis = SiteStatusResponse_Redis;
  using PostgreSql = SiteStatusResponse_PostgreSql;
  using OpenSearch = SiteStatusResponse_OpenSearch;

  // accessors -------------------------------------------------------

  enum : int {
    kPostgresqlFieldNumber = 1,
    kRedisFieldNumber = 2,
    kOpensearchFieldNumber = 3,
  };
  // .palm.balsam.v1.SiteStatusResponse.PostgreSql postgresql = 1;
  bool has_postgresql() const;
  void clear_postgresql() ;
  const ::palm::balsam::v1::SiteStatusResponse_PostgreSql& postgresql() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::SiteStatusResponse_PostgreSql* release_postgresql();
  ::palm::balsam::v1::SiteStatusResponse_PostgreSql* mutable_postgresql();
  void set_allocated_postgresql(::palm::balsam::v1::SiteStatusResponse_PostgreSql* value);
  void unsafe_arena_set_allocated_postgresql(::palm::balsam::v1::SiteStatusResponse_PostgreSql* value);
  ::palm::balsam::v1::SiteStatusResponse_PostgreSql* unsafe_arena_release_postgresql();

  private:
  const ::palm::balsam::v1::SiteStatusResponse_PostgreSql& _internal_postgresql() const;
  ::palm::balsam::v1::SiteStatusResponse_PostgreSql* _internal_mutable_postgresql();

  public:
  // .palm.balsam.v1.SiteStatusResponse.Redis redis = 2;
  bool has_redis() const;
  void clear_redis() ;
  const ::palm::balsam::v1::SiteStatusResponse_Redis& redis() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::SiteStatusResponse_Redis* release_redis();
  ::palm::balsam::v1::SiteStatusResponse_Redis* mutable_redis();
  void set_allocated_redis(::palm::balsam::v1::SiteStatusResponse_Redis* value);
  void unsafe_arena_set_allocated_redis(::palm::balsam::v1::SiteStatusResponse_Redis* value);
  ::palm::balsam::v1::SiteStatusResponse_Redis* unsafe_arena_release_redis();

  private:
  const ::palm::balsam::v1::SiteStatusResponse_Redis& _internal_redis() const;
  ::palm::balsam::v1::SiteStatusResponse_Redis* _internal_mutable_redis();

  public:
  // .palm.balsam.v1.SiteStatusResponse.OpenSearch opensearch = 3;
  bool has_opensearch() const;
  void clear_opensearch() ;
  const ::palm::balsam::v1::SiteStatusResponse_OpenSearch& opensearch() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::SiteStatusResponse_OpenSearch* release_opensearch();
  ::palm::balsam::v1::SiteStatusResponse_OpenSearch* mutable_opensearch();
  void set_allocated_opensearch(::palm::balsam::v1::SiteStatusResponse_OpenSearch* value);
  void unsafe_arena_set_allocated_opensearch(::palm::balsam::v1::SiteStatusResponse_OpenSearch* value);
  ::palm::balsam::v1::SiteStatusResponse_OpenSearch* unsafe_arena_release_opensearch();

  private:
  const ::palm::balsam::v1::SiteStatusResponse_OpenSearch& _internal_opensearch() const;
  ::palm::balsam::v1::SiteStatusResponse_OpenSearch* _internal_mutable_opensearch();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteStatusResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 3,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::palm::balsam::v1::SiteStatusResponse_PostgreSql* postgresql_;
    ::palm::balsam::v1::SiteStatusResponse_Redis* redis_;
    ::palm::balsam::v1::SiteStatusResponse_OpenSearch* opensearch_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteLayoutResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteLayoutResponse) */ {
 public:
  inline SiteLayoutResponse() : SiteLayoutResponse(nullptr) {}
  ~SiteLayoutResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteLayoutResponse(::google::protobuf::internal::ConstantInitialized);

  inline SiteLayoutResponse(const SiteLayoutResponse& from)
      : SiteLayoutResponse(nullptr, from) {}
  SiteLayoutResponse(SiteLayoutResponse&& from) noexcept
    : SiteLayoutResponse() {
    *this = ::std::move(from);
  }

  inline SiteLayoutResponse& operator=(const SiteLayoutResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteLayoutResponse& operator=(SiteLayoutResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteLayoutResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteLayoutResponse* internal_default_instance() {
    return reinterpret_cast<const SiteLayoutResponse*>(
               &_SiteLayoutResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  friend void swap(SiteLayoutResponse& a, SiteLayoutResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteLayoutResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteLayoutResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteLayoutResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteLayoutResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteLayoutResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteLayoutResponse& from) {
    SiteLayoutResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteLayoutResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteLayoutResponse";
  }
  protected:
  explicit SiteLayoutResponse(::google::protobuf::Arena* arena);
  SiteLayoutResponse(::google::protobuf::Arena* arena, const SiteLayoutResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Author = SiteLayoutResponse_Author;
  using CnGab = SiteLayoutResponse_CnGab;
  using CnIcp = SiteLayoutResponse_CnIcp;

  // accessors -------------------------------------------------------

  enum : int {
    kKeywordsFieldNumber = 6,
    kTitleFieldNumber = 1,
    kSubheadFieldNumber = 2,
    kDescriptionFieldNumber = 3,
    kCopyrightFieldNumber = 4,
    kLangFieldNumber = 97,
    kLanguagesFieldNumber = 98,
    kVersionFieldNumber = 99,
    kAuthorFieldNumber = 5,
    kCnIcpFieldNumber = 11,
    kCnGabFieldNumber = 12,
  };
  // repeated string keywords = 6;
  int keywords_size() const;
  private:
  int _internal_keywords_size() const;

  public:
  void clear_keywords() ;
  const std::string& keywords(int index) const;
  std::string* mutable_keywords(int index);
  void set_keywords(int index, const std::string& value);
  void set_keywords(int index, std::string&& value);
  void set_keywords(int index, const char* value);
  void set_keywords(int index, const char* value, std::size_t size);
  void set_keywords(int index, absl::string_view value);
  std::string* add_keywords();
  void add_keywords(const std::string& value);
  void add_keywords(std::string&& value);
  void add_keywords(const char* value);
  void add_keywords(const char* value, std::size_t size);
  void add_keywords(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& keywords() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_keywords();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_keywords() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_keywords();

  public:
  // string title = 1;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string subhead = 2;
  void clear_subhead() ;
  const std::string& subhead() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subhead(Arg_&& arg, Args_... args);
  std::string* mutable_subhead();
  PROTOBUF_NODISCARD std::string* release_subhead();
  void set_allocated_subhead(std::string* value);

  private:
  const std::string& _internal_subhead() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subhead(
      const std::string& value);
  std::string* _internal_mutable_subhead();

  public:
  // string description = 3;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string copyright = 4;
  void clear_copyright() ;
  const std::string& copyright() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_copyright(Arg_&& arg, Args_... args);
  std::string* mutable_copyright();
  PROTOBUF_NODISCARD std::string* release_copyright();
  void set_allocated_copyright(std::string* value);

  private:
  const std::string& _internal_copyright() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_copyright(
      const std::string& value);
  std::string* _internal_mutable_copyright();

  public:
  // string lang = 97;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // string languages = 98;
  void clear_languages() ;
  const std::string& languages() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_languages(Arg_&& arg, Args_... args);
  std::string* mutable_languages();
  PROTOBUF_NODISCARD std::string* release_languages();
  void set_allocated_languages(std::string* value);

  private:
  const std::string& _internal_languages() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_languages(
      const std::string& value);
  std::string* _internal_mutable_languages();

  public:
  // string version = 99;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // .palm.balsam.v1.SiteLayoutResponse.Author author = 5;
  bool has_author() const;
  void clear_author() ;
  const ::palm::balsam::v1::SiteLayoutResponse_Author& author() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::SiteLayoutResponse_Author* release_author();
  ::palm::balsam::v1::SiteLayoutResponse_Author* mutable_author();
  void set_allocated_author(::palm::balsam::v1::SiteLayoutResponse_Author* value);
  void unsafe_arena_set_allocated_author(::palm::balsam::v1::SiteLayoutResponse_Author* value);
  ::palm::balsam::v1::SiteLayoutResponse_Author* unsafe_arena_release_author();

  private:
  const ::palm::balsam::v1::SiteLayoutResponse_Author& _internal_author() const;
  ::palm::balsam::v1::SiteLayoutResponse_Author* _internal_mutable_author();

  public:
  // optional .palm.balsam.v1.SiteLayoutResponse.CnIcp cn_icp = 11;
  bool has_cn_icp() const;
  void clear_cn_icp() ;
  const ::palm::balsam::v1::SiteLayoutResponse_CnIcp& cn_icp() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::SiteLayoutResponse_CnIcp* release_cn_icp();
  ::palm::balsam::v1::SiteLayoutResponse_CnIcp* mutable_cn_icp();
  void set_allocated_cn_icp(::palm::balsam::v1::SiteLayoutResponse_CnIcp* value);
  void unsafe_arena_set_allocated_cn_icp(::palm::balsam::v1::SiteLayoutResponse_CnIcp* value);
  ::palm::balsam::v1::SiteLayoutResponse_CnIcp* unsafe_arena_release_cn_icp();

  private:
  const ::palm::balsam::v1::SiteLayoutResponse_CnIcp& _internal_cn_icp() const;
  ::palm::balsam::v1::SiteLayoutResponse_CnIcp* _internal_mutable_cn_icp();

  public:
  // optional .palm.balsam.v1.SiteLayoutResponse.CnGab cn_gab = 12;
  bool has_cn_gab() const;
  void clear_cn_gab() ;
  const ::palm::balsam::v1::SiteLayoutResponse_CnGab& cn_gab() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::SiteLayoutResponse_CnGab* release_cn_gab();
  ::palm::balsam::v1::SiteLayoutResponse_CnGab* mutable_cn_gab();
  void set_allocated_cn_gab(::palm::balsam::v1::SiteLayoutResponse_CnGab* value);
  void unsafe_arena_set_allocated_cn_gab(::palm::balsam::v1::SiteLayoutResponse_CnGab* value);
  ::palm::balsam::v1::SiteLayoutResponse_CnGab* unsafe_arena_release_cn_gab();

  private:
  const ::palm::balsam::v1::SiteLayoutResponse_CnGab& _internal_cn_gab() const;
  ::palm::balsam::v1::SiteLayoutResponse_CnGab* _internal_mutable_cn_gab();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteLayoutResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 3,
      110, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> keywords_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr subhead_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr copyright_;
    ::google::protobuf::internal::ArenaStringPtr lang_;
    ::google::protobuf::internal::ArenaStringPtr languages_;
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::palm::balsam::v1::SiteLayoutResponse_Author* author_;
    ::palm::balsam::v1::SiteLayoutResponse_CnIcp* cn_icp_;
    ::palm::balsam::v1::SiteLayoutResponse_CnGab* cn_gab_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteIndexNowAccount final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteIndexNowAccount) */ {
 public:
  inline SiteIndexNowAccount() : SiteIndexNowAccount(nullptr) {}
  ~SiteIndexNowAccount() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteIndexNowAccount(::google::protobuf::internal::ConstantInitialized);

  inline SiteIndexNowAccount(const SiteIndexNowAccount& from)
      : SiteIndexNowAccount(nullptr, from) {}
  SiteIndexNowAccount(SiteIndexNowAccount&& from) noexcept
    : SiteIndexNowAccount() {
    *this = ::std::move(from);
  }

  inline SiteIndexNowAccount& operator=(const SiteIndexNowAccount& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteIndexNowAccount& operator=(SiteIndexNowAccount&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteIndexNowAccount& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteIndexNowAccount* internal_default_instance() {
    return reinterpret_cast<const SiteIndexNowAccount*>(
               &_SiteIndexNowAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(SiteIndexNowAccount& a, SiteIndexNowAccount& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteIndexNowAccount* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteIndexNowAccount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteIndexNowAccount* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteIndexNowAccount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteIndexNowAccount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteIndexNowAccount& from) {
    SiteIndexNowAccount::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteIndexNowAccount* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteIndexNowAccount";
  }
  protected:
  explicit SiteIndexNowAccount(::google::protobuf::Arena* arena);
  SiteIndexNowAccount(::google::protobuf::Arena* arena, const SiteIndexNowAccount& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using WebSiteVerify = SiteIndexNowAccount_WebSiteVerify;

  // accessors -------------------------------------------------------

  enum : int {
    kWebSiteVerifyFieldNumber = 1,
  };
  // optional .palm.balsam.v1.SiteIndexNowAccount.WebSiteVerify web_site_verify = 1;
  bool has_web_site_verify() const;
  void clear_web_site_verify() ;
  const ::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify& web_site_verify() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify* release_web_site_verify();
  ::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify* mutable_web_site_verify();
  void set_allocated_web_site_verify(::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify* value);
  void unsafe_arena_set_allocated_web_site_verify(::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify* value);
  ::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify* unsafe_arena_release_web_site_verify();

  private:
  const ::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify& _internal_web_site_verify() const;
  ::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify* _internal_mutable_web_site_verify();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteIndexNowAccount)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify* web_site_verify_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteGoogleAccount final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteGoogleAccount) */ {
 public:
  inline SiteGoogleAccount() : SiteGoogleAccount(nullptr) {}
  ~SiteGoogleAccount() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteGoogleAccount(::google::protobuf::internal::ConstantInitialized);

  inline SiteGoogleAccount(const SiteGoogleAccount& from)
      : SiteGoogleAccount(nullptr, from) {}
  SiteGoogleAccount(SiteGoogleAccount&& from) noexcept
    : SiteGoogleAccount() {
    *this = ::std::move(from);
  }

  inline SiteGoogleAccount& operator=(const SiteGoogleAccount& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteGoogleAccount& operator=(SiteGoogleAccount&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteGoogleAccount& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteGoogleAccount* internal_default_instance() {
    return reinterpret_cast<const SiteGoogleAccount*>(
               &_SiteGoogleAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  friend void swap(SiteGoogleAccount& a, SiteGoogleAccount& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteGoogleAccount* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteGoogleAccount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteGoogleAccount* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteGoogleAccount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteGoogleAccount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteGoogleAccount& from) {
    SiteGoogleAccount::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteGoogleAccount* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteGoogleAccount";
  }
  protected:
  explicit SiteGoogleAccount(::google::protobuf::Arena* arena);
  SiteGoogleAccount(::google::protobuf::Arena* arena, const SiteGoogleAccount& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using WebSiteVerify = SiteGoogleAccount_WebSiteVerify;
  using ReCaptcha = SiteGoogleAccount_ReCaptcha;

  // accessors -------------------------------------------------------

  enum : int {
    kWebSiteVerifyFieldNumber = 1,
    kReCaptchaFieldNumber = 2,
  };
  // optional .palm.balsam.v1.SiteGoogleAccount.WebSiteVerify web_site_verify = 1;
  bool has_web_site_verify() const;
  void clear_web_site_verify() ;
  const ::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify& web_site_verify() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify* release_web_site_verify();
  ::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify* mutable_web_site_verify();
  void set_allocated_web_site_verify(::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify* value);
  void unsafe_arena_set_allocated_web_site_verify(::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify* value);
  ::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify* unsafe_arena_release_web_site_verify();

  private:
  const ::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify& _internal_web_site_verify() const;
  ::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify* _internal_mutable_web_site_verify();

  public:
  // optional .palm.balsam.v1.SiteGoogleAccount.ReCaptcha re_captcha = 2;
  bool has_re_captcha() const;
  void clear_re_captcha() ;
  const ::palm::balsam::v1::SiteGoogleAccount_ReCaptcha& re_captcha() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::SiteGoogleAccount_ReCaptcha* release_re_captcha();
  ::palm::balsam::v1::SiteGoogleAccount_ReCaptcha* mutable_re_captcha();
  void set_allocated_re_captcha(::palm::balsam::v1::SiteGoogleAccount_ReCaptcha* value);
  void unsafe_arena_set_allocated_re_captcha(::palm::balsam::v1::SiteGoogleAccount_ReCaptcha* value);
  ::palm::balsam::v1::SiteGoogleAccount_ReCaptcha* unsafe_arena_release_re_captcha();

  private:
  const ::palm::balsam::v1::SiteGoogleAccount_ReCaptcha& _internal_re_captcha() const;
  ::palm::balsam::v1::SiteGoogleAccount_ReCaptcha* _internal_mutable_re_captcha();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteGoogleAccount)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify* web_site_verify_;
    ::palm::balsam::v1::SiteGoogleAccount_ReCaptcha* re_captcha_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SiteBaiduAccount final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SiteBaiduAccount) */ {
 public:
  inline SiteBaiduAccount() : SiteBaiduAccount(nullptr) {}
  ~SiteBaiduAccount() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SiteBaiduAccount(::google::protobuf::internal::ConstantInitialized);

  inline SiteBaiduAccount(const SiteBaiduAccount& from)
      : SiteBaiduAccount(nullptr, from) {}
  SiteBaiduAccount(SiteBaiduAccount&& from) noexcept
    : SiteBaiduAccount() {
    *this = ::std::move(from);
  }

  inline SiteBaiduAccount& operator=(const SiteBaiduAccount& from) {
    CopyFrom(from);
    return *this;
  }
  inline SiteBaiduAccount& operator=(SiteBaiduAccount&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SiteBaiduAccount& default_instance() {
    return *internal_default_instance();
  }
  static inline const SiteBaiduAccount* internal_default_instance() {
    return reinterpret_cast<const SiteBaiduAccount*>(
               &_SiteBaiduAccount_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  friend void swap(SiteBaiduAccount& a, SiteBaiduAccount& b) {
    a.Swap(&b);
  }
  inline void Swap(SiteBaiduAccount* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SiteBaiduAccount* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SiteBaiduAccount* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SiteBaiduAccount>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SiteBaiduAccount& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SiteBaiduAccount& from) {
    SiteBaiduAccount::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SiteBaiduAccount* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SiteBaiduAccount";
  }
  protected:
  explicit SiteBaiduAccount(::google::protobuf::Arena* arena);
  SiteBaiduAccount(::google::protobuf::Arena* arena, const SiteBaiduAccount& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using WebSiteVerify = SiteBaiduAccount_WebSiteVerify;

  // accessors -------------------------------------------------------

  enum : int {
    kWebSiteVerifyFieldNumber = 1,
  };
  // optional .palm.balsam.v1.SiteBaiduAccount.WebSiteVerify web_site_verify = 1;
  bool has_web_site_verify() const;
  void clear_web_site_verify() ;
  const ::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify& web_site_verify() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify* release_web_site_verify();
  ::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify* mutable_web_site_verify();
  void set_allocated_web_site_verify(::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify* value);
  void unsafe_arena_set_allocated_web_site_verify(::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify* value);
  ::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify* unsafe_arena_release_web_site_verify();

  private:
  const ::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify& _internal_web_site_verify() const;
  ::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify* _internal_mutable_web_site_verify();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SiteBaiduAccount)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify* web_site_verify_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SessionIndexResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SessionIndexResponse.Item) */ {
 public:
  inline SessionIndexResponse_Item() : SessionIndexResponse_Item(nullptr) {}
  ~SessionIndexResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SessionIndexResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline SessionIndexResponse_Item(const SessionIndexResponse_Item& from)
      : SessionIndexResponse_Item(nullptr, from) {}
  SessionIndexResponse_Item(SessionIndexResponse_Item&& from) noexcept
    : SessionIndexResponse_Item() {
    *this = ::std::move(from);
  }

  inline SessionIndexResponse_Item& operator=(const SessionIndexResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline SessionIndexResponse_Item& operator=(SessionIndexResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SessionIndexResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const SessionIndexResponse_Item* internal_default_instance() {
    return reinterpret_cast<const SessionIndexResponse_Item*>(
               &_SessionIndexResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(SessionIndexResponse_Item& a, SessionIndexResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(SessionIndexResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SessionIndexResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SessionIndexResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SessionIndexResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SessionIndexResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SessionIndexResponse_Item& from) {
    SessionIndexResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SessionIndexResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SessionIndexResponse.Item";
  }
  protected:
  explicit SessionIndexResponse_Item(::google::protobuf::Arena* arena);
  SessionIndexResponse_Item(::google::protobuf::Arena* arena, const SessionIndexResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUidFieldNumber = 3,
    kIpFieldNumber = 6,
    kExpiresAtFieldNumber = 11,
    kDeletedAtFieldNumber = 12,
    kCreatedAtFieldNumber = 13,
    kIdFieldNumber = 1,
    kUserFieldNumber = 2,
    kProviderIdFieldNumber = 5,
    kProviderTypeFieldNumber = 4,
  };
  // string uid = 3;
  void clear_uid() ;
  const std::string& uid() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_uid(Arg_&& arg, Args_... args);
  std::string* mutable_uid();
  PROTOBUF_NODISCARD std::string* release_uid();
  void set_allocated_uid(std::string* value);

  private:
  const std::string& _internal_uid() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_uid(
      const std::string& value);
  std::string* _internal_mutable_uid();

  public:
  // string ip = 6;
  void clear_ip() ;
  const std::string& ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ip(Arg_&& arg, Args_... args);
  std::string* mutable_ip();
  PROTOBUF_NODISCARD std::string* release_ip();
  void set_allocated_ip(std::string* value);

  private:
  const std::string& _internal_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ip(
      const std::string& value);
  std::string* _internal_mutable_ip();

  public:
  // .google.protobuf.Timestamp expires_at = 11;
  bool has_expires_at() const;
  void clear_expires_at() ;
  const ::google::protobuf::Timestamp& expires_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_expires_at();
  ::google::protobuf::Timestamp* mutable_expires_at();
  void set_allocated_expires_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_expires_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_expires_at();

  private:
  const ::google::protobuf::Timestamp& _internal_expires_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_expires_at();

  public:
  // optional .google.protobuf.Timestamp deleted_at = 12;
  bool has_deleted_at() const;
  void clear_deleted_at() ;
  const ::google::protobuf::Timestamp& deleted_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_deleted_at();
  ::google::protobuf::Timestamp* mutable_deleted_at();
  void set_allocated_deleted_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_deleted_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_deleted_at();

  private:
  const ::google::protobuf::Timestamp& _internal_deleted_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_deleted_at();

  public:
  // .google.protobuf.Timestamp created_at = 13;
  bool has_created_at() const;
  void clear_created_at() ;
  const ::google::protobuf::Timestamp& created_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_created_at();
  ::google::protobuf::Timestamp* mutable_created_at();
  void set_allocated_created_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_created_at();

  private:
  const ::google::protobuf::Timestamp& _internal_created_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_created_at();

  public:
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // uint64 user = 2;
  void clear_user() ;
  ::uint64_t user() const;
  void set_user(::uint64_t value);

  private:
  ::uint64_t _internal_user() const;
  void _internal_set_user(::uint64_t value);

  public:
  // uint64 provider_id = 5;
  void clear_provider_id() ;
  ::uint64_t provider_id() const;
  void set_provider_id(::uint64_t value);

  private:
  ::uint64_t _internal_provider_id() const;
  void _internal_set_provider_id(::uint64_t value);

  public:
  // .palm.balsam.v1.UserSignInResponse.Detail.ProviderType provider_type = 4;
  void clear_provider_type() ;
  ::palm::balsam::v1::UserSignInResponse_Detail_ProviderType provider_type() const;
  void set_provider_type(::palm::balsam::v1::UserSignInResponse_Detail_ProviderType value);

  private:
  ::palm::balsam::v1::UserSignInResponse_Detail_ProviderType _internal_provider_type() const;
  void _internal_set_provider_type(::palm::balsam::v1::UserSignInResponse_Detail_ProviderType value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SessionIndexResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 3,
      62, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr uid_;
    ::google::protobuf::internal::ArenaStringPtr ip_;
    ::google::protobuf::Timestamp* expires_at_;
    ::google::protobuf::Timestamp* deleted_at_;
    ::google::protobuf::Timestamp* created_at_;
    ::uint64_t id_;
    ::uint64_t user_;
    ::uint64_t provider_id_;
    int provider_type_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class LocaleIndexResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.LocaleIndexResponse.Item) */ {
 public:
  inline LocaleIndexResponse_Item() : LocaleIndexResponse_Item(nullptr) {}
  ~LocaleIndexResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LocaleIndexResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline LocaleIndexResponse_Item(const LocaleIndexResponse_Item& from)
      : LocaleIndexResponse_Item(nullptr, from) {}
  LocaleIndexResponse_Item(LocaleIndexResponse_Item&& from) noexcept
    : LocaleIndexResponse_Item() {
    *this = ::std::move(from);
  }

  inline LocaleIndexResponse_Item& operator=(const LocaleIndexResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocaleIndexResponse_Item& operator=(LocaleIndexResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LocaleIndexResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const LocaleIndexResponse_Item* internal_default_instance() {
    return reinterpret_cast<const LocaleIndexResponse_Item*>(
               &_LocaleIndexResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(LocaleIndexResponse_Item& a, LocaleIndexResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(LocaleIndexResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocaleIndexResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LocaleIndexResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LocaleIndexResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LocaleIndexResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LocaleIndexResponse_Item& from) {
    LocaleIndexResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LocaleIndexResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.LocaleIndexResponse.Item";
  }
  protected:
  explicit LocaleIndexResponse_Item(::google::protobuf::Arena* arena);
  LocaleIndexResponse_Item(::google::protobuf::Arena* arena, const LocaleIndexResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLangFieldNumber = 2,
    kCodeFieldNumber = 3,
    kMessageFieldNumber = 4,
    kUpdatedAtFieldNumber = 5,
    kIdFieldNumber = 1,
  };
  // string lang = 2;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // string code = 3;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // string message = 4;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // .google.protobuf.Timestamp updated_at = 5;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.LocaleIndexResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 1,
      63, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr lang_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::Timestamp* updated_at_;
    ::uint64_t id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class LeaveWordIndexResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.LeaveWordIndexResponse.Item) */ {
 public:
  inline LeaveWordIndexResponse_Item() : LeaveWordIndexResponse_Item(nullptr) {}
  ~LeaveWordIndexResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LeaveWordIndexResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline LeaveWordIndexResponse_Item(const LeaveWordIndexResponse_Item& from)
      : LeaveWordIndexResponse_Item(nullptr, from) {}
  LeaveWordIndexResponse_Item(LeaveWordIndexResponse_Item&& from) noexcept
    : LeaveWordIndexResponse_Item() {
    *this = ::std::move(from);
  }

  inline LeaveWordIndexResponse_Item& operator=(const LeaveWordIndexResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaveWordIndexResponse_Item& operator=(LeaveWordIndexResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaveWordIndexResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const LeaveWordIndexResponse_Item* internal_default_instance() {
    return reinterpret_cast<const LeaveWordIndexResponse_Item*>(
               &_LeaveWordIndexResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(LeaveWordIndexResponse_Item& a, LeaveWordIndexResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(LeaveWordIndexResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaveWordIndexResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaveWordIndexResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LeaveWordIndexResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaveWordIndexResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LeaveWordIndexResponse_Item& from) {
    LeaveWordIndexResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LeaveWordIndexResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.LeaveWordIndexResponse.Item";
  }
  protected:
  explicit LeaveWordIndexResponse_Item(::google::protobuf::Arena* arena);
  LeaveWordIndexResponse_Item(::google::protobuf::Arena* arena, const LeaveWordIndexResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Status = LeaveWordIndexResponse_Item_Status;
  static constexpr Status Pending = LeaveWordIndexResponse_Item_Status_Pending;
  static constexpr Status Completed = LeaveWordIndexResponse_Item_Status_Completed;
  static inline bool Status_IsValid(int value) {
    return LeaveWordIndexResponse_Item_Status_IsValid(value);
  }
  static constexpr Status Status_MIN = LeaveWordIndexResponse_Item_Status_Status_MIN;
  static constexpr Status Status_MAX = LeaveWordIndexResponse_Item_Status_Status_MAX;
  static constexpr int Status_ARRAYSIZE = LeaveWordIndexResponse_Item_Status_Status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor* Status_descriptor() {
    return LeaveWordIndexResponse_Item_Status_descriptor();
  }
  template <typename T>
  static inline const std::string& Status_Name(T value) {
    return LeaveWordIndexResponse_Item_Status_Name(value);
  }
  static inline bool Status_Parse(absl::string_view name, Status* value) {
    return LeaveWordIndexResponse_Item_Status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kLangFieldNumber = 2,
    kIpFieldNumber = 3,
    kBodyFieldNumber = 4,
    kPublishedAtFieldNumber = 7,
    kDeletedAtFieldNumber = 8,
    kUpdatedAtFieldNumber = 9,
    kIdFieldNumber = 1,
    kEditorFieldNumber = 5,
    kStatusFieldNumber = 6,
  };
  // string lang = 2;
  void clear_lang() ;
  const std::string& lang() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_lang(Arg_&& arg, Args_... args);
  std::string* mutable_lang();
  PROTOBUF_NODISCARD std::string* release_lang();
  void set_allocated_lang(std::string* value);

  private:
  const std::string& _internal_lang() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_lang(
      const std::string& value);
  std::string* _internal_mutable_lang();

  public:
  // string ip = 3;
  void clear_ip() ;
  const std::string& ip() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ip(Arg_&& arg, Args_... args);
  std::string* mutable_ip();
  PROTOBUF_NODISCARD std::string* release_ip();
  void set_allocated_ip(std::string* value);

  private:
  const std::string& _internal_ip() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ip(
      const std::string& value);
  std::string* _internal_mutable_ip();

  public:
  // string body = 4;
  void clear_body() ;
  const std::string& body() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_body(Arg_&& arg, Args_... args);
  std::string* mutable_body();
  PROTOBUF_NODISCARD std::string* release_body();
  void set_allocated_body(std::string* value);

  private:
  const std::string& _internal_body() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_body(
      const std::string& value);
  std::string* _internal_mutable_body();

  public:
  // optional .google.protobuf.Timestamp published_at = 7;
  bool has_published_at() const;
  void clear_published_at() ;
  const ::google::protobuf::Timestamp& published_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_published_at();
  ::google::protobuf::Timestamp* mutable_published_at();
  void set_allocated_published_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_published_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_published_at();

  private:
  const ::google::protobuf::Timestamp& _internal_published_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_published_at();

  public:
  // optional .google.protobuf.Timestamp deleted_at = 8;
  bool has_deleted_at() const;
  void clear_deleted_at() ;
  const ::google::protobuf::Timestamp& deleted_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_deleted_at();
  ::google::protobuf::Timestamp* mutable_deleted_at();
  void set_allocated_deleted_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_deleted_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_deleted_at();

  private:
  const ::google::protobuf::Timestamp& _internal_deleted_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_deleted_at();

  public:
  // .google.protobuf.Timestamp updated_at = 9;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // .palm.balsam.v1.MediaEditor editor = 5;
  void clear_editor() ;
  ::palm::balsam::v1::MediaEditor editor() const;
  void set_editor(::palm::balsam::v1::MediaEditor value);

  private:
  ::palm::balsam::v1::MediaEditor _internal_editor() const;
  void _internal_set_editor(::palm::balsam::v1::MediaEditor value);

  public:
  // .palm.balsam.v1.LeaveWordIndexResponse.Item.Status status = 6;
  void clear_status() ;
  ::palm::balsam::v1::LeaveWordIndexResponse_Item_Status status() const;
  void set_status(::palm::balsam::v1::LeaveWordIndexResponse_Item_Status value);

  private:
  ::palm::balsam::v1::LeaveWordIndexResponse_Item_Status _internal_status() const;
  void _internal_set_status(::palm::balsam::v1::LeaveWordIndexResponse_Item_Status value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.LeaveWordIndexResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 3,
      69, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr lang_;
    ::google::protobuf::internal::ArenaStringPtr ip_;
    ::google::protobuf::internal::ArenaStringPtr body_;
    ::google::protobuf::Timestamp* published_at_;
    ::google::protobuf::Timestamp* deleted_at_;
    ::google::protobuf::Timestamp* updated_at_;
    ::uint64_t id_;
    int editor_;
    int status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class JwtSignRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.JwtSignRequest) */ {
 public:
  inline JwtSignRequest() : JwtSignRequest(nullptr) {}
  ~JwtSignRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR JwtSignRequest(::google::protobuf::internal::ConstantInitialized);

  inline JwtSignRequest(const JwtSignRequest& from)
      : JwtSignRequest(nullptr, from) {}
  JwtSignRequest(JwtSignRequest&& from) noexcept
    : JwtSignRequest() {
    *this = ::std::move(from);
  }

  inline JwtSignRequest& operator=(const JwtSignRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline JwtSignRequest& operator=(JwtSignRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const JwtSignRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const JwtSignRequest* internal_default_instance() {
    return reinterpret_cast<const JwtSignRequest*>(
               &_JwtSignRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(JwtSignRequest& a, JwtSignRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(JwtSignRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(JwtSignRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  JwtSignRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<JwtSignRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const JwtSignRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const JwtSignRequest& from) {
    JwtSignRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(JwtSignRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.JwtSignRequest";
  }
  protected:
  explicit JwtSignRequest(::google::protobuf::Arena* arena);
  JwtSignRequest(::google::protobuf::Arena* arena, const JwtSignRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAudiencesFieldNumber = 13,
    kKeyIdFieldNumber = 1,
    kIssuerFieldNumber = 11,
    kSubjectFieldNumber = 12,
    kExtraFieldNumber = 99,
    kNotBeforeFieldNumber = 18,
    kExpiresAtFieldNumber = 19,
  };
  // repeated string audiences = 13;
  int audiences_size() const;
  private:
  int _internal_audiences_size() const;

  public:
  void clear_audiences() ;
  const std::string& audiences(int index) const;
  std::string* mutable_audiences(int index);
  void set_audiences(int index, const std::string& value);
  void set_audiences(int index, std::string&& value);
  void set_audiences(int index, const char* value);
  void set_audiences(int index, const char* value, std::size_t size);
  void set_audiences(int index, absl::string_view value);
  std::string* add_audiences();
  void add_audiences(const std::string& value);
  void add_audiences(std::string&& value);
  void add_audiences(const char* value);
  void add_audiences(const char* value, std::size_t size);
  void add_audiences(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& audiences() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_audiences();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_audiences() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_audiences();

  public:
  // optional string key_id = 1;
  bool has_key_id() const;
  void clear_key_id() ;
  const std::string& key_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key_id(Arg_&& arg, Args_... args);
  std::string* mutable_key_id();
  PROTOBUF_NODISCARD std::string* release_key_id();
  void set_allocated_key_id(std::string* value);

  private:
  const std::string& _internal_key_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key_id(
      const std::string& value);
  std::string* _internal_mutable_key_id();

  public:
  // string issuer = 11;
  void clear_issuer() ;
  const std::string& issuer() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_issuer(Arg_&& arg, Args_... args);
  std::string* mutable_issuer();
  PROTOBUF_NODISCARD std::string* release_issuer();
  void set_allocated_issuer(std::string* value);

  private:
  const std::string& _internal_issuer() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_issuer(
      const std::string& value);
  std::string* _internal_mutable_issuer();

  public:
  // string subject = 12;
  void clear_subject() ;
  const std::string& subject() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subject(Arg_&& arg, Args_... args);
  std::string* mutable_subject();
  PROTOBUF_NODISCARD std::string* release_subject();
  void set_allocated_subject(std::string* value);

  private:
  const std::string& _internal_subject() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subject(
      const std::string& value);
  std::string* _internal_mutable_subject();

  public:
  // optional string extra = 99;
  bool has_extra() const;
  void clear_extra() ;
  const std::string& extra() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_extra(Arg_&& arg, Args_... args);
  std::string* mutable_extra();
  PROTOBUF_NODISCARD std::string* release_extra();
  void set_allocated_extra(std::string* value);

  private:
  const std::string& _internal_extra() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_extra(
      const std::string& value);
  std::string* _internal_mutable_extra();

  public:
  // .google.protobuf.Timestamp not_before = 18;
  bool has_not_before() const;
  void clear_not_before() ;
  const ::google::protobuf::Timestamp& not_before() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_not_before();
  ::google::protobuf::Timestamp* mutable_not_before();
  void set_allocated_not_before(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_not_before(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_not_before();

  private:
  const ::google::protobuf::Timestamp& _internal_not_before() const;
  ::google::protobuf::Timestamp* _internal_mutable_not_before();

  public:
  // .google.protobuf.Timestamp expires_at = 19;
  bool has_expires_at() const;
  void clear_expires_at() ;
  const ::google::protobuf::Timestamp& expires_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_expires_at();
  ::google::protobuf::Timestamp* mutable_expires_at();
  void set_allocated_expires_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_expires_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_expires_at();

  private:
  const ::google::protobuf::Timestamp& _internal_expires_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_expires_at();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.JwtSignRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 2,
      71, 7>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> audiences_;
    ::google::protobuf::internal::ArenaStringPtr key_id_;
    ::google::protobuf::internal::ArenaStringPtr issuer_;
    ::google::protobuf::internal::ArenaStringPtr subject_;
    ::google::protobuf::internal::ArenaStringPtr extra_;
    ::google::protobuf::Timestamp* not_before_;
    ::google::protobuf::Timestamp* expires_at_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class GoogleOauth2UserIndexResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item) */ {
 public:
  inline GoogleOauth2UserIndexResponse_Item() : GoogleOauth2UserIndexResponse_Item(nullptr) {}
  ~GoogleOauth2UserIndexResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GoogleOauth2UserIndexResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline GoogleOauth2UserIndexResponse_Item(const GoogleOauth2UserIndexResponse_Item& from)
      : GoogleOauth2UserIndexResponse_Item(nullptr, from) {}
  GoogleOauth2UserIndexResponse_Item(GoogleOauth2UserIndexResponse_Item&& from) noexcept
    : GoogleOauth2UserIndexResponse_Item() {
    *this = ::std::move(from);
  }

  inline GoogleOauth2UserIndexResponse_Item& operator=(const GoogleOauth2UserIndexResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline GoogleOauth2UserIndexResponse_Item& operator=(GoogleOauth2UserIndexResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GoogleOauth2UserIndexResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const GoogleOauth2UserIndexResponse_Item* internal_default_instance() {
    return reinterpret_cast<const GoogleOauth2UserIndexResponse_Item*>(
               &_GoogleOauth2UserIndexResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(GoogleOauth2UserIndexResponse_Item& a, GoogleOauth2UserIndexResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(GoogleOauth2UserIndexResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GoogleOauth2UserIndexResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GoogleOauth2UserIndexResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GoogleOauth2UserIndexResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GoogleOauth2UserIndexResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GoogleOauth2UserIndexResponse_Item& from) {
    GoogleOauth2UserIndexResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GoogleOauth2UserIndexResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.GoogleOauth2UserIndexResponse.Item";
  }
  protected:
  explicit GoogleOauth2UserIndexResponse_Item(::google::protobuf::Arena* arena);
  GoogleOauth2UserIndexResponse_Item(::google::protobuf::Arena* arena, const GoogleOauth2UserIndexResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubjectFieldNumber = 3,
    kEmailFieldNumber = 4,
    kNameFieldNumber = 6,
    kPictureFieldNumber = 7,
    kLocaleFieldNumber = 8,
    kDeletedAtFieldNumber = 9,
    kUpdatedAtFieldNumber = 10,
    kIdFieldNumber = 1,
    kUserIdFieldNumber = 2,
    kEmailVerifiedFieldNumber = 5,
  };
  // string subject = 3;
  void clear_subject() ;
  const std::string& subject() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_subject(Arg_&& arg, Args_... args);
  std::string* mutable_subject();
  PROTOBUF_NODISCARD std::string* release_subject();
  void set_allocated_subject(std::string* value);

  private:
  const std::string& _internal_subject() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_subject(
      const std::string& value);
  std::string* _internal_mutable_subject();

  public:
  // optional string email = 4;
  bool has_email() const;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // optional string name = 6;
  bool has_name() const;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // optional string picture = 7;
  bool has_picture() const;
  void clear_picture() ;
  const std::string& picture() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_picture(Arg_&& arg, Args_... args);
  std::string* mutable_picture();
  PROTOBUF_NODISCARD std::string* release_picture();
  void set_allocated_picture(std::string* value);

  private:
  const std::string& _internal_picture() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_picture(
      const std::string& value);
  std::string* _internal_mutable_picture();

  public:
  // optional string locale = 8;
  bool has_locale() const;
  void clear_locale() ;
  const std::string& locale() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_locale(Arg_&& arg, Args_... args);
  std::string* mutable_locale();
  PROTOBUF_NODISCARD std::string* release_locale();
  void set_allocated_locale(std::string* value);

  private:
  const std::string& _internal_locale() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_locale(
      const std::string& value);
  std::string* _internal_mutable_locale();

  public:
  // optional .google.protobuf.Timestamp deleted_at = 9;
  bool has_deleted_at() const;
  void clear_deleted_at() ;
  const ::google::protobuf::Timestamp& deleted_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_deleted_at();
  ::google::protobuf::Timestamp* mutable_deleted_at();
  void set_allocated_deleted_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_deleted_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_deleted_at();

  private:
  const ::google::protobuf::Timestamp& _internal_deleted_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_deleted_at();

  public:
  // .google.protobuf.Timestamp updated_at = 10;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // uint64 user_id = 2;
  void clear_user_id() ;
  ::uint64_t user_id() const;
  void set_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_user_id() const;
  void _internal_set_user_id(::uint64_t value);

  public:
  // bool email_verified = 5;
  void clear_email_verified() ;
  bool email_verified() const;
  void set_email_verified(bool value);

  private:
  bool _internal_email_verified() const;
  void _internal_set_email_verified(bool value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 2,
      95, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr subject_;
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr picture_;
    ::google::protobuf::internal::ArenaStringPtr locale_;
    ::google::protobuf::Timestamp* deleted_at_;
    ::google::protobuf::Timestamp* updated_at_;
    ::uint64_t id_;
    ::uint64_t user_id_;
    bool email_verified_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class EmailUserIndexResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.EmailUserIndexResponse.Item) */ {
 public:
  inline EmailUserIndexResponse_Item() : EmailUserIndexResponse_Item(nullptr) {}
  ~EmailUserIndexResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EmailUserIndexResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline EmailUserIndexResponse_Item(const EmailUserIndexResponse_Item& from)
      : EmailUserIndexResponse_Item(nullptr, from) {}
  EmailUserIndexResponse_Item(EmailUserIndexResponse_Item&& from) noexcept
    : EmailUserIndexResponse_Item() {
    *this = ::std::move(from);
  }

  inline EmailUserIndexResponse_Item& operator=(const EmailUserIndexResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmailUserIndexResponse_Item& operator=(EmailUserIndexResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmailUserIndexResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmailUserIndexResponse_Item* internal_default_instance() {
    return reinterpret_cast<const EmailUserIndexResponse_Item*>(
               &_EmailUserIndexResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(EmailUserIndexResponse_Item& a, EmailUserIndexResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(EmailUserIndexResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmailUserIndexResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmailUserIndexResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EmailUserIndexResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EmailUserIndexResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EmailUserIndexResponse_Item& from) {
    EmailUserIndexResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EmailUserIndexResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.EmailUserIndexResponse.Item";
  }
  protected:
  explicit EmailUserIndexResponse_Item(::google::protobuf::Arena* arena);
  EmailUserIndexResponse_Item(::google::protobuf::Arena* arena, const EmailUserIndexResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRealNameFieldNumber = 3,
    kNicknameFieldNumber = 4,
    kEmailFieldNumber = 5,
    kAvatarFieldNumber = 6,
    kConfirmedAtFieldNumber = 7,
    kDeletedAtFieldNumber = 8,
    kUpdatedAtFieldNumber = 9,
    kIdFieldNumber = 1,
    kUserIdFieldNumber = 2,
  };
  // string real_name = 3;
  void clear_real_name() ;
  const std::string& real_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_real_name(Arg_&& arg, Args_... args);
  std::string* mutable_real_name();
  PROTOBUF_NODISCARD std::string* release_real_name();
  void set_allocated_real_name(std::string* value);

  private:
  const std::string& _internal_real_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_real_name(
      const std::string& value);
  std::string* _internal_mutable_real_name();

  public:
  // string nickname = 4;
  void clear_nickname() ;
  const std::string& nickname() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_nickname(Arg_&& arg, Args_... args);
  std::string* mutable_nickname();
  PROTOBUF_NODISCARD std::string* release_nickname();
  void set_allocated_nickname(std::string* value);

  private:
  const std::string& _internal_nickname() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_nickname(
      const std::string& value);
  std::string* _internal_mutable_nickname();

  public:
  // string email = 5;
  void clear_email() ;
  const std::string& email() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_email(Arg_&& arg, Args_... args);
  std::string* mutable_email();
  PROTOBUF_NODISCARD std::string* release_email();
  void set_allocated_email(std::string* value);

  private:
  const std::string& _internal_email() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_email(
      const std::string& value);
  std::string* _internal_mutable_email();

  public:
  // string avatar = 6;
  void clear_avatar() ;
  const std::string& avatar() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_avatar(Arg_&& arg, Args_... args);
  std::string* mutable_avatar();
  PROTOBUF_NODISCARD std::string* release_avatar();
  void set_allocated_avatar(std::string* value);

  private:
  const std::string& _internal_avatar() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_avatar(
      const std::string& value);
  std::string* _internal_mutable_avatar();

  public:
  // optional .google.protobuf.Timestamp confirmed_at = 7;
  bool has_confirmed_at() const;
  void clear_confirmed_at() ;
  const ::google::protobuf::Timestamp& confirmed_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_confirmed_at();
  ::google::protobuf::Timestamp* mutable_confirmed_at();
  void set_allocated_confirmed_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_confirmed_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_confirmed_at();

  private:
  const ::google::protobuf::Timestamp& _internal_confirmed_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_confirmed_at();

  public:
  // optional .google.protobuf.Timestamp deleted_at = 8;
  bool has_deleted_at() const;
  void clear_deleted_at() ;
  const ::google::protobuf::Timestamp& deleted_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_deleted_at();
  ::google::protobuf::Timestamp* mutable_deleted_at();
  void set_allocated_deleted_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_deleted_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_deleted_at();

  private:
  const ::google::protobuf::Timestamp& _internal_deleted_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_deleted_at();

  public:
  // .google.protobuf.Timestamp updated_at = 9;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // uint64 user_id = 2;
  void clear_user_id() ;
  ::uint64_t user_id() const;
  void set_user_id(::uint64_t value);

  private:
  ::uint64_t _internal_user_id() const;
  void _internal_set_user_id(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.EmailUserIndexResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 9, 3,
      87, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr real_name_;
    ::google::protobuf::internal::ArenaStringPtr nickname_;
    ::google::protobuf::internal::ArenaStringPtr email_;
    ::google::protobuf::internal::ArenaStringPtr avatar_;
    ::google::protobuf::Timestamp* confirmed_at_;
    ::google::protobuf::Timestamp* deleted_at_;
    ::google::protobuf::Timestamp* updated_at_;
    ::uint64_t id_;
    ::uint64_t user_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class AttachmentIndexResponse_Item final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.AttachmentIndexResponse.Item) */ {
 public:
  inline AttachmentIndexResponse_Item() : AttachmentIndexResponse_Item(nullptr) {}
  ~AttachmentIndexResponse_Item() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AttachmentIndexResponse_Item(::google::protobuf::internal::ConstantInitialized);

  inline AttachmentIndexResponse_Item(const AttachmentIndexResponse_Item& from)
      : AttachmentIndexResponse_Item(nullptr, from) {}
  AttachmentIndexResponse_Item(AttachmentIndexResponse_Item&& from) noexcept
    : AttachmentIndexResponse_Item() {
    *this = ::std::move(from);
  }

  inline AttachmentIndexResponse_Item& operator=(const AttachmentIndexResponse_Item& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttachmentIndexResponse_Item& operator=(AttachmentIndexResponse_Item&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AttachmentIndexResponse_Item& default_instance() {
    return *internal_default_instance();
  }
  static inline const AttachmentIndexResponse_Item* internal_default_instance() {
    return reinterpret_cast<const AttachmentIndexResponse_Item*>(
               &_AttachmentIndexResponse_Item_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(AttachmentIndexResponse_Item& a, AttachmentIndexResponse_Item& b) {
    a.Swap(&b);
  }
  inline void Swap(AttachmentIndexResponse_Item* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AttachmentIndexResponse_Item* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AttachmentIndexResponse_Item* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AttachmentIndexResponse_Item>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AttachmentIndexResponse_Item& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AttachmentIndexResponse_Item& from) {
    AttachmentIndexResponse_Item::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AttachmentIndexResponse_Item* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.AttachmentIndexResponse.Item";
  }
  protected:
  explicit AttachmentIndexResponse_Item(::google::protobuf::Arena* arena);
  AttachmentIndexResponse_Item(::google::protobuf::Arena* arena, const AttachmentIndexResponse_Item& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBucketFieldNumber = 3,
    kObjectFieldNumber = 4,
    kTitleFieldNumber = 5,
    kContentTypeFieldNumber = 7,
    kUploadedAtFieldNumber = 11,
    kDeletedAtFieldNumber = 12,
    kUpdatedAtFieldNumber = 13,
    kIdFieldNumber = 1,
    kUserFieldNumber = 2,
    kSizeFieldNumber = 6,
  };
  // string bucket = 3;
  void clear_bucket() ;
  const std::string& bucket() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_bucket(Arg_&& arg, Args_... args);
  std::string* mutable_bucket();
  PROTOBUF_NODISCARD std::string* release_bucket();
  void set_allocated_bucket(std::string* value);

  private:
  const std::string& _internal_bucket() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_bucket(
      const std::string& value);
  std::string* _internal_mutable_bucket();

  public:
  // string object = 4;
  void clear_object() ;
  const std::string& object() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_object(Arg_&& arg, Args_... args);
  std::string* mutable_object();
  PROTOBUF_NODISCARD std::string* release_object();
  void set_allocated_object(std::string* value);

  private:
  const std::string& _internal_object() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_object(
      const std::string& value);
  std::string* _internal_mutable_object();

  public:
  // string title = 5;
  void clear_title() ;
  const std::string& title() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_title(Arg_&& arg, Args_... args);
  std::string* mutable_title();
  PROTOBUF_NODISCARD std::string* release_title();
  void set_allocated_title(std::string* value);

  private:
  const std::string& _internal_title() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_title(
      const std::string& value);
  std::string* _internal_mutable_title();

  public:
  // string content_type = 7;
  void clear_content_type() ;
  const std::string& content_type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_content_type(Arg_&& arg, Args_... args);
  std::string* mutable_content_type();
  PROTOBUF_NODISCARD std::string* release_content_type();
  void set_allocated_content_type(std::string* value);

  private:
  const std::string& _internal_content_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_content_type(
      const std::string& value);
  std::string* _internal_mutable_content_type();

  public:
  // optional .google.protobuf.Timestamp uploaded_at = 11;
  bool has_uploaded_at() const;
  void clear_uploaded_at() ;
  const ::google::protobuf::Timestamp& uploaded_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_uploaded_at();
  ::google::protobuf::Timestamp* mutable_uploaded_at();
  void set_allocated_uploaded_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_uploaded_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_uploaded_at();

  private:
  const ::google::protobuf::Timestamp& _internal_uploaded_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_uploaded_at();

  public:
  // optional .google.protobuf.Timestamp deleted_at = 12;
  bool has_deleted_at() const;
  void clear_deleted_at() ;
  const ::google::protobuf::Timestamp& deleted_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_deleted_at();
  ::google::protobuf::Timestamp* mutable_deleted_at();
  void set_allocated_deleted_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_deleted_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_deleted_at();

  private:
  const ::google::protobuf::Timestamp& _internal_deleted_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_deleted_at();

  public:
  // .google.protobuf.Timestamp updated_at = 13;
  bool has_updated_at() const;
  void clear_updated_at() ;
  const ::google::protobuf::Timestamp& updated_at() const;
  PROTOBUF_NODISCARD ::google::protobuf::Timestamp* release_updated_at();
  ::google::protobuf::Timestamp* mutable_updated_at();
  void set_allocated_updated_at(::google::protobuf::Timestamp* value);
  void unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value);
  ::google::protobuf::Timestamp* unsafe_arena_release_updated_at();

  private:
  const ::google::protobuf::Timestamp& _internal_updated_at() const;
  ::google::protobuf::Timestamp* _internal_mutable_updated_at();

  public:
  // uint64 id = 1;
  void clear_id() ;
  ::uint64_t id() const;
  void set_id(::uint64_t value);

  private:
  ::uint64_t _internal_id() const;
  void _internal_set_id(::uint64_t value);

  public:
  // uint64 user = 2;
  void clear_user() ;
  ::uint64_t user() const;
  void set_user(::uint64_t value);

  private:
  ::uint64_t _internal_user() const;
  void _internal_set_user(::uint64_t value);

  public:
  // uint64 size = 6;
  void clear_size() ;
  ::uint64_t size() const;
  void set_size(::uint64_t value);

  private:
  ::uint64_t _internal_size() const;
  void _internal_set_size(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.AttachmentIndexResponse.Item)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 10, 3,
      89, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr bucket_;
    ::google::protobuf::internal::ArenaStringPtr object_;
    ::google::protobuf::internal::ArenaStringPtr title_;
    ::google::protobuf::internal::ArenaStringPtr content_type_;
    ::google::protobuf::Timestamp* uploaded_at_;
    ::google::protobuf::Timestamp* deleted_at_;
    ::google::protobuf::Timestamp* updated_at_;
    ::uint64_t id_;
    ::uint64_t user_;
    ::uint64_t size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class WechatOauth2UserIndexResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.WechatOauth2UserIndexResponse) */ {
 public:
  inline WechatOauth2UserIndexResponse() : WechatOauth2UserIndexResponse(nullptr) {}
  ~WechatOauth2UserIndexResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatOauth2UserIndexResponse(::google::protobuf::internal::ConstantInitialized);

  inline WechatOauth2UserIndexResponse(const WechatOauth2UserIndexResponse& from)
      : WechatOauth2UserIndexResponse(nullptr, from) {}
  WechatOauth2UserIndexResponse(WechatOauth2UserIndexResponse&& from) noexcept
    : WechatOauth2UserIndexResponse() {
    *this = ::std::move(from);
  }

  inline WechatOauth2UserIndexResponse& operator=(const WechatOauth2UserIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatOauth2UserIndexResponse& operator=(WechatOauth2UserIndexResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatOauth2UserIndexResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatOauth2UserIndexResponse* internal_default_instance() {
    return reinterpret_cast<const WechatOauth2UserIndexResponse*>(
               &_WechatOauth2UserIndexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(WechatOauth2UserIndexResponse& a, WechatOauth2UserIndexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatOauth2UserIndexResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatOauth2UserIndexResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatOauth2UserIndexResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatOauth2UserIndexResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatOauth2UserIndexResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatOauth2UserIndexResponse& from) {
    WechatOauth2UserIndexResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatOauth2UserIndexResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.WechatOauth2UserIndexResponse";
  }
  protected:
  explicit WechatOauth2UserIndexResponse(::google::protobuf::Arena* arena);
  WechatOauth2UserIndexResponse(::google::protobuf::Arena* arena, const WechatOauth2UserIndexResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = WechatOauth2UserIndexResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .palm.balsam.v1.WechatOauth2UserIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::WechatOauth2UserIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::WechatOauth2UserIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item& items(int index) const;
  ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item >&
      items() const;
  // .palm.balsam.v1.Pagination pagination = 2;
  bool has_pagination() const;
  void clear_pagination() ;
  const ::palm::balsam::v1::Pagination& pagination() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::Pagination* release_pagination();
  ::palm::balsam::v1::Pagination* mutable_pagination();
  void set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  void unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  ::palm::balsam::v1::Pagination* unsafe_arena_release_pagination();

  private:
  const ::palm::balsam::v1::Pagination& _internal_pagination() const;
  ::palm::balsam::v1::Pagination* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.WechatOauth2UserIndexResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item > items_;
    ::palm::balsam::v1::Pagination* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class WechatMiniProgramUserIndexResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.WechatMiniProgramUserIndexResponse) */ {
 public:
  inline WechatMiniProgramUserIndexResponse() : WechatMiniProgramUserIndexResponse(nullptr) {}
  ~WechatMiniProgramUserIndexResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WechatMiniProgramUserIndexResponse(::google::protobuf::internal::ConstantInitialized);

  inline WechatMiniProgramUserIndexResponse(const WechatMiniProgramUserIndexResponse& from)
      : WechatMiniProgramUserIndexResponse(nullptr, from) {}
  WechatMiniProgramUserIndexResponse(WechatMiniProgramUserIndexResponse&& from) noexcept
    : WechatMiniProgramUserIndexResponse() {
    *this = ::std::move(from);
  }

  inline WechatMiniProgramUserIndexResponse& operator=(const WechatMiniProgramUserIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WechatMiniProgramUserIndexResponse& operator=(WechatMiniProgramUserIndexResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WechatMiniProgramUserIndexResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WechatMiniProgramUserIndexResponse* internal_default_instance() {
    return reinterpret_cast<const WechatMiniProgramUserIndexResponse*>(
               &_WechatMiniProgramUserIndexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(WechatMiniProgramUserIndexResponse& a, WechatMiniProgramUserIndexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WechatMiniProgramUserIndexResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WechatMiniProgramUserIndexResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WechatMiniProgramUserIndexResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WechatMiniProgramUserIndexResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WechatMiniProgramUserIndexResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WechatMiniProgramUserIndexResponse& from) {
    WechatMiniProgramUserIndexResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WechatMiniProgramUserIndexResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.WechatMiniProgramUserIndexResponse";
  }
  protected:
  explicit WechatMiniProgramUserIndexResponse(::google::protobuf::Arena* arena);
  WechatMiniProgramUserIndexResponse(::google::protobuf::Arena* arena, const WechatMiniProgramUserIndexResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = WechatMiniProgramUserIndexResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::balsam::v1::WechatMiniProgramUserIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::WechatMiniProgramUserIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::WechatMiniProgramUserIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::WechatMiniProgramUserIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::balsam::v1::WechatMiniProgramUserIndexResponse_Item& items(int index) const;
  ::palm::balsam::v1::WechatMiniProgramUserIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::WechatMiniProgramUserIndexResponse_Item >&
      items() const;
  // .palm.balsam.v1.Pagination pagination = 2;
  bool has_pagination() const;
  void clear_pagination() ;
  const ::palm::balsam::v1::Pagination& pagination() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::Pagination* release_pagination();
  ::palm::balsam::v1::Pagination* mutable_pagination();
  void set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  void unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  ::palm::balsam::v1::Pagination* unsafe_arena_release_pagination();

  private:
  const ::palm::balsam::v1::Pagination& _internal_pagination() const;
  ::palm::balsam::v1::Pagination* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.WechatMiniProgramUserIndexResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::WechatMiniProgramUserIndexResponse_Item > items_;
    ::palm::balsam::v1::Pagination* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class UserLogsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.UserLogsResponse) */ {
 public:
  inline UserLogsResponse() : UserLogsResponse(nullptr) {}
  ~UserLogsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserLogsResponse(::google::protobuf::internal::ConstantInitialized);

  inline UserLogsResponse(const UserLogsResponse& from)
      : UserLogsResponse(nullptr, from) {}
  UserLogsResponse(UserLogsResponse&& from) noexcept
    : UserLogsResponse() {
    *this = ::std::move(from);
  }

  inline UserLogsResponse& operator=(const UserLogsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserLogsResponse& operator=(UserLogsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserLogsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserLogsResponse* internal_default_instance() {
    return reinterpret_cast<const UserLogsResponse*>(
               &_UserLogsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(UserLogsResponse& a, UserLogsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UserLogsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserLogsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserLogsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserLogsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserLogsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserLogsResponse& from) {
    UserLogsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserLogsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.UserLogsResponse";
  }
  protected:
  explicit UserLogsResponse(::google::protobuf::Arena* arena);
  UserLogsResponse(::google::protobuf::Arena* arena, const UserLogsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = UserLogsResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 9,
  };
  // repeated .palm.balsam.v1.UserLogsResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::balsam::v1::UserLogsResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::UserLogsResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserLogsResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserLogsResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::balsam::v1::UserLogsResponse_Item& items(int index) const;
  ::palm::balsam::v1::UserLogsResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::UserLogsResponse_Item >&
      items() const;
  // .palm.balsam.v1.Pagination pagination = 9;
  bool has_pagination() const;
  void clear_pagination() ;
  const ::palm::balsam::v1::Pagination& pagination() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::Pagination* release_pagination();
  ::palm::balsam::v1::Pagination* mutable_pagination();
  void set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  void unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  ::palm::balsam::v1::Pagination* unsafe_arena_release_pagination();

  private:
  const ::palm::balsam::v1::Pagination& _internal_pagination() const;
  ::palm::balsam::v1::Pagination* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.UserLogsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::UserLogsResponse_Item > items_;
    ::palm::balsam::v1::Pagination* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class UserIndexResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.UserIndexResponse) */ {
 public:
  inline UserIndexResponse() : UserIndexResponse(nullptr) {}
  ~UserIndexResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR UserIndexResponse(::google::protobuf::internal::ConstantInitialized);

  inline UserIndexResponse(const UserIndexResponse& from)
      : UserIndexResponse(nullptr, from) {}
  UserIndexResponse(UserIndexResponse&& from) noexcept
    : UserIndexResponse() {
    *this = ::std::move(from);
  }

  inline UserIndexResponse& operator=(const UserIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline UserIndexResponse& operator=(UserIndexResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UserIndexResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const UserIndexResponse* internal_default_instance() {
    return reinterpret_cast<const UserIndexResponse*>(
               &_UserIndexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(UserIndexResponse& a, UserIndexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(UserIndexResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UserIndexResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UserIndexResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<UserIndexResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UserIndexResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const UserIndexResponse& from) {
    UserIndexResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UserIndexResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.UserIndexResponse";
  }
  protected:
  explicit UserIndexResponse(::google::protobuf::Arena* arena);
  UserIndexResponse(::google::protobuf::Arena* arena, const UserIndexResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = UserIndexResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 9,
  };
  // repeated .palm.balsam.v1.UserIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::balsam::v1::UserIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::UserIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::balsam::v1::UserIndexResponse_Item& items(int index) const;
  ::palm::balsam::v1::UserIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::UserIndexResponse_Item >&
      items() const;
  // .palm.balsam.v1.Pagination pagination = 9;
  bool has_pagination() const;
  void clear_pagination() ;
  const ::palm::balsam::v1::Pagination& pagination() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::Pagination* release_pagination();
  ::palm::balsam::v1::Pagination* mutable_pagination();
  void set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  void unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  ::palm::balsam::v1::Pagination* unsafe_arena_release_pagination();

  private:
  const ::palm::balsam::v1::Pagination& _internal_pagination() const;
  ::palm::balsam::v1::Pagination* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.UserIndexResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::UserIndexResponse_Item > items_;
    ::palm::balsam::v1::Pagination* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SessionListResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SessionListResponse) */ {
 public:
  inline SessionListResponse() : SessionListResponse(nullptr) {}
  ~SessionListResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SessionListResponse(::google::protobuf::internal::ConstantInitialized);

  inline SessionListResponse(const SessionListResponse& from)
      : SessionListResponse(nullptr, from) {}
  SessionListResponse(SessionListResponse&& from) noexcept
    : SessionListResponse() {
    *this = ::std::move(from);
  }

  inline SessionListResponse& operator=(const SessionListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SessionListResponse& operator=(SessionListResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SessionListResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SessionListResponse* internal_default_instance() {
    return reinterpret_cast<const SessionListResponse*>(
               &_SessionListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(SessionListResponse& a, SessionListResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SessionListResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SessionListResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SessionListResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SessionListResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SessionListResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SessionListResponse& from) {
    SessionListResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SessionListResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SessionListResponse";
  }
  protected:
  explicit SessionListResponse(::google::protobuf::Arena* arena);
  SessionListResponse(::google::protobuf::Arena* arena, const SessionListResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .palm.balsam.v1.SessionIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::balsam::v1::SessionIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::SessionIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::SessionIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::SessionIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::balsam::v1::SessionIndexResponse_Item& items(int index) const;
  ::palm::balsam::v1::SessionIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::SessionIndexResponse_Item >&
      items() const;
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SessionListResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::SessionIndexResponse_Item > items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class SessionIndexResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.SessionIndexResponse) */ {
 public:
  inline SessionIndexResponse() : SessionIndexResponse(nullptr) {}
  ~SessionIndexResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SessionIndexResponse(::google::protobuf::internal::ConstantInitialized);

  inline SessionIndexResponse(const SessionIndexResponse& from)
      : SessionIndexResponse(nullptr, from) {}
  SessionIndexResponse(SessionIndexResponse&& from) noexcept
    : SessionIndexResponse() {
    *this = ::std::move(from);
  }

  inline SessionIndexResponse& operator=(const SessionIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SessionIndexResponse& operator=(SessionIndexResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SessionIndexResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SessionIndexResponse* internal_default_instance() {
    return reinterpret_cast<const SessionIndexResponse*>(
               &_SessionIndexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(SessionIndexResponse& a, SessionIndexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SessionIndexResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SessionIndexResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SessionIndexResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SessionIndexResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SessionIndexResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SessionIndexResponse& from) {
    SessionIndexResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SessionIndexResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.SessionIndexResponse";
  }
  protected:
  explicit SessionIndexResponse(::google::protobuf::Arena* arena);
  SessionIndexResponse(::google::protobuf::Arena* arena, const SessionIndexResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = SessionIndexResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .palm.balsam.v1.SessionIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::balsam::v1::SessionIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::SessionIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::SessionIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::SessionIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::balsam::v1::SessionIndexResponse_Item& items(int index) const;
  ::palm::balsam::v1::SessionIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::SessionIndexResponse_Item >&
      items() const;
  // .palm.balsam.v1.Pagination pagination = 2;
  bool has_pagination() const;
  void clear_pagination() ;
  const ::palm::balsam::v1::Pagination& pagination() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::Pagination* release_pagination();
  ::palm::balsam::v1::Pagination* mutable_pagination();
  void set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  void unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  ::palm::balsam::v1::Pagination* unsafe_arena_release_pagination();

  private:
  const ::palm::balsam::v1::Pagination& _internal_pagination() const;
  ::palm::balsam::v1::Pagination* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.SessionIndexResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::SessionIndexResponse_Item > items_;
    ::palm::balsam::v1::Pagination* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class LocaleIndexResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.LocaleIndexResponse) */ {
 public:
  inline LocaleIndexResponse() : LocaleIndexResponse(nullptr) {}
  ~LocaleIndexResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LocaleIndexResponse(::google::protobuf::internal::ConstantInitialized);

  inline LocaleIndexResponse(const LocaleIndexResponse& from)
      : LocaleIndexResponse(nullptr, from) {}
  LocaleIndexResponse(LocaleIndexResponse&& from) noexcept
    : LocaleIndexResponse() {
    *this = ::std::move(from);
  }

  inline LocaleIndexResponse& operator=(const LocaleIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocaleIndexResponse& operator=(LocaleIndexResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LocaleIndexResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LocaleIndexResponse* internal_default_instance() {
    return reinterpret_cast<const LocaleIndexResponse*>(
               &_LocaleIndexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(LocaleIndexResponse& a, LocaleIndexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LocaleIndexResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocaleIndexResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LocaleIndexResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LocaleIndexResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LocaleIndexResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LocaleIndexResponse& from) {
    LocaleIndexResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LocaleIndexResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.LocaleIndexResponse";
  }
  protected:
  explicit LocaleIndexResponse(::google::protobuf::Arena* arena);
  LocaleIndexResponse(::google::protobuf::Arena* arena, const LocaleIndexResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = LocaleIndexResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .palm.balsam.v1.LocaleIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::balsam::v1::LocaleIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::LocaleIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::LocaleIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::LocaleIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::balsam::v1::LocaleIndexResponse_Item& items(int index) const;
  ::palm::balsam::v1::LocaleIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::LocaleIndexResponse_Item >&
      items() const;
  // .palm.balsam.v1.Pagination pagination = 2;
  bool has_pagination() const;
  void clear_pagination() ;
  const ::palm::balsam::v1::Pagination& pagination() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::Pagination* release_pagination();
  ::palm::balsam::v1::Pagination* mutable_pagination();
  void set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  void unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  ::palm::balsam::v1::Pagination* unsafe_arena_release_pagination();

  private:
  const ::palm::balsam::v1::Pagination& _internal_pagination() const;
  ::palm::balsam::v1::Pagination* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.LocaleIndexResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::LocaleIndexResponse_Item > items_;
    ::palm::balsam::v1::Pagination* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class LocaleByLangResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.LocaleByLangResponse) */ {
 public:
  inline LocaleByLangResponse() : LocaleByLangResponse(nullptr) {}
  ~LocaleByLangResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LocaleByLangResponse(::google::protobuf::internal::ConstantInitialized);

  inline LocaleByLangResponse(const LocaleByLangResponse& from)
      : LocaleByLangResponse(nullptr, from) {}
  LocaleByLangResponse(LocaleByLangResponse&& from) noexcept
    : LocaleByLangResponse() {
    *this = ::std::move(from);
  }

  inline LocaleByLangResponse& operator=(const LocaleByLangResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LocaleByLangResponse& operator=(LocaleByLangResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LocaleByLangResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LocaleByLangResponse* internal_default_instance() {
    return reinterpret_cast<const LocaleByLangResponse*>(
               &_LocaleByLangResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(LocaleByLangResponse& a, LocaleByLangResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LocaleByLangResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LocaleByLangResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LocaleByLangResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LocaleByLangResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LocaleByLangResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LocaleByLangResponse& from) {
    LocaleByLangResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LocaleByLangResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.LocaleByLangResponse";
  }
  protected:
  explicit LocaleByLangResponse(::google::protobuf::Arena* arena);
  LocaleByLangResponse(::google::protobuf::Arena* arena, const LocaleByLangResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .palm.balsam.v1.LocaleIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::balsam::v1::LocaleIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::LocaleIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::LocaleIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::LocaleIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::balsam::v1::LocaleIndexResponse_Item& items(int index) const;
  ::palm::balsam::v1::LocaleIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::LocaleIndexResponse_Item >&
      items() const;
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.LocaleByLangResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::LocaleIndexResponse_Item > items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class LeaveWordIndexResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.LeaveWordIndexResponse) */ {
 public:
  inline LeaveWordIndexResponse() : LeaveWordIndexResponse(nullptr) {}
  ~LeaveWordIndexResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR LeaveWordIndexResponse(::google::protobuf::internal::ConstantInitialized);

  inline LeaveWordIndexResponse(const LeaveWordIndexResponse& from)
      : LeaveWordIndexResponse(nullptr, from) {}
  LeaveWordIndexResponse(LeaveWordIndexResponse&& from) noexcept
    : LeaveWordIndexResponse() {
    *this = ::std::move(from);
  }

  inline LeaveWordIndexResponse& operator=(const LeaveWordIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LeaveWordIndexResponse& operator=(LeaveWordIndexResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LeaveWordIndexResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const LeaveWordIndexResponse* internal_default_instance() {
    return reinterpret_cast<const LeaveWordIndexResponse*>(
               &_LeaveWordIndexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(LeaveWordIndexResponse& a, LeaveWordIndexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(LeaveWordIndexResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LeaveWordIndexResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LeaveWordIndexResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<LeaveWordIndexResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LeaveWordIndexResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const LeaveWordIndexResponse& from) {
    LeaveWordIndexResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LeaveWordIndexResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.LeaveWordIndexResponse";
  }
  protected:
  explicit LeaveWordIndexResponse(::google::protobuf::Arena* arena);
  LeaveWordIndexResponse(::google::protobuf::Arena* arena, const LeaveWordIndexResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = LeaveWordIndexResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .palm.balsam.v1.LeaveWordIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::balsam::v1::LeaveWordIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::LeaveWordIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::LeaveWordIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::LeaveWordIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::balsam::v1::LeaveWordIndexResponse_Item& items(int index) const;
  ::palm::balsam::v1::LeaveWordIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::LeaveWordIndexResponse_Item >&
      items() const;
  // .palm.balsam.v1.Pagination pagination = 2;
  bool has_pagination() const;
  void clear_pagination() ;
  const ::palm::balsam::v1::Pagination& pagination() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::Pagination* release_pagination();
  ::palm::balsam::v1::Pagination* mutable_pagination();
  void set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  void unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  ::palm::balsam::v1::Pagination* unsafe_arena_release_pagination();

  private:
  const ::palm::balsam::v1::Pagination& _internal_pagination() const;
  ::palm::balsam::v1::Pagination* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.LeaveWordIndexResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::LeaveWordIndexResponse_Item > items_;
    ::palm::balsam::v1::Pagination* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class GoogleOauth2UserIndexResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.GoogleOauth2UserIndexResponse) */ {
 public:
  inline GoogleOauth2UserIndexResponse() : GoogleOauth2UserIndexResponse(nullptr) {}
  ~GoogleOauth2UserIndexResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GoogleOauth2UserIndexResponse(::google::protobuf::internal::ConstantInitialized);

  inline GoogleOauth2UserIndexResponse(const GoogleOauth2UserIndexResponse& from)
      : GoogleOauth2UserIndexResponse(nullptr, from) {}
  GoogleOauth2UserIndexResponse(GoogleOauth2UserIndexResponse&& from) noexcept
    : GoogleOauth2UserIndexResponse() {
    *this = ::std::move(from);
  }

  inline GoogleOauth2UserIndexResponse& operator=(const GoogleOauth2UserIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GoogleOauth2UserIndexResponse& operator=(GoogleOauth2UserIndexResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GoogleOauth2UserIndexResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GoogleOauth2UserIndexResponse* internal_default_instance() {
    return reinterpret_cast<const GoogleOauth2UserIndexResponse*>(
               &_GoogleOauth2UserIndexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(GoogleOauth2UserIndexResponse& a, GoogleOauth2UserIndexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GoogleOauth2UserIndexResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GoogleOauth2UserIndexResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GoogleOauth2UserIndexResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GoogleOauth2UserIndexResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GoogleOauth2UserIndexResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GoogleOauth2UserIndexResponse& from) {
    GoogleOauth2UserIndexResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GoogleOauth2UserIndexResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.GoogleOauth2UserIndexResponse";
  }
  protected:
  explicit GoogleOauth2UserIndexResponse(::google::protobuf::Arena* arena);
  GoogleOauth2UserIndexResponse(::google::protobuf::Arena* arena, const GoogleOauth2UserIndexResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = GoogleOauth2UserIndexResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .palm.balsam.v1.GoogleOauth2UserIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::balsam::v1::GoogleOauth2UserIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::GoogleOauth2UserIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::GoogleOauth2UserIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::GoogleOauth2UserIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::balsam::v1::GoogleOauth2UserIndexResponse_Item& items(int index) const;
  ::palm::balsam::v1::GoogleOauth2UserIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::GoogleOauth2UserIndexResponse_Item >&
      items() const;
  // .palm.balsam.v1.Pagination pagination = 2;
  bool has_pagination() const;
  void clear_pagination() ;
  const ::palm::balsam::v1::Pagination& pagination() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::Pagination* release_pagination();
  ::palm::balsam::v1::Pagination* mutable_pagination();
  void set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  void unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  ::palm::balsam::v1::Pagination* unsafe_arena_release_pagination();

  private:
  const ::palm::balsam::v1::Pagination& _internal_pagination() const;
  ::palm::balsam::v1::Pagination* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.GoogleOauth2UserIndexResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::GoogleOauth2UserIndexResponse_Item > items_;
    ::palm::balsam::v1::Pagination* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class EmailUserIndexResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.EmailUserIndexResponse) */ {
 public:
  inline EmailUserIndexResponse() : EmailUserIndexResponse(nullptr) {}
  ~EmailUserIndexResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR EmailUserIndexResponse(::google::protobuf::internal::ConstantInitialized);

  inline EmailUserIndexResponse(const EmailUserIndexResponse& from)
      : EmailUserIndexResponse(nullptr, from) {}
  EmailUserIndexResponse(EmailUserIndexResponse&& from) noexcept
    : EmailUserIndexResponse() {
    *this = ::std::move(from);
  }

  inline EmailUserIndexResponse& operator=(const EmailUserIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline EmailUserIndexResponse& operator=(EmailUserIndexResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const EmailUserIndexResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const EmailUserIndexResponse* internal_default_instance() {
    return reinterpret_cast<const EmailUserIndexResponse*>(
               &_EmailUserIndexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(EmailUserIndexResponse& a, EmailUserIndexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(EmailUserIndexResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(EmailUserIndexResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  EmailUserIndexResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<EmailUserIndexResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const EmailUserIndexResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const EmailUserIndexResponse& from) {
    EmailUserIndexResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(EmailUserIndexResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.EmailUserIndexResponse";
  }
  protected:
  explicit EmailUserIndexResponse(::google::protobuf::Arena* arena);
  EmailUserIndexResponse(::google::protobuf::Arena* arena, const EmailUserIndexResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = EmailUserIndexResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .palm.balsam.v1.EmailUserIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::balsam::v1::EmailUserIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::EmailUserIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::EmailUserIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::EmailUserIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::balsam::v1::EmailUserIndexResponse_Item& items(int index) const;
  ::palm::balsam::v1::EmailUserIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::EmailUserIndexResponse_Item >&
      items() const;
  // .palm.balsam.v1.Pagination pagination = 2;
  bool has_pagination() const;
  void clear_pagination() ;
  const ::palm::balsam::v1::Pagination& pagination() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::Pagination* release_pagination();
  ::palm::balsam::v1::Pagination* mutable_pagination();
  void set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  void unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  ::palm::balsam::v1::Pagination* unsafe_arena_release_pagination();

  private:
  const ::palm::balsam::v1::Pagination& _internal_pagination() const;
  ::palm::balsam::v1::Pagination* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.EmailUserIndexResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::EmailUserIndexResponse_Item > items_;
    ::palm::balsam::v1::Pagination* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class AttachmentListResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.AttachmentListResponse) */ {
 public:
  inline AttachmentListResponse() : AttachmentListResponse(nullptr) {}
  ~AttachmentListResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AttachmentListResponse(::google::protobuf::internal::ConstantInitialized);

  inline AttachmentListResponse(const AttachmentListResponse& from)
      : AttachmentListResponse(nullptr, from) {}
  AttachmentListResponse(AttachmentListResponse&& from) noexcept
    : AttachmentListResponse() {
    *this = ::std::move(from);
  }

  inline AttachmentListResponse& operator=(const AttachmentListResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttachmentListResponse& operator=(AttachmentListResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AttachmentListResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AttachmentListResponse* internal_default_instance() {
    return reinterpret_cast<const AttachmentListResponse*>(
               &_AttachmentListResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(AttachmentListResponse& a, AttachmentListResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AttachmentListResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AttachmentListResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AttachmentListResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AttachmentListResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AttachmentListResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AttachmentListResponse& from) {
    AttachmentListResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AttachmentListResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.AttachmentListResponse";
  }
  protected:
  explicit AttachmentListResponse(::google::protobuf::Arena* arena);
  AttachmentListResponse(::google::protobuf::Arena* arena, const AttachmentListResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
  };
  // repeated .palm.balsam.v1.AttachmentIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::balsam::v1::AttachmentIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::AttachmentIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::AttachmentIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::AttachmentIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::balsam::v1::AttachmentIndexResponse_Item& items(int index) const;
  ::palm::balsam::v1::AttachmentIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::AttachmentIndexResponse_Item >&
      items() const;
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.AttachmentListResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::AttachmentIndexResponse_Item > items_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};// -------------------------------------------------------------------

class AttachmentIndexResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:palm.balsam.v1.AttachmentIndexResponse) */ {
 public:
  inline AttachmentIndexResponse() : AttachmentIndexResponse(nullptr) {}
  ~AttachmentIndexResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AttachmentIndexResponse(::google::protobuf::internal::ConstantInitialized);

  inline AttachmentIndexResponse(const AttachmentIndexResponse& from)
      : AttachmentIndexResponse(nullptr, from) {}
  AttachmentIndexResponse(AttachmentIndexResponse&& from) noexcept
    : AttachmentIndexResponse() {
    *this = ::std::move(from);
  }

  inline AttachmentIndexResponse& operator=(const AttachmentIndexResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AttachmentIndexResponse& operator=(AttachmentIndexResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AttachmentIndexResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AttachmentIndexResponse* internal_default_instance() {
    return reinterpret_cast<const AttachmentIndexResponse*>(
               &_AttachmentIndexResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(AttachmentIndexResponse& a, AttachmentIndexResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AttachmentIndexResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AttachmentIndexResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AttachmentIndexResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AttachmentIndexResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AttachmentIndexResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AttachmentIndexResponse& from) {
    AttachmentIndexResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AttachmentIndexResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "palm.balsam.v1.AttachmentIndexResponse";
  }
  protected:
  explicit AttachmentIndexResponse(::google::protobuf::Arena* arena);
  AttachmentIndexResponse(::google::protobuf::Arena* arena, const AttachmentIndexResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  using Item = AttachmentIndexResponse_Item;

  // accessors -------------------------------------------------------

  enum : int {
    kItemsFieldNumber = 1,
    kPaginationFieldNumber = 2,
  };
  // repeated .palm.balsam.v1.AttachmentIndexResponse.Item items = 1;
  int items_size() const;
  private:
  int _internal_items_size() const;

  public:
  void clear_items() ;
  ::palm::balsam::v1::AttachmentIndexResponse_Item* mutable_items(int index);
  ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::AttachmentIndexResponse_Item >*
      mutable_items();
  private:
  const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::AttachmentIndexResponse_Item>& _internal_items() const;
  ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::AttachmentIndexResponse_Item>* _internal_mutable_items();
  public:
  const ::palm::balsam::v1::AttachmentIndexResponse_Item& items(int index) const;
  ::palm::balsam::v1::AttachmentIndexResponse_Item* add_items();
  const ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::AttachmentIndexResponse_Item >&
      items() const;
  // .palm.balsam.v1.Pagination pagination = 2;
  bool has_pagination() const;
  void clear_pagination() ;
  const ::palm::balsam::v1::Pagination& pagination() const;
  PROTOBUF_NODISCARD ::palm::balsam::v1::Pagination* release_pagination();
  ::palm::balsam::v1::Pagination* mutable_pagination();
  void set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  void unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value);
  ::palm::balsam::v1::Pagination* unsafe_arena_release_pagination();

  private:
  const ::palm::balsam::v1::Pagination& _internal_pagination() const;
  ::palm::balsam::v1::Pagination* _internal_mutable_pagination();

  public:
  // @@protoc_insertion_point(class_scope:palm.balsam.v1.AttachmentIndexResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::palm::balsam::v1::AttachmentIndexResponse_Item > items_;
    ::palm::balsam::v1::Pagination* pagination_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_balsam_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// IdRequest

// uint64 id = 1;
inline void IdRequest::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t IdRequest::id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.IdRequest.id)
  return _internal_id();
}
inline void IdRequest::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.IdRequest.id)
}
inline ::uint64_t IdRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void IdRequest::_internal_set_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// ResourceRequest

// string type = 1;
inline void ResourceRequest::clear_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& ResourceRequest::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.ResourceRequest.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResourceRequest::set_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.ResourceRequest.type)
}
inline std::string* ResourceRequest::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.ResourceRequest.type)
  return _s;
}
inline const std::string& ResourceRequest::_internal_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.type_.Get();
}
inline void ResourceRequest::_internal_set_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.type_.Set(value, GetArena());
}
inline std::string* ResourceRequest::_internal_mutable_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* ResourceRequest::release_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.ResourceRequest.type)
  return _impl_.type_.Release();
}
inline void ResourceRequest::set_allocated_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.ResourceRequest.type)
}

// optional uint64 id = 2;
inline bool ResourceRequest::has_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void ResourceRequest::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t ResourceRequest::id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.ResourceRequest.id)
  return _internal_id();
}
inline void ResourceRequest::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.ResourceRequest.id)
}
inline ::uint64_t ResourceRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void ResourceRequest::_internal_set_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.id_ = value;
}

// -------------------------------------------------------------------

// UidRequest

// string uid = 1;
inline void UidRequest::clear_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uid_.ClearToEmpty();
}
inline const std::string& UidRequest::uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UidRequest.uid)
  return _internal_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UidRequest::set_uid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UidRequest.uid)
}
inline std::string* UidRequest::mutable_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uid();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UidRequest.uid)
  return _s;
}
inline const std::string& UidRequest::_internal_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uid_.Get();
}
inline void UidRequest::_internal_set_uid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uid_.Set(value, GetArena());
}
inline std::string* UidRequest::_internal_mutable_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.uid_.Mutable( GetArena());
}
inline std::string* UidRequest::release_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UidRequest.uid)
  return _impl_.uid_.Release();
}
inline void UidRequest::set_allocated_uid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uid_.IsDefault()) {
          _impl_.uid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UidRequest.uid)
}

// -------------------------------------------------------------------

// Pager

// int64 page = 1;
inline void Pager::clear_page() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.page_ = ::int64_t{0};
}
inline ::int64_t Pager::page() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.Pager.page)
  return _internal_page();
}
inline void Pager::set_page(::int64_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.Pager.page)
}
inline ::int64_t Pager::_internal_page() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.page_;
}
inline void Pager::_internal_set_page(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.page_ = value;
}

// int64 size = 2;
inline void Pager::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::int64_t{0};
}
inline ::int64_t Pager::size() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.Pager.size)
  return _internal_size();
}
inline void Pager::set_size(::int64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.Pager.size)
}
inline ::int64_t Pager::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void Pager::_internal_set_size(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// -------------------------------------------------------------------

// Pagination

// int64 page = 1;
inline void Pagination::clear_page() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.page_ = ::int64_t{0};
}
inline ::int64_t Pagination::page() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.Pagination.page)
  return _internal_page();
}
inline void Pagination::set_page(::int64_t value) {
  _internal_set_page(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.Pagination.page)
}
inline ::int64_t Pagination::_internal_page() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.page_;
}
inline void Pagination::_internal_set_page(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.page_ = value;
}

// int64 size = 2;
inline void Pagination::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::int64_t{0};
}
inline ::int64_t Pagination::size() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.Pagination.size)
  return _internal_size();
}
inline void Pagination::set_size(::int64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.Pagination.size)
}
inline ::int64_t Pagination::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void Pagination::_internal_set_size(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// int64 total = 3;
inline void Pagination::clear_total() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.total_ = ::int64_t{0};
}
inline ::int64_t Pagination::total() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.Pagination.total)
  return _internal_total();
}
inline void Pagination::set_total(::int64_t value) {
  _internal_set_total(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.Pagination.total)
}
inline ::int64_t Pagination::_internal_total() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.total_;
}
inline void Pagination::_internal_set_total(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.total_ = value;
}

// -------------------------------------------------------------------

// AesPlainMessage

// bytes payload = 1;
inline void AesPlainMessage::clear_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.payload_.ClearToEmpty();
}
inline const std::string& AesPlainMessage::payload() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AesPlainMessage.payload)
  return _internal_payload();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AesPlainMessage::set_payload(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.payload_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AesPlainMessage.payload)
}
inline std::string* AesPlainMessage::mutable_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AesPlainMessage.payload)
  return _s;
}
inline const std::string& AesPlainMessage::_internal_payload() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.payload_.Get();
}
inline void AesPlainMessage::_internal_set_payload(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.payload_.Set(value, GetArena());
}
inline std::string* AesPlainMessage::_internal_mutable_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.payload_.Mutable( GetArena());
}
inline std::string* AesPlainMessage::release_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.AesPlainMessage.payload)
  return _impl_.payload_.Release();
}
inline void AesPlainMessage::set_allocated_payload(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.payload_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payload_.IsDefault()) {
          _impl_.payload_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.AesPlainMessage.payload)
}

// -------------------------------------------------------------------

// AesCodeMessage

// bytes payload = 1;
inline void AesCodeMessage::clear_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.payload_.ClearToEmpty();
}
inline const std::string& AesCodeMessage::payload() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AesCodeMessage.payload)
  return _internal_payload();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AesCodeMessage::set_payload(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.payload_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AesCodeMessage.payload)
}
inline std::string* AesCodeMessage::mutable_payload() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_payload();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AesCodeMessage.payload)
  return _s;
}
inline const std::string& AesCodeMessage::_internal_payload() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.payload_.Get();
}
inline void AesCodeMessage::_internal_set_payload(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.payload_.Set(value, GetArena());
}
inline std::string* AesCodeMessage::_internal_mutable_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.payload_.Mutable( GetArena());
}
inline std::string* AesCodeMessage::release_payload() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.AesCodeMessage.payload)
  return _impl_.payload_.Release();
}
inline void AesCodeMessage::set_allocated_payload(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.payload_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.payload_.IsDefault()) {
          _impl_.payload_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.AesCodeMessage.payload)
}

// bytes salt = 2;
inline void AesCodeMessage::clear_salt() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.salt_.ClearToEmpty();
}
inline const std::string& AesCodeMessage::salt() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AesCodeMessage.salt)
  return _internal_salt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AesCodeMessage::set_salt(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.salt_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AesCodeMessage.salt)
}
inline std::string* AesCodeMessage::mutable_salt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_salt();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AesCodeMessage.salt)
  return _s;
}
inline const std::string& AesCodeMessage::_internal_salt() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.salt_.Get();
}
inline void AesCodeMessage::_internal_set_salt(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.salt_.Set(value, GetArena());
}
inline std::string* AesCodeMessage::_internal_mutable_salt() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.salt_.Mutable( GetArena());
}
inline std::string* AesCodeMessage::release_salt() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.AesCodeMessage.salt)
  return _impl_.salt_.Release();
}
inline void AesCodeMessage::set_allocated_salt(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.salt_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.salt_.IsDefault()) {
          _impl_.salt_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.AesCodeMessage.salt)
}

// -------------------------------------------------------------------

// JwtSignRequest

// optional string key_id = 1;
inline bool JwtSignRequest::has_key_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void JwtSignRequest::clear_key_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& JwtSignRequest::key_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.JwtSignRequest.key_id)
  return _internal_key_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JwtSignRequest::set_key_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.JwtSignRequest.key_id)
}
inline std::string* JwtSignRequest::mutable_key_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key_id();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.JwtSignRequest.key_id)
  return _s;
}
inline const std::string& JwtSignRequest::_internal_key_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_id_.Get();
}
inline void JwtSignRequest::_internal_set_key_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_id_.Set(value, GetArena());
}
inline std::string* JwtSignRequest::_internal_mutable_key_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.key_id_.Mutable( GetArena());
}
inline std::string* JwtSignRequest::release_key_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.JwtSignRequest.key_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.key_id_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.key_id_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void JwtSignRequest::set_allocated_key_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.key_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_id_.IsDefault()) {
          _impl_.key_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.JwtSignRequest.key_id)
}

// string issuer = 11;
inline void JwtSignRequest::clear_issuer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.issuer_.ClearToEmpty();
}
inline const std::string& JwtSignRequest::issuer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.JwtSignRequest.issuer)
  return _internal_issuer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JwtSignRequest::set_issuer(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.issuer_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.JwtSignRequest.issuer)
}
inline std::string* JwtSignRequest::mutable_issuer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_issuer();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.JwtSignRequest.issuer)
  return _s;
}
inline const std::string& JwtSignRequest::_internal_issuer() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.issuer_.Get();
}
inline void JwtSignRequest::_internal_set_issuer(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.issuer_.Set(value, GetArena());
}
inline std::string* JwtSignRequest::_internal_mutable_issuer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.issuer_.Mutable( GetArena());
}
inline std::string* JwtSignRequest::release_issuer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.JwtSignRequest.issuer)
  return _impl_.issuer_.Release();
}
inline void JwtSignRequest::set_allocated_issuer(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.issuer_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.issuer_.IsDefault()) {
          _impl_.issuer_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.JwtSignRequest.issuer)
}

// string subject = 12;
inline void JwtSignRequest::clear_subject() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subject_.ClearToEmpty();
}
inline const std::string& JwtSignRequest::subject() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.JwtSignRequest.subject)
  return _internal_subject();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JwtSignRequest::set_subject(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subject_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.JwtSignRequest.subject)
}
inline std::string* JwtSignRequest::mutable_subject() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subject();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.JwtSignRequest.subject)
  return _s;
}
inline const std::string& JwtSignRequest::_internal_subject() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subject_.Get();
}
inline void JwtSignRequest::_internal_set_subject(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subject_.Set(value, GetArena());
}
inline std::string* JwtSignRequest::_internal_mutable_subject() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.subject_.Mutable( GetArena());
}
inline std::string* JwtSignRequest::release_subject() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.JwtSignRequest.subject)
  return _impl_.subject_.Release();
}
inline void JwtSignRequest::set_allocated_subject(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subject_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subject_.IsDefault()) {
          _impl_.subject_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.JwtSignRequest.subject)
}

// repeated string audiences = 13;
inline int JwtSignRequest::_internal_audiences_size() const {
  return _internal_audiences().size();
}
inline int JwtSignRequest::audiences_size() const {
  return _internal_audiences_size();
}
inline void JwtSignRequest::clear_audiences() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.audiences_.Clear();
}
inline std::string* JwtSignRequest::add_audiences()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_audiences()->Add();
  // @@protoc_insertion_point(field_add_mutable:palm.balsam.v1.JwtSignRequest.audiences)
  return _s;
}
inline const std::string& JwtSignRequest::audiences(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.JwtSignRequest.audiences)
  return _internal_audiences().Get(index);
}
inline std::string* JwtSignRequest::mutable_audiences(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.JwtSignRequest.audiences)
  return _internal_mutable_audiences()->Mutable(index);
}
inline void JwtSignRequest::set_audiences(int index, const std::string& value) {
  _internal_mutable_audiences()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.JwtSignRequest.audiences)
}
inline void JwtSignRequest::set_audiences(int index, std::string&& value) {
  _internal_mutable_audiences()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:palm.balsam.v1.JwtSignRequest.audiences)
}
inline void JwtSignRequest::set_audiences(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_audiences()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:palm.balsam.v1.JwtSignRequest.audiences)
}
inline void JwtSignRequest::set_audiences(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_audiences()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:palm.balsam.v1.JwtSignRequest.audiences)
}
inline void JwtSignRequest::set_audiences(int index, absl::string_view value) {
  _internal_mutable_audiences()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:palm.balsam.v1.JwtSignRequest.audiences)
}
inline void JwtSignRequest::add_audiences(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_audiences()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:palm.balsam.v1.JwtSignRequest.audiences)
}
inline void JwtSignRequest::add_audiences(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_audiences()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:palm.balsam.v1.JwtSignRequest.audiences)
}
inline void JwtSignRequest::add_audiences(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_audiences()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:palm.balsam.v1.JwtSignRequest.audiences)
}
inline void JwtSignRequest::add_audiences(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_audiences()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:palm.balsam.v1.JwtSignRequest.audiences)
}
inline void JwtSignRequest::add_audiences(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_audiences()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:palm.balsam.v1.JwtSignRequest.audiences)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
JwtSignRequest::audiences() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.JwtSignRequest.audiences)
  return _internal_audiences();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
JwtSignRequest::mutable_audiences() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.JwtSignRequest.audiences)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_audiences();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
JwtSignRequest::_internal_audiences() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.audiences_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
JwtSignRequest::_internal_mutable_audiences() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.audiences_;
}

// .google.protobuf.Timestamp not_before = 18;
inline bool JwtSignRequest::has_not_before() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.not_before_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& JwtSignRequest::_internal_not_before() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.not_before_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& JwtSignRequest::not_before() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.JwtSignRequest.not_before)
  return _internal_not_before();
}
inline void JwtSignRequest::unsafe_arena_set_allocated_not_before(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.not_before_);
  }
  _impl_.not_before_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.JwtSignRequest.not_before)
}
inline ::google::protobuf::Timestamp* JwtSignRequest::release_not_before() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.not_before_;
  _impl_.not_before_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* JwtSignRequest::unsafe_arena_release_not_before() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.JwtSignRequest.not_before)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.not_before_;
  _impl_.not_before_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* JwtSignRequest::_internal_mutable_not_before() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.not_before_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.not_before_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.not_before_;
}
inline ::google::protobuf::Timestamp* JwtSignRequest::mutable_not_before() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_not_before();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.JwtSignRequest.not_before)
  return _msg;
}
inline void JwtSignRequest::set_allocated_not_before(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.not_before_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.not_before_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.JwtSignRequest.not_before)
}

// .google.protobuf.Timestamp expires_at = 19;
inline bool JwtSignRequest::has_expires_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.expires_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& JwtSignRequest::_internal_expires_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.expires_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& JwtSignRequest::expires_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.JwtSignRequest.expires_at)
  return _internal_expires_at();
}
inline void JwtSignRequest::unsafe_arena_set_allocated_expires_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.expires_at_);
  }
  _impl_.expires_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.JwtSignRequest.expires_at)
}
inline ::google::protobuf::Timestamp* JwtSignRequest::release_expires_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* released = _impl_.expires_at_;
  _impl_.expires_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* JwtSignRequest::unsafe_arena_release_expires_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.JwtSignRequest.expires_at)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* temp = _impl_.expires_at_;
  _impl_.expires_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* JwtSignRequest::_internal_mutable_expires_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.expires_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.expires_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.expires_at_;
}
inline ::google::protobuf::Timestamp* JwtSignRequest::mutable_expires_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_expires_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.JwtSignRequest.expires_at)
  return _msg;
}
inline void JwtSignRequest::set_allocated_expires_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.expires_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.expires_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.JwtSignRequest.expires_at)
}

// optional string extra = 99;
inline bool JwtSignRequest::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void JwtSignRequest::clear_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.extra_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& JwtSignRequest::extra() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.JwtSignRequest.extra)
  return _internal_extra();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JwtSignRequest::set_extra(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.extra_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.JwtSignRequest.extra)
}
inline std::string* JwtSignRequest::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.JwtSignRequest.extra)
  return _s;
}
inline const std::string& JwtSignRequest::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.extra_.Get();
}
inline void JwtSignRequest::_internal_set_extra(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.extra_.Set(value, GetArena());
}
inline std::string* JwtSignRequest::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.extra_.Mutable( GetArena());
}
inline std::string* JwtSignRequest::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.JwtSignRequest.extra)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.extra_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.extra_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void JwtSignRequest::set_allocated_extra(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.extra_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.extra_.IsDefault()) {
          _impl_.extra_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.JwtSignRequest.extra)
}

// -------------------------------------------------------------------

// JwtSignResponse

// string token = 1;
inline void JwtSignResponse::clear_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& JwtSignResponse::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.JwtSignResponse.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JwtSignResponse::set_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.JwtSignResponse.token)
}
inline std::string* JwtSignResponse::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.JwtSignResponse.token)
  return _s;
}
inline const std::string& JwtSignResponse::_internal_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.token_.Get();
}
inline void JwtSignResponse::_internal_set_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(value, GetArena());
}
inline std::string* JwtSignResponse::_internal_mutable_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* JwtSignResponse::release_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.JwtSignResponse.token)
  return _impl_.token_.Release();
}
inline void JwtSignResponse::set_allocated_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.JwtSignResponse.token)
}

// -------------------------------------------------------------------

// JwtVerifyRequest

// string token = 1;
inline void JwtVerifyRequest::clear_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& JwtVerifyRequest::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.JwtVerifyRequest.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JwtVerifyRequest::set_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.JwtVerifyRequest.token)
}
inline std::string* JwtVerifyRequest::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.JwtVerifyRequest.token)
  return _s;
}
inline const std::string& JwtVerifyRequest::_internal_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.token_.Get();
}
inline void JwtVerifyRequest::_internal_set_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(value, GetArena());
}
inline std::string* JwtVerifyRequest::_internal_mutable_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* JwtVerifyRequest::release_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.JwtVerifyRequest.token)
  return _impl_.token_.Release();
}
inline void JwtVerifyRequest::set_allocated_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.JwtVerifyRequest.token)
}

// string issuer = 2;
inline void JwtVerifyRequest::clear_issuer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.issuer_.ClearToEmpty();
}
inline const std::string& JwtVerifyRequest::issuer() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.JwtVerifyRequest.issuer)
  return _internal_issuer();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JwtVerifyRequest::set_issuer(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.issuer_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.JwtVerifyRequest.issuer)
}
inline std::string* JwtVerifyRequest::mutable_issuer() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_issuer();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.JwtVerifyRequest.issuer)
  return _s;
}
inline const std::string& JwtVerifyRequest::_internal_issuer() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.issuer_.Get();
}
inline void JwtVerifyRequest::_internal_set_issuer(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.issuer_.Set(value, GetArena());
}
inline std::string* JwtVerifyRequest::_internal_mutable_issuer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.issuer_.Mutable( GetArena());
}
inline std::string* JwtVerifyRequest::release_issuer() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.JwtVerifyRequest.issuer)
  return _impl_.issuer_.Release();
}
inline void JwtVerifyRequest::set_allocated_issuer(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.issuer_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.issuer_.IsDefault()) {
          _impl_.issuer_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.JwtVerifyRequest.issuer)
}

// string audience = 3;
inline void JwtVerifyRequest::clear_audience() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.audience_.ClearToEmpty();
}
inline const std::string& JwtVerifyRequest::audience() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.JwtVerifyRequest.audience)
  return _internal_audience();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JwtVerifyRequest::set_audience(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.audience_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.JwtVerifyRequest.audience)
}
inline std::string* JwtVerifyRequest::mutable_audience() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_audience();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.JwtVerifyRequest.audience)
  return _s;
}
inline const std::string& JwtVerifyRequest::_internal_audience() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.audience_.Get();
}
inline void JwtVerifyRequest::_internal_set_audience(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.audience_.Set(value, GetArena());
}
inline std::string* JwtVerifyRequest::_internal_mutable_audience() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.audience_.Mutable( GetArena());
}
inline std::string* JwtVerifyRequest::release_audience() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.JwtVerifyRequest.audience)
  return _impl_.audience_.Release();
}
inline void JwtVerifyRequest::set_allocated_audience(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.audience_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.audience_.IsDefault()) {
          _impl_.audience_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.JwtVerifyRequest.audience)
}

// -------------------------------------------------------------------

// JwtVerifyResponse

// string jwt_id = 1;
inline void JwtVerifyResponse::clear_jwt_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.jwt_id_.ClearToEmpty();
}
inline const std::string& JwtVerifyResponse::jwt_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.JwtVerifyResponse.jwt_id)
  return _internal_jwt_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JwtVerifyResponse::set_jwt_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.jwt_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.JwtVerifyResponse.jwt_id)
}
inline std::string* JwtVerifyResponse::mutable_jwt_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_jwt_id();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.JwtVerifyResponse.jwt_id)
  return _s;
}
inline const std::string& JwtVerifyResponse::_internal_jwt_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.jwt_id_.Get();
}
inline void JwtVerifyResponse::_internal_set_jwt_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.jwt_id_.Set(value, GetArena());
}
inline std::string* JwtVerifyResponse::_internal_mutable_jwt_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.jwt_id_.Mutable( GetArena());
}
inline std::string* JwtVerifyResponse::release_jwt_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.JwtVerifyResponse.jwt_id)
  return _impl_.jwt_id_.Release();
}
inline void JwtVerifyResponse::set_allocated_jwt_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.jwt_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.jwt_id_.IsDefault()) {
          _impl_.jwt_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.JwtVerifyResponse.jwt_id)
}

// optional string key_id = 2;
inline bool JwtVerifyResponse::has_key_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void JwtVerifyResponse::clear_key_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& JwtVerifyResponse::key_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.JwtVerifyResponse.key_id)
  return _internal_key_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JwtVerifyResponse::set_key_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.JwtVerifyResponse.key_id)
}
inline std::string* JwtVerifyResponse::mutable_key_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key_id();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.JwtVerifyResponse.key_id)
  return _s;
}
inline const std::string& JwtVerifyResponse::_internal_key_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_id_.Get();
}
inline void JwtVerifyResponse::_internal_set_key_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.key_id_.Set(value, GetArena());
}
inline std::string* JwtVerifyResponse::_internal_mutable_key_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.key_id_.Mutable( GetArena());
}
inline std::string* JwtVerifyResponse::release_key_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.JwtVerifyResponse.key_id)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.key_id_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.key_id_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void JwtVerifyResponse::set_allocated_key_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.key_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_id_.IsDefault()) {
          _impl_.key_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.JwtVerifyResponse.key_id)
}

// string subject = 11;
inline void JwtVerifyResponse::clear_subject() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subject_.ClearToEmpty();
}
inline const std::string& JwtVerifyResponse::subject() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.JwtVerifyResponse.subject)
  return _internal_subject();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JwtVerifyResponse::set_subject(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subject_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.JwtVerifyResponse.subject)
}
inline std::string* JwtVerifyResponse::mutable_subject() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subject();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.JwtVerifyResponse.subject)
  return _s;
}
inline const std::string& JwtVerifyResponse::_internal_subject() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subject_.Get();
}
inline void JwtVerifyResponse::_internal_set_subject(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subject_.Set(value, GetArena());
}
inline std::string* JwtVerifyResponse::_internal_mutable_subject() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.subject_.Mutable( GetArena());
}
inline std::string* JwtVerifyResponse::release_subject() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.JwtVerifyResponse.subject)
  return _impl_.subject_.Release();
}
inline void JwtVerifyResponse::set_allocated_subject(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subject_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subject_.IsDefault()) {
          _impl_.subject_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.JwtVerifyResponse.subject)
}

// optional string extra = 19;
inline bool JwtVerifyResponse::has_extra() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void JwtVerifyResponse::clear_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.extra_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& JwtVerifyResponse::extra() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.JwtVerifyResponse.extra)
  return _internal_extra();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void JwtVerifyResponse::set_extra(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.extra_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.JwtVerifyResponse.extra)
}
inline std::string* JwtVerifyResponse::mutable_extra() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_extra();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.JwtVerifyResponse.extra)
  return _s;
}
inline const std::string& JwtVerifyResponse::_internal_extra() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.extra_.Get();
}
inline void JwtVerifyResponse::_internal_set_extra(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.extra_.Set(value, GetArena());
}
inline std::string* JwtVerifyResponse::_internal_mutable_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.extra_.Mutable( GetArena());
}
inline std::string* JwtVerifyResponse::release_extra() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.JwtVerifyResponse.extra)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.extra_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.extra_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void JwtVerifyResponse::set_allocated_extra(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.extra_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.extra_.IsDefault()) {
          _impl_.extra_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.JwtVerifyResponse.extra)
}

// -------------------------------------------------------------------

// HMacSignRequest

// bytes plain = 1;
inline void HMacSignRequest::clear_plain() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.plain_.ClearToEmpty();
}
inline const std::string& HMacSignRequest::plain() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.HMacSignRequest.plain)
  return _internal_plain();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HMacSignRequest::set_plain(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plain_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.HMacSignRequest.plain)
}
inline std::string* HMacSignRequest::mutable_plain() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_plain();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.HMacSignRequest.plain)
  return _s;
}
inline const std::string& HMacSignRequest::_internal_plain() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.plain_.Get();
}
inline void HMacSignRequest::_internal_set_plain(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plain_.Set(value, GetArena());
}
inline std::string* HMacSignRequest::_internal_mutable_plain() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.plain_.Mutable( GetArena());
}
inline std::string* HMacSignRequest::release_plain() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.HMacSignRequest.plain)
  return _impl_.plain_.Release();
}
inline void HMacSignRequest::set_allocated_plain(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.plain_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.plain_.IsDefault()) {
          _impl_.plain_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.HMacSignRequest.plain)
}

// -------------------------------------------------------------------

// HMacSignResponse

// bytes code = 1;
inline void HMacSignResponse::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& HMacSignResponse::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.HMacSignResponse.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HMacSignResponse::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.HMacSignResponse.code)
}
inline std::string* HMacSignResponse::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.HMacSignResponse.code)
  return _s;
}
inline const std::string& HMacSignResponse::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void HMacSignResponse::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* HMacSignResponse::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* HMacSignResponse::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.HMacSignResponse.code)
  return _impl_.code_.Release();
}
inline void HMacSignResponse::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.HMacSignResponse.code)
}

// bytes salt = 2;
inline void HMacSignResponse::clear_salt() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.salt_.ClearToEmpty();
}
inline const std::string& HMacSignResponse::salt() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.HMacSignResponse.salt)
  return _internal_salt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HMacSignResponse::set_salt(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.salt_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.HMacSignResponse.salt)
}
inline std::string* HMacSignResponse::mutable_salt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_salt();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.HMacSignResponse.salt)
  return _s;
}
inline const std::string& HMacSignResponse::_internal_salt() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.salt_.Get();
}
inline void HMacSignResponse::_internal_set_salt(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.salt_.Set(value, GetArena());
}
inline std::string* HMacSignResponse::_internal_mutable_salt() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.salt_.Mutable( GetArena());
}
inline std::string* HMacSignResponse::release_salt() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.HMacSignResponse.salt)
  return _impl_.salt_.Release();
}
inline void HMacSignResponse::set_allocated_salt(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.salt_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.salt_.IsDefault()) {
          _impl_.salt_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.HMacSignResponse.salt)
}

// -------------------------------------------------------------------

// HMacVerifyRequest

// bytes plain = 1;
inline void HMacVerifyRequest::clear_plain() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.plain_.ClearToEmpty();
}
inline const std::string& HMacVerifyRequest::plain() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.HMacVerifyRequest.plain)
  return _internal_plain();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HMacVerifyRequest::set_plain(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plain_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.HMacVerifyRequest.plain)
}
inline std::string* HMacVerifyRequest::mutable_plain() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_plain();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.HMacVerifyRequest.plain)
  return _s;
}
inline const std::string& HMacVerifyRequest::_internal_plain() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.plain_.Get();
}
inline void HMacVerifyRequest::_internal_set_plain(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plain_.Set(value, GetArena());
}
inline std::string* HMacVerifyRequest::_internal_mutable_plain() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.plain_.Mutable( GetArena());
}
inline std::string* HMacVerifyRequest::release_plain() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.HMacVerifyRequest.plain)
  return _impl_.plain_.Release();
}
inline void HMacVerifyRequest::set_allocated_plain(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.plain_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.plain_.IsDefault()) {
          _impl_.plain_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.HMacVerifyRequest.plain)
}

// bytes code = 2;
inline void HMacVerifyRequest::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& HMacVerifyRequest::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.HMacVerifyRequest.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HMacVerifyRequest::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.HMacVerifyRequest.code)
}
inline std::string* HMacVerifyRequest::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.HMacVerifyRequest.code)
  return _s;
}
inline const std::string& HMacVerifyRequest::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void HMacVerifyRequest::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* HMacVerifyRequest::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* HMacVerifyRequest::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.HMacVerifyRequest.code)
  return _impl_.code_.Release();
}
inline void HMacVerifyRequest::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.HMacVerifyRequest.code)
}

// bytes salt = 3;
inline void HMacVerifyRequest::clear_salt() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.salt_.ClearToEmpty();
}
inline const std::string& HMacVerifyRequest::salt() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.HMacVerifyRequest.salt)
  return _internal_salt();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HMacVerifyRequest::set_salt(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.salt_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.HMacVerifyRequest.salt)
}
inline std::string* HMacVerifyRequest::mutable_salt() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_salt();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.HMacVerifyRequest.salt)
  return _s;
}
inline const std::string& HMacVerifyRequest::_internal_salt() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.salt_.Get();
}
inline void HMacVerifyRequest::_internal_set_salt(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.salt_.Set(value, GetArena());
}
inline std::string* HMacVerifyRequest::_internal_mutable_salt() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.salt_.Mutable( GetArena());
}
inline std::string* HMacVerifyRequest::release_salt() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.HMacVerifyRequest.salt)
  return _impl_.salt_.Release();
}
inline void HMacVerifyRequest::set_allocated_salt(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.salt_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.salt_.IsDefault()) {
          _impl_.salt_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.HMacVerifyRequest.salt)
}

// -------------------------------------------------------------------

// UserSignOutRequest

// uint64 id = 1;
inline void UserSignOutRequest::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t UserSignOutRequest::id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignOutRequest.id)
  return _internal_id();
}
inline void UserSignOutRequest::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignOutRequest.id)
}
inline ::uint64_t UserSignOutRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void UserSignOutRequest::_internal_set_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string ip = 2;
inline void UserSignOutRequest::clear_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_.ClearToEmpty();
}
inline const std::string& UserSignOutRequest::ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignOutRequest.ip)
  return _internal_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignOutRequest::set_ip(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignOutRequest.ip)
}
inline std::string* UserSignOutRequest::mutable_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ip();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignOutRequest.ip)
  return _s;
}
inline const std::string& UserSignOutRequest::_internal_ip() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ip_.Get();
}
inline void UserSignOutRequest::_internal_set_ip(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_.Set(value, GetArena());
}
inline std::string* UserSignOutRequest::_internal_mutable_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ip_.Mutable( GetArena());
}
inline std::string* UserSignOutRequest::release_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignOutRequest.ip)
  return _impl_.ip_.Release();
}
inline void UserSignOutRequest::set_allocated_ip(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ip_.IsDefault()) {
          _impl_.ip_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignOutRequest.ip)
}

// -------------------------------------------------------------------

// UserUpdateProfileRequest

// uint64 id = 1;
inline void UserUpdateProfileRequest::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t UserUpdateProfileRequest::id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserUpdateProfileRequest.id)
  return _internal_id();
}
inline void UserUpdateProfileRequest::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserUpdateProfileRequest.id)
}
inline ::uint64_t UserUpdateProfileRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void UserUpdateProfileRequest::_internal_set_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string lang = 2;
inline void UserUpdateProfileRequest::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& UserUpdateProfileRequest::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserUpdateProfileRequest.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserUpdateProfileRequest::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserUpdateProfileRequest.lang)
}
inline std::string* UserUpdateProfileRequest::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserUpdateProfileRequest.lang)
  return _s;
}
inline const std::string& UserUpdateProfileRequest::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void UserUpdateProfileRequest::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* UserUpdateProfileRequest::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* UserUpdateProfileRequest::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserUpdateProfileRequest.lang)
  return _impl_.lang_.Release();
}
inline void UserUpdateProfileRequest::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserUpdateProfileRequest.lang)
}

// string timezone = 3;
inline void UserUpdateProfileRequest::clear_timezone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.timezone_.ClearToEmpty();
}
inline const std::string& UserUpdateProfileRequest::timezone() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserUpdateProfileRequest.timezone)
  return _internal_timezone();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserUpdateProfileRequest::set_timezone(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timezone_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserUpdateProfileRequest.timezone)
}
inline std::string* UserUpdateProfileRequest::mutable_timezone() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timezone();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserUpdateProfileRequest.timezone)
  return _s;
}
inline const std::string& UserUpdateProfileRequest::_internal_timezone() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timezone_.Get();
}
inline void UserUpdateProfileRequest::_internal_set_timezone(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timezone_.Set(value, GetArena());
}
inline std::string* UserUpdateProfileRequest::_internal_mutable_timezone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.timezone_.Mutable( GetArena());
}
inline std::string* UserUpdateProfileRequest::release_timezone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserUpdateProfileRequest.timezone)
  return _impl_.timezone_.Release();
}
inline void UserUpdateProfileRequest::set_allocated_timezone(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.timezone_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.timezone_.IsDefault()) {
          _impl_.timezone_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserUpdateProfileRequest.timezone)
}

// -------------------------------------------------------------------

// UserIndexResponse_Item

// uint64 id = 1;
inline void UserIndexResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t UserIndexResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserIndexResponse.Item.id)
  return _internal_id();
}
inline void UserIndexResponse_Item::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserIndexResponse.Item.id)
}
inline ::uint64_t UserIndexResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void UserIndexResponse_Item::_internal_set_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string uid = 2;
inline void UserIndexResponse_Item::clear_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uid_.ClearToEmpty();
}
inline const std::string& UserIndexResponse_Item::uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserIndexResponse.Item.uid)
  return _internal_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserIndexResponse_Item::set_uid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserIndexResponse.Item.uid)
}
inline std::string* UserIndexResponse_Item::mutable_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uid();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserIndexResponse.Item.uid)
  return _s;
}
inline const std::string& UserIndexResponse_Item::_internal_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uid_.Get();
}
inline void UserIndexResponse_Item::_internal_set_uid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uid_.Set(value, GetArena());
}
inline std::string* UserIndexResponse_Item::_internal_mutable_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.uid_.Mutable( GetArena());
}
inline std::string* UserIndexResponse_Item::release_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserIndexResponse.Item.uid)
  return _impl_.uid_.Release();
}
inline void UserIndexResponse_Item::set_allocated_uid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uid_.IsDefault()) {
          _impl_.uid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserIndexResponse.Item.uid)
}

// string lang = 3;
inline void UserIndexResponse_Item::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& UserIndexResponse_Item::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserIndexResponse.Item.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserIndexResponse_Item::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserIndexResponse.Item.lang)
}
inline std::string* UserIndexResponse_Item::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserIndexResponse.Item.lang)
  return _s;
}
inline const std::string& UserIndexResponse_Item::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void UserIndexResponse_Item::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* UserIndexResponse_Item::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* UserIndexResponse_Item::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserIndexResponse.Item.lang)
  return _impl_.lang_.Release();
}
inline void UserIndexResponse_Item::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserIndexResponse.Item.lang)
}

// string timezone = 4;
inline void UserIndexResponse_Item::clear_timezone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.timezone_.ClearToEmpty();
}
inline const std::string& UserIndexResponse_Item::timezone() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserIndexResponse.Item.timezone)
  return _internal_timezone();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserIndexResponse_Item::set_timezone(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timezone_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserIndexResponse.Item.timezone)
}
inline std::string* UserIndexResponse_Item::mutable_timezone() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timezone();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserIndexResponse.Item.timezone)
  return _s;
}
inline const std::string& UserIndexResponse_Item::_internal_timezone() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timezone_.Get();
}
inline void UserIndexResponse_Item::_internal_set_timezone(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timezone_.Set(value, GetArena());
}
inline std::string* UserIndexResponse_Item::_internal_mutable_timezone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.timezone_.Mutable( GetArena());
}
inline std::string* UserIndexResponse_Item::release_timezone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserIndexResponse.Item.timezone)
  return _impl_.timezone_.Release();
}
inline void UserIndexResponse_Item::set_allocated_timezone(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.timezone_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.timezone_.IsDefault()) {
          _impl_.timezone_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserIndexResponse.Item.timezone)
}

// uint32 sign_in_count = 5;
inline void UserIndexResponse_Item::clear_sign_in_count() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sign_in_count_ = 0u;
}
inline ::uint32_t UserIndexResponse_Item::sign_in_count() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserIndexResponse.Item.sign_in_count)
  return _internal_sign_in_count();
}
inline void UserIndexResponse_Item::set_sign_in_count(::uint32_t value) {
  _internal_set_sign_in_count(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserIndexResponse.Item.sign_in_count)
}
inline ::uint32_t UserIndexResponse_Item::_internal_sign_in_count() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.sign_in_count_;
}
inline void UserIndexResponse_Item::_internal_set_sign_in_count(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sign_in_count_ = value;
}

// optional .google.protobuf.Timestamp current_sign_in_at = 6;
inline bool UserIndexResponse_Item::has_current_sign_in_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.current_sign_in_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& UserIndexResponse_Item::_internal_current_sign_in_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.current_sign_in_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& UserIndexResponse_Item::current_sign_in_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserIndexResponse.Item.current_sign_in_at)
  return _internal_current_sign_in_at();
}
inline void UserIndexResponse_Item::unsafe_arena_set_allocated_current_sign_in_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.current_sign_in_at_);
  }
  _impl_.current_sign_in_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.UserIndexResponse.Item.current_sign_in_at)
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::release_current_sign_in_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.current_sign_in_at_;
  _impl_.current_sign_in_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::unsafe_arena_release_current_sign_in_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserIndexResponse.Item.current_sign_in_at)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.current_sign_in_at_;
  _impl_.current_sign_in_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::_internal_mutable_current_sign_in_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.current_sign_in_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.current_sign_in_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.current_sign_in_at_;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::mutable_current_sign_in_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_current_sign_in_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserIndexResponse.Item.current_sign_in_at)
  return _msg;
}
inline void UserIndexResponse_Item::set_allocated_current_sign_in_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.current_sign_in_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.current_sign_in_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserIndexResponse.Item.current_sign_in_at)
}

// optional string current_sign_in_ip = 7;
inline bool UserIndexResponse_Item::has_current_sign_in_ip() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void UserIndexResponse_Item::clear_current_sign_in_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.current_sign_in_ip_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UserIndexResponse_Item::current_sign_in_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserIndexResponse.Item.current_sign_in_ip)
  return _internal_current_sign_in_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserIndexResponse_Item::set_current_sign_in_ip(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.current_sign_in_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserIndexResponse.Item.current_sign_in_ip)
}
inline std::string* UserIndexResponse_Item::mutable_current_sign_in_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_current_sign_in_ip();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserIndexResponse.Item.current_sign_in_ip)
  return _s;
}
inline const std::string& UserIndexResponse_Item::_internal_current_sign_in_ip() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.current_sign_in_ip_.Get();
}
inline void UserIndexResponse_Item::_internal_set_current_sign_in_ip(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.current_sign_in_ip_.Set(value, GetArena());
}
inline std::string* UserIndexResponse_Item::_internal_mutable_current_sign_in_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.current_sign_in_ip_.Mutable( GetArena());
}
inline std::string* UserIndexResponse_Item::release_current_sign_in_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserIndexResponse.Item.current_sign_in_ip)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.current_sign_in_ip_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.current_sign_in_ip_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void UserIndexResponse_Item::set_allocated_current_sign_in_ip(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.current_sign_in_ip_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.current_sign_in_ip_.IsDefault()) {
          _impl_.current_sign_in_ip_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserIndexResponse.Item.current_sign_in_ip)
}

// optional .google.protobuf.Timestamp last_sign_in_at = 8;
inline bool UserIndexResponse_Item::has_last_sign_in_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.last_sign_in_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& UserIndexResponse_Item::_internal_last_sign_in_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.last_sign_in_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& UserIndexResponse_Item::last_sign_in_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserIndexResponse.Item.last_sign_in_at)
  return _internal_last_sign_in_at();
}
inline void UserIndexResponse_Item::unsafe_arena_set_allocated_last_sign_in_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_sign_in_at_);
  }
  _impl_.last_sign_in_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.UserIndexResponse.Item.last_sign_in_at)
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::release_last_sign_in_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* released = _impl_.last_sign_in_at_;
  _impl_.last_sign_in_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::unsafe_arena_release_last_sign_in_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserIndexResponse.Item.last_sign_in_at)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* temp = _impl_.last_sign_in_at_;
  _impl_.last_sign_in_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::_internal_mutable_last_sign_in_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.last_sign_in_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.last_sign_in_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.last_sign_in_at_;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::mutable_last_sign_in_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_last_sign_in_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserIndexResponse.Item.last_sign_in_at)
  return _msg;
}
inline void UserIndexResponse_Item::set_allocated_last_sign_in_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.last_sign_in_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.last_sign_in_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserIndexResponse.Item.last_sign_in_at)
}

// optional string last_sign_in_ip = 9;
inline bool UserIndexResponse_Item::has_last_sign_in_ip() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void UserIndexResponse_Item::clear_last_sign_in_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.last_sign_in_ip_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& UserIndexResponse_Item::last_sign_in_ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserIndexResponse.Item.last_sign_in_ip)
  return _internal_last_sign_in_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserIndexResponse_Item::set_last_sign_in_ip(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.last_sign_in_ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserIndexResponse.Item.last_sign_in_ip)
}
inline std::string* UserIndexResponse_Item::mutable_last_sign_in_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_last_sign_in_ip();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserIndexResponse.Item.last_sign_in_ip)
  return _s;
}
inline const std::string& UserIndexResponse_Item::_internal_last_sign_in_ip() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.last_sign_in_ip_.Get();
}
inline void UserIndexResponse_Item::_internal_set_last_sign_in_ip(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.last_sign_in_ip_.Set(value, GetArena());
}
inline std::string* UserIndexResponse_Item::_internal_mutable_last_sign_in_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.last_sign_in_ip_.Mutable( GetArena());
}
inline std::string* UserIndexResponse_Item::release_last_sign_in_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserIndexResponse.Item.last_sign_in_ip)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.last_sign_in_ip_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.last_sign_in_ip_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void UserIndexResponse_Item::set_allocated_last_sign_in_ip(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.last_sign_in_ip_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.last_sign_in_ip_.IsDefault()) {
          _impl_.last_sign_in_ip_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserIndexResponse.Item.last_sign_in_ip)
}

// optional .google.protobuf.Timestamp lockeda_at = 10;
inline bool UserIndexResponse_Item::has_lockeda_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.lockeda_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& UserIndexResponse_Item::_internal_lockeda_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.lockeda_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& UserIndexResponse_Item::lockeda_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserIndexResponse.Item.lockeda_at)
  return _internal_lockeda_at();
}
inline void UserIndexResponse_Item::unsafe_arena_set_allocated_lockeda_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lockeda_at_);
  }
  _impl_.lockeda_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.UserIndexResponse.Item.lockeda_at)
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::release_lockeda_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::Timestamp* released = _impl_.lockeda_at_;
  _impl_.lockeda_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::unsafe_arena_release_lockeda_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserIndexResponse.Item.lockeda_at)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::Timestamp* temp = _impl_.lockeda_at_;
  _impl_.lockeda_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::_internal_mutable_lockeda_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.lockeda_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.lockeda_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.lockeda_at_;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::mutable_lockeda_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_lockeda_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserIndexResponse.Item.lockeda_at)
  return _msg;
}
inline void UserIndexResponse_Item::set_allocated_lockeda_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.lockeda_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.lockeda_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserIndexResponse.Item.lockeda_at)
}

// optional .google.protobuf.Timestamp deleted_at = 11;
inline bool UserIndexResponse_Item::has_deleted_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.deleted_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& UserIndexResponse_Item::_internal_deleted_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.deleted_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& UserIndexResponse_Item::deleted_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserIndexResponse.Item.deleted_at)
  return _internal_deleted_at();
}
inline void UserIndexResponse_Item::unsafe_arena_set_allocated_deleted_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deleted_at_);
  }
  _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.UserIndexResponse.Item.deleted_at)
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::release_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::google::protobuf::Timestamp* released = _impl_.deleted_at_;
  _impl_.deleted_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::unsafe_arena_release_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserIndexResponse.Item.deleted_at)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::google::protobuf::Timestamp* temp = _impl_.deleted_at_;
  _impl_.deleted_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::_internal_mutable_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000020u;
  if (_impl_.deleted_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.deleted_at_;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::mutable_deleted_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_deleted_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserIndexResponse.Item.deleted_at)
  return _msg;
}
inline void UserIndexResponse_Item::set_allocated_deleted_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deleted_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserIndexResponse.Item.deleted_at)
}

// .google.protobuf.Timestamp updated_at = 12;
inline bool UserIndexResponse_Item::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& UserIndexResponse_Item::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& UserIndexResponse_Item::updated_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserIndexResponse.Item.updated_at)
  return _internal_updated_at();
}
inline void UserIndexResponse_Item::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.UserIndexResponse.Item.updated_at)
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserIndexResponse.Item.updated_at)

  _impl_._has_bits_[0] &= ~0x00000040u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000040u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* UserIndexResponse_Item::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserIndexResponse.Item.updated_at)
  return _msg;
}
inline void UserIndexResponse_Item::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserIndexResponse.Item.updated_at)
}

// -------------------------------------------------------------------

// UserIndexResponse

// repeated .palm.balsam.v1.UserIndexResponse.Item items = 1;
inline int UserIndexResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int UserIndexResponse::items_size() const {
  return _internal_items_size();
}
inline void UserIndexResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::balsam::v1::UserIndexResponse_Item* UserIndexResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserIndexResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserIndexResponse_Item>* UserIndexResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.UserIndexResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::balsam::v1::UserIndexResponse_Item& UserIndexResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserIndexResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::balsam::v1::UserIndexResponse_Item* UserIndexResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::balsam::v1::UserIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.balsam.v1.UserIndexResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserIndexResponse_Item>& UserIndexResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.UserIndexResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserIndexResponse_Item>&
UserIndexResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserIndexResponse_Item>*
UserIndexResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// .palm.balsam.v1.Pagination pagination = 9;
inline bool UserIndexResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline void UserIndexResponse::clear_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::balsam::v1::Pagination& UserIndexResponse::_internal_pagination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::Pagination* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::Pagination&>(::palm::balsam::v1::_Pagination_default_instance_);
}
inline const ::palm::balsam::v1::Pagination& UserIndexResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserIndexResponse.pagination)
  return _internal_pagination();
}
inline void UserIndexResponse::unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.UserIndexResponse.pagination)
}
inline ::palm::balsam::v1::Pagination* UserIndexResponse::release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::Pagination* UserIndexResponse::unsafe_arena_release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserIndexResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::Pagination* UserIndexResponse::_internal_mutable_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::Pagination>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(p);
  }
  return _impl_.pagination_;
}
inline ::palm::balsam::v1::Pagination* UserIndexResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::Pagination* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserIndexResponse.pagination)
  return _msg;
}
inline void UserIndexResponse::set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::Pagination*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::Pagination*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserIndexResponse.pagination)
}

// -------------------------------------------------------------------

// UserLogsRequest

// optional uint64 user = 1;
inline bool UserLogsRequest::has_user() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void UserLogsRequest::clear_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t UserLogsRequest::user() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserLogsRequest.user)
  return _internal_user();
}
inline void UserLogsRequest::set_user(::uint64_t value) {
  _internal_set_user(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserLogsRequest.user)
}
inline ::uint64_t UserLogsRequest::_internal_user() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_;
}
inline void UserLogsRequest::_internal_set_user(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.user_ = value;
}

// .palm.balsam.v1.Pager pager = 9;
inline bool UserLogsRequest::has_pager() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pager_ != nullptr);
  return value;
}
inline void UserLogsRequest::clear_pager() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pager_ != nullptr) _impl_.pager_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::balsam::v1::Pager& UserLogsRequest::_internal_pager() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::Pager* p = _impl_.pager_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::Pager&>(::palm::balsam::v1::_Pager_default_instance_);
}
inline const ::palm::balsam::v1::Pager& UserLogsRequest::pager() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserLogsRequest.pager)
  return _internal_pager();
}
inline void UserLogsRequest::unsafe_arena_set_allocated_pager(::palm::balsam::v1::Pager* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pager_);
  }
  _impl_.pager_ = reinterpret_cast<::palm::balsam::v1::Pager*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.UserLogsRequest.pager)
}
inline ::palm::balsam::v1::Pager* UserLogsRequest::release_pager() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pager* released = _impl_.pager_;
  _impl_.pager_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::Pager* UserLogsRequest::unsafe_arena_release_pager() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserLogsRequest.pager)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pager* temp = _impl_.pager_;
  _impl_.pager_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::Pager* UserLogsRequest::_internal_mutable_pager() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pager_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::Pager>(GetArena());
    _impl_.pager_ = reinterpret_cast<::palm::balsam::v1::Pager*>(p);
  }
  return _impl_.pager_;
}
inline ::palm::balsam::v1::Pager* UserLogsRequest::mutable_pager() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::Pager* _msg = _internal_mutable_pager();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserLogsRequest.pager)
  return _msg;
}
inline void UserLogsRequest::set_allocated_pager(::palm::balsam::v1::Pager* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::Pager*>(_impl_.pager_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::Pager*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pager_ = reinterpret_cast<::palm::balsam::v1::Pager*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserLogsRequest.pager)
}

// -------------------------------------------------------------------

// UserLogsResponse_Item

// uint64 id = 1;
inline void UserLogsResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t UserLogsResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserLogsResponse.Item.id)
  return _internal_id();
}
inline void UserLogsResponse_Item::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserLogsResponse.Item.id)
}
inline ::uint64_t UserLogsResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void UserLogsResponse_Item::_internal_set_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string plugin = 2;
inline void UserLogsResponse_Item::clear_plugin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.plugin_.ClearToEmpty();
}
inline const std::string& UserLogsResponse_Item::plugin() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserLogsResponse.Item.plugin)
  return _internal_plugin();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserLogsResponse_Item::set_plugin(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plugin_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserLogsResponse.Item.plugin)
}
inline std::string* UserLogsResponse_Item::mutable_plugin() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_plugin();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserLogsResponse.Item.plugin)
  return _s;
}
inline const std::string& UserLogsResponse_Item::_internal_plugin() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.plugin_.Get();
}
inline void UserLogsResponse_Item::_internal_set_plugin(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plugin_.Set(value, GetArena());
}
inline std::string* UserLogsResponse_Item::_internal_mutable_plugin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.plugin_.Mutable( GetArena());
}
inline std::string* UserLogsResponse_Item::release_plugin() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserLogsResponse.Item.plugin)
  return _impl_.plugin_.Release();
}
inline void UserLogsResponse_Item::set_allocated_plugin(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.plugin_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.plugin_.IsDefault()) {
          _impl_.plugin_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserLogsResponse.Item.plugin)
}

// string ip = 3;
inline void UserLogsResponse_Item::clear_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_.ClearToEmpty();
}
inline const std::string& UserLogsResponse_Item::ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserLogsResponse.Item.ip)
  return _internal_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserLogsResponse_Item::set_ip(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserLogsResponse.Item.ip)
}
inline std::string* UserLogsResponse_Item::mutable_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ip();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserLogsResponse.Item.ip)
  return _s;
}
inline const std::string& UserLogsResponse_Item::_internal_ip() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ip_.Get();
}
inline void UserLogsResponse_Item::_internal_set_ip(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_.Set(value, GetArena());
}
inline std::string* UserLogsResponse_Item::_internal_mutable_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ip_.Mutable( GetArena());
}
inline std::string* UserLogsResponse_Item::release_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserLogsResponse.Item.ip)
  return _impl_.ip_.Release();
}
inline void UserLogsResponse_Item::set_allocated_ip(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ip_.IsDefault()) {
          _impl_.ip_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserLogsResponse.Item.ip)
}

// .palm.balsam.v1.UserLogsResponse.Item.Level level = 4;
inline void UserLogsResponse_Item::clear_level() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.level_ = 0;
}
inline ::palm::balsam::v1::UserLogsResponse_Item_Level UserLogsResponse_Item::level() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserLogsResponse.Item.level)
  return _internal_level();
}
inline void UserLogsResponse_Item::set_level(::palm::balsam::v1::UserLogsResponse_Item_Level value) {
  _internal_set_level(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserLogsResponse.Item.level)
}
inline ::palm::balsam::v1::UserLogsResponse_Item_Level UserLogsResponse_Item::_internal_level() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::balsam::v1::UserLogsResponse_Item_Level>(_impl_.level_);
}
inline void UserLogsResponse_Item::_internal_set_level(::palm::balsam::v1::UserLogsResponse_Item_Level value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.level_ = value;
}

// string resource_type = 5;
inline void UserLogsResponse_Item::clear_resource_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resource_type_.ClearToEmpty();
}
inline const std::string& UserLogsResponse_Item::resource_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserLogsResponse.Item.resource_type)
  return _internal_resource_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserLogsResponse_Item::set_resource_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resource_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserLogsResponse.Item.resource_type)
}
inline std::string* UserLogsResponse_Item::mutable_resource_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_resource_type();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserLogsResponse.Item.resource_type)
  return _s;
}
inline const std::string& UserLogsResponse_Item::_internal_resource_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resource_type_.Get();
}
inline void UserLogsResponse_Item::_internal_set_resource_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resource_type_.Set(value, GetArena());
}
inline std::string* UserLogsResponse_Item::_internal_mutable_resource_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.resource_type_.Mutable( GetArena());
}
inline std::string* UserLogsResponse_Item::release_resource_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserLogsResponse.Item.resource_type)
  return _impl_.resource_type_.Release();
}
inline void UserLogsResponse_Item::set_allocated_resource_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resource_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.resource_type_.IsDefault()) {
          _impl_.resource_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserLogsResponse.Item.resource_type)
}

// optional uint64 resource_id = 6;
inline bool UserLogsResponse_Item::has_resource_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void UserLogsResponse_Item::clear_resource_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resource_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline ::uint64_t UserLogsResponse_Item::resource_id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserLogsResponse.Item.resource_id)
  return _internal_resource_id();
}
inline void UserLogsResponse_Item::set_resource_id(::uint64_t value) {
  _internal_set_resource_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserLogsResponse.Item.resource_id)
}
inline ::uint64_t UserLogsResponse_Item::_internal_resource_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resource_id_;
}
inline void UserLogsResponse_Item::_internal_set_resource_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.resource_id_ = value;
}

// string message = 7;
inline void UserLogsResponse_Item::clear_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& UserLogsResponse_Item::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserLogsResponse.Item.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserLogsResponse_Item::set_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserLogsResponse.Item.message)
}
inline std::string* UserLogsResponse_Item::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserLogsResponse.Item.message)
  return _s;
}
inline const std::string& UserLogsResponse_Item::_internal_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.message_.Get();
}
inline void UserLogsResponse_Item::_internal_set_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(value, GetArena());
}
inline std::string* UserLogsResponse_Item::_internal_mutable_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* UserLogsResponse_Item::release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserLogsResponse.Item.message)
  return _impl_.message_.Release();
}
inline void UserLogsResponse_Item::set_allocated_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserLogsResponse.Item.message)
}

// .google.protobuf.Timestamp created_at = 8;
inline bool UserLogsResponse_Item::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& UserLogsResponse_Item::_internal_created_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.created_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& UserLogsResponse_Item::created_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserLogsResponse.Item.created_at)
  return _internal_created_at();
}
inline void UserLogsResponse_Item::unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }
  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.UserLogsResponse.Item.created_at)
}
inline ::google::protobuf::Timestamp* UserLogsResponse_Item::release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* UserLogsResponse_Item::unsafe_arena_release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserLogsResponse.Item.created_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* UserLogsResponse_Item::_internal_mutable_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.created_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_at_;
}
inline ::google::protobuf::Timestamp* UserLogsResponse_Item::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserLogsResponse.Item.created_at)
  return _msg;
}
inline void UserLogsResponse_Item::set_allocated_created_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserLogsResponse.Item.created_at)
}

// -------------------------------------------------------------------

// UserLogsResponse

// repeated .palm.balsam.v1.UserLogsResponse.Item items = 1;
inline int UserLogsResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int UserLogsResponse::items_size() const {
  return _internal_items_size();
}
inline void UserLogsResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::balsam::v1::UserLogsResponse_Item* UserLogsResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserLogsResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserLogsResponse_Item>* UserLogsResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.UserLogsResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::balsam::v1::UserLogsResponse_Item& UserLogsResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserLogsResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::balsam::v1::UserLogsResponse_Item* UserLogsResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::balsam::v1::UserLogsResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.balsam.v1.UserLogsResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserLogsResponse_Item>& UserLogsResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.UserLogsResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserLogsResponse_Item>&
UserLogsResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserLogsResponse_Item>*
UserLogsResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// .palm.balsam.v1.Pagination pagination = 9;
inline bool UserLogsResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline void UserLogsResponse::clear_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::balsam::v1::Pagination& UserLogsResponse::_internal_pagination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::Pagination* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::Pagination&>(::palm::balsam::v1::_Pagination_default_instance_);
}
inline const ::palm::balsam::v1::Pagination& UserLogsResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserLogsResponse.pagination)
  return _internal_pagination();
}
inline void UserLogsResponse::unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.UserLogsResponse.pagination)
}
inline ::palm::balsam::v1::Pagination* UserLogsResponse::release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::Pagination* UserLogsResponse::unsafe_arena_release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserLogsResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::Pagination* UserLogsResponse::_internal_mutable_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::Pagination>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(p);
  }
  return _impl_.pagination_;
}
inline ::palm::balsam::v1::Pagination* UserLogsResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::Pagination* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserLogsResponse.pagination)
  return _msg;
}
inline void UserLogsResponse::set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::Pagination*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::Pagination*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserLogsResponse.pagination)
}

// -------------------------------------------------------------------

// EmailUserByEmailRequest

// string email = 1;
inline void EmailUserByEmailRequest::clear_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.ClearToEmpty();
}
inline const std::string& EmailUserByEmailRequest::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.EmailUserByEmailRequest.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmailUserByEmailRequest::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.EmailUserByEmailRequest.email)
}
inline std::string* EmailUserByEmailRequest::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.EmailUserByEmailRequest.email)
  return _s;
}
inline const std::string& EmailUserByEmailRequest::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.email_.Get();
}
inline void EmailUserByEmailRequest::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(value, GetArena());
}
inline std::string* EmailUserByEmailRequest::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* EmailUserByEmailRequest::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.EmailUserByEmailRequest.email)
  return _impl_.email_.Release();
}
inline void EmailUserByEmailRequest::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.EmailUserByEmailRequest.email)
}

// -------------------------------------------------------------------

// EmailUserByNicknameRequest

// string nickname = 1;
inline void EmailUserByNicknameRequest::clear_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& EmailUserByNicknameRequest::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.EmailUserByNicknameRequest.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmailUserByNicknameRequest::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.EmailUserByNicknameRequest.nickname)
}
inline std::string* EmailUserByNicknameRequest::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.EmailUserByNicknameRequest.nickname)
  return _s;
}
inline const std::string& EmailUserByNicknameRequest::_internal_nickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nickname_.Get();
}
inline void EmailUserByNicknameRequest::_internal_set_nickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* EmailUserByNicknameRequest::_internal_mutable_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* EmailUserByNicknameRequest::release_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.EmailUserByNicknameRequest.nickname)
  return _impl_.nickname_.Release();
}
inline void EmailUserByNicknameRequest::set_allocated_nickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.EmailUserByNicknameRequest.nickname)
}

// -------------------------------------------------------------------

// EmailUserIndexResponse_Item

// uint64 id = 1;
inline void EmailUserIndexResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t EmailUserIndexResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.EmailUserIndexResponse.Item.id)
  return _internal_id();
}
inline void EmailUserIndexResponse_Item::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.EmailUserIndexResponse.Item.id)
}
inline ::uint64_t EmailUserIndexResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void EmailUserIndexResponse_Item::_internal_set_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// uint64 user_id = 2;
inline void EmailUserIndexResponse_Item::clear_user_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_id_ = ::uint64_t{0u};
}
inline ::uint64_t EmailUserIndexResponse_Item::user_id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.EmailUserIndexResponse.Item.user_id)
  return _internal_user_id();
}
inline void EmailUserIndexResponse_Item::set_user_id(::uint64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.EmailUserIndexResponse.Item.user_id)
}
inline ::uint64_t EmailUserIndexResponse_Item::_internal_user_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_id_;
}
inline void EmailUserIndexResponse_Item::_internal_set_user_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_id_ = value;
}

// string real_name = 3;
inline void EmailUserIndexResponse_Item::clear_real_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.real_name_.ClearToEmpty();
}
inline const std::string& EmailUserIndexResponse_Item::real_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.EmailUserIndexResponse.Item.real_name)
  return _internal_real_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmailUserIndexResponse_Item::set_real_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.real_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.EmailUserIndexResponse.Item.real_name)
}
inline std::string* EmailUserIndexResponse_Item::mutable_real_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_real_name();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.EmailUserIndexResponse.Item.real_name)
  return _s;
}
inline const std::string& EmailUserIndexResponse_Item::_internal_real_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.real_name_.Get();
}
inline void EmailUserIndexResponse_Item::_internal_set_real_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.real_name_.Set(value, GetArena());
}
inline std::string* EmailUserIndexResponse_Item::_internal_mutable_real_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.real_name_.Mutable( GetArena());
}
inline std::string* EmailUserIndexResponse_Item::release_real_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.EmailUserIndexResponse.Item.real_name)
  return _impl_.real_name_.Release();
}
inline void EmailUserIndexResponse_Item::set_allocated_real_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.real_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.real_name_.IsDefault()) {
          _impl_.real_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.EmailUserIndexResponse.Item.real_name)
}

// string nickname = 4;
inline void EmailUserIndexResponse_Item::clear_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& EmailUserIndexResponse_Item::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.EmailUserIndexResponse.Item.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmailUserIndexResponse_Item::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.EmailUserIndexResponse.Item.nickname)
}
inline std::string* EmailUserIndexResponse_Item::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.EmailUserIndexResponse.Item.nickname)
  return _s;
}
inline const std::string& EmailUserIndexResponse_Item::_internal_nickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nickname_.Get();
}
inline void EmailUserIndexResponse_Item::_internal_set_nickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* EmailUserIndexResponse_Item::_internal_mutable_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* EmailUserIndexResponse_Item::release_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.EmailUserIndexResponse.Item.nickname)
  return _impl_.nickname_.Release();
}
inline void EmailUserIndexResponse_Item::set_allocated_nickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.EmailUserIndexResponse.Item.nickname)
}

// string email = 5;
inline void EmailUserIndexResponse_Item::clear_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.ClearToEmpty();
}
inline const std::string& EmailUserIndexResponse_Item::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.EmailUserIndexResponse.Item.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmailUserIndexResponse_Item::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.EmailUserIndexResponse.Item.email)
}
inline std::string* EmailUserIndexResponse_Item::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.EmailUserIndexResponse.Item.email)
  return _s;
}
inline const std::string& EmailUserIndexResponse_Item::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.email_.Get();
}
inline void EmailUserIndexResponse_Item::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(value, GetArena());
}
inline std::string* EmailUserIndexResponse_Item::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* EmailUserIndexResponse_Item::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.EmailUserIndexResponse.Item.email)
  return _impl_.email_.Release();
}
inline void EmailUserIndexResponse_Item::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.EmailUserIndexResponse.Item.email)
}

// string avatar = 6;
inline void EmailUserIndexResponse_Item::clear_avatar() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.avatar_.ClearToEmpty();
}
inline const std::string& EmailUserIndexResponse_Item::avatar() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.EmailUserIndexResponse.Item.avatar)
  return _internal_avatar();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void EmailUserIndexResponse_Item::set_avatar(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.avatar_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.EmailUserIndexResponse.Item.avatar)
}
inline std::string* EmailUserIndexResponse_Item::mutable_avatar() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_avatar();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.EmailUserIndexResponse.Item.avatar)
  return _s;
}
inline const std::string& EmailUserIndexResponse_Item::_internal_avatar() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.avatar_.Get();
}
inline void EmailUserIndexResponse_Item::_internal_set_avatar(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.avatar_.Set(value, GetArena());
}
inline std::string* EmailUserIndexResponse_Item::_internal_mutable_avatar() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.avatar_.Mutable( GetArena());
}
inline std::string* EmailUserIndexResponse_Item::release_avatar() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.EmailUserIndexResponse.Item.avatar)
  return _impl_.avatar_.Release();
}
inline void EmailUserIndexResponse_Item::set_allocated_avatar(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.avatar_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.avatar_.IsDefault()) {
          _impl_.avatar_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.EmailUserIndexResponse.Item.avatar)
}

// optional .google.protobuf.Timestamp confirmed_at = 7;
inline bool EmailUserIndexResponse_Item::has_confirmed_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.confirmed_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& EmailUserIndexResponse_Item::_internal_confirmed_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.confirmed_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& EmailUserIndexResponse_Item::confirmed_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.EmailUserIndexResponse.Item.confirmed_at)
  return _internal_confirmed_at();
}
inline void EmailUserIndexResponse_Item::unsafe_arena_set_allocated_confirmed_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.confirmed_at_);
  }
  _impl_.confirmed_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.EmailUserIndexResponse.Item.confirmed_at)
}
inline ::google::protobuf::Timestamp* EmailUserIndexResponse_Item::release_confirmed_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.confirmed_at_;
  _impl_.confirmed_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* EmailUserIndexResponse_Item::unsafe_arena_release_confirmed_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.EmailUserIndexResponse.Item.confirmed_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.confirmed_at_;
  _impl_.confirmed_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* EmailUserIndexResponse_Item::_internal_mutable_confirmed_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.confirmed_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.confirmed_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.confirmed_at_;
}
inline ::google::protobuf::Timestamp* EmailUserIndexResponse_Item::mutable_confirmed_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_confirmed_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.EmailUserIndexResponse.Item.confirmed_at)
  return _msg;
}
inline void EmailUserIndexResponse_Item::set_allocated_confirmed_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.confirmed_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.confirmed_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.EmailUserIndexResponse.Item.confirmed_at)
}

// optional .google.protobuf.Timestamp deleted_at = 8;
inline bool EmailUserIndexResponse_Item::has_deleted_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.deleted_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& EmailUserIndexResponse_Item::_internal_deleted_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.deleted_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& EmailUserIndexResponse_Item::deleted_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.EmailUserIndexResponse.Item.deleted_at)
  return _internal_deleted_at();
}
inline void EmailUserIndexResponse_Item::unsafe_arena_set_allocated_deleted_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deleted_at_);
  }
  _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.EmailUserIndexResponse.Item.deleted_at)
}
inline ::google::protobuf::Timestamp* EmailUserIndexResponse_Item::release_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.deleted_at_;
  _impl_.deleted_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* EmailUserIndexResponse_Item::unsafe_arena_release_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.EmailUserIndexResponse.Item.deleted_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.deleted_at_;
  _impl_.deleted_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* EmailUserIndexResponse_Item::_internal_mutable_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.deleted_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.deleted_at_;
}
inline ::google::protobuf::Timestamp* EmailUserIndexResponse_Item::mutable_deleted_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_deleted_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.EmailUserIndexResponse.Item.deleted_at)
  return _msg;
}
inline void EmailUserIndexResponse_Item::set_allocated_deleted_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deleted_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.EmailUserIndexResponse.Item.deleted_at)
}

// .google.protobuf.Timestamp updated_at = 9;
inline bool EmailUserIndexResponse_Item::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& EmailUserIndexResponse_Item::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& EmailUserIndexResponse_Item::updated_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.EmailUserIndexResponse.Item.updated_at)
  return _internal_updated_at();
}
inline void EmailUserIndexResponse_Item::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.EmailUserIndexResponse.Item.updated_at)
}
inline ::google::protobuf::Timestamp* EmailUserIndexResponse_Item::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* EmailUserIndexResponse_Item::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.EmailUserIndexResponse.Item.updated_at)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* EmailUserIndexResponse_Item::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* EmailUserIndexResponse_Item::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.EmailUserIndexResponse.Item.updated_at)
  return _msg;
}
inline void EmailUserIndexResponse_Item::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.EmailUserIndexResponse.Item.updated_at)
}

// -------------------------------------------------------------------

// EmailUserIndexResponse

// repeated .palm.balsam.v1.EmailUserIndexResponse.Item items = 1;
inline int EmailUserIndexResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int EmailUserIndexResponse::items_size() const {
  return _internal_items_size();
}
inline void EmailUserIndexResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::balsam::v1::EmailUserIndexResponse_Item* EmailUserIndexResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.EmailUserIndexResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::EmailUserIndexResponse_Item>* EmailUserIndexResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.EmailUserIndexResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::balsam::v1::EmailUserIndexResponse_Item& EmailUserIndexResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.EmailUserIndexResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::balsam::v1::EmailUserIndexResponse_Item* EmailUserIndexResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::balsam::v1::EmailUserIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.balsam.v1.EmailUserIndexResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::EmailUserIndexResponse_Item>& EmailUserIndexResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.EmailUserIndexResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::EmailUserIndexResponse_Item>&
EmailUserIndexResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::EmailUserIndexResponse_Item>*
EmailUserIndexResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// .palm.balsam.v1.Pagination pagination = 2;
inline bool EmailUserIndexResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline void EmailUserIndexResponse::clear_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::balsam::v1::Pagination& EmailUserIndexResponse::_internal_pagination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::Pagination* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::Pagination&>(::palm::balsam::v1::_Pagination_default_instance_);
}
inline const ::palm::balsam::v1::Pagination& EmailUserIndexResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.EmailUserIndexResponse.pagination)
  return _internal_pagination();
}
inline void EmailUserIndexResponse::unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.EmailUserIndexResponse.pagination)
}
inline ::palm::balsam::v1::Pagination* EmailUserIndexResponse::release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::Pagination* EmailUserIndexResponse::unsafe_arena_release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.EmailUserIndexResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::Pagination* EmailUserIndexResponse::_internal_mutable_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::Pagination>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(p);
  }
  return _impl_.pagination_;
}
inline ::palm::balsam::v1::Pagination* EmailUserIndexResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::Pagination* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.EmailUserIndexResponse.pagination)
  return _msg;
}
inline void EmailUserIndexResponse::set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::Pagination*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::Pagination*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.EmailUserIndexResponse.pagination)
}

// -------------------------------------------------------------------

// UserResetPasswordRequest

// string token = 1;
inline void UserResetPasswordRequest::clear_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& UserResetPasswordRequest::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserResetPasswordRequest.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserResetPasswordRequest::set_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserResetPasswordRequest.token)
}
inline std::string* UserResetPasswordRequest::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserResetPasswordRequest.token)
  return _s;
}
inline const std::string& UserResetPasswordRequest::_internal_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.token_.Get();
}
inline void UserResetPasswordRequest::_internal_set_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(value, GetArena());
}
inline std::string* UserResetPasswordRequest::_internal_mutable_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* UserResetPasswordRequest::release_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserResetPasswordRequest.token)
  return _impl_.token_.Release();
}
inline void UserResetPasswordRequest::set_allocated_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserResetPasswordRequest.token)
}

// string password = 2;
inline void UserResetPasswordRequest::clear_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.ClearToEmpty();
}
inline const std::string& UserResetPasswordRequest::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserResetPasswordRequest.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserResetPasswordRequest::set_password(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserResetPasswordRequest.password)
}
inline std::string* UserResetPasswordRequest::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserResetPasswordRequest.password)
  return _s;
}
inline const std::string& UserResetPasswordRequest::_internal_password() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.password_.Get();
}
inline void UserResetPasswordRequest::_internal_set_password(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_.Set(value, GetArena());
}
inline std::string* UserResetPasswordRequest::_internal_mutable_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* UserResetPasswordRequest::release_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserResetPasswordRequest.password)
  return _impl_.password_.Release();
}
inline void UserResetPasswordRequest::set_allocated_password(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.password_.IsDefault()) {
          _impl_.password_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserResetPasswordRequest.password)
}

// string home = 9;
inline void UserResetPasswordRequest::clear_home() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.home_.ClearToEmpty();
}
inline const std::string& UserResetPasswordRequest::home() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserResetPasswordRequest.home)
  return _internal_home();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserResetPasswordRequest::set_home(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.home_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserResetPasswordRequest.home)
}
inline std::string* UserResetPasswordRequest::mutable_home() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_home();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserResetPasswordRequest.home)
  return _s;
}
inline const std::string& UserResetPasswordRequest::_internal_home() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.home_.Get();
}
inline void UserResetPasswordRequest::_internal_set_home(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.home_.Set(value, GetArena());
}
inline std::string* UserResetPasswordRequest::_internal_mutable_home() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.home_.Mutable( GetArena());
}
inline std::string* UserResetPasswordRequest::release_home() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserResetPasswordRequest.home)
  return _impl_.home_.Release();
}
inline void UserResetPasswordRequest::set_allocated_home(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.home_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.home_.IsDefault()) {
          _impl_.home_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserResetPasswordRequest.home)
}

// -------------------------------------------------------------------

// UserByEmailRequest

// string email = 1;
inline bool UserByEmailRequest::has_email() const {
  return user_case() == kEmail;
}
inline void UserByEmailRequest::set_has_email() {
  _impl_._oneof_case_[0] = kEmail;
}
inline void UserByEmailRequest::clear_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() == kEmail) {
    _impl_.user_.email_.Destroy();
    clear_has_user();
  }
}
inline const std::string& UserByEmailRequest::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserByEmailRequest.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserByEmailRequest::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kEmail) {
    clear_user();

    set_has_email();
    _impl_.user_.email_.InitDefault();
  }
  _impl_.user_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserByEmailRequest.email)
}
inline std::string* UserByEmailRequest::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserByEmailRequest.email)
  return _s;
}
inline const std::string& UserByEmailRequest::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (user_case() != kEmail) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.user_.email_.Get();
}
inline void UserByEmailRequest::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kEmail) {
    clear_user();

    set_has_email();
    _impl_.user_.email_.InitDefault();
  }
  _impl_.user_.email_.Set(value, GetArena());
}
inline std::string* UserByEmailRequest::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kEmail) {
    clear_user();

    set_has_email();
    _impl_.user_.email_.InitDefault();
  }
  return _impl_.user_.email_.Mutable( GetArena());
}
inline std::string* UserByEmailRequest::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserByEmailRequest.email)
  if (user_case() != kEmail) {
    return nullptr;
  }
  clear_has_user();
  return _impl_.user_.email_.Release();
}
inline void UserByEmailRequest::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_user()) {
    clear_user();
  }
  if (value != nullptr) {
    set_has_email();
    _impl_.user_.email_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserByEmailRequest.email)
}

// string nickname = 2;
inline bool UserByEmailRequest::has_nickname() const {
  return user_case() == kNickname;
}
inline void UserByEmailRequest::set_has_nickname() {
  _impl_._oneof_case_[0] = kNickname;
}
inline void UserByEmailRequest::clear_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() == kNickname) {
    _impl_.user_.nickname_.Destroy();
    clear_has_user();
  }
}
inline const std::string& UserByEmailRequest::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserByEmailRequest.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserByEmailRequest::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kNickname) {
    clear_user();

    set_has_nickname();
    _impl_.user_.nickname_.InitDefault();
  }
  _impl_.user_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserByEmailRequest.nickname)
}
inline std::string* UserByEmailRequest::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserByEmailRequest.nickname)
  return _s;
}
inline const std::string& UserByEmailRequest::_internal_nickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (user_case() != kNickname) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.user_.nickname_.Get();
}
inline void UserByEmailRequest::_internal_set_nickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kNickname) {
    clear_user();

    set_has_nickname();
    _impl_.user_.nickname_.InitDefault();
  }
  _impl_.user_.nickname_.Set(value, GetArena());
}
inline std::string* UserByEmailRequest::_internal_mutable_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kNickname) {
    clear_user();

    set_has_nickname();
    _impl_.user_.nickname_.InitDefault();
  }
  return _impl_.user_.nickname_.Mutable( GetArena());
}
inline std::string* UserByEmailRequest::release_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserByEmailRequest.nickname)
  if (user_case() != kNickname) {
    return nullptr;
  }
  clear_has_user();
  return _impl_.user_.nickname_.Release();
}
inline void UserByEmailRequest::set_allocated_nickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_user()) {
    clear_user();
  }
  if (value != nullptr) {
    set_has_nickname();
    _impl_.user_.nickname_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserByEmailRequest.nickname)
}

// string home = 9;
inline void UserByEmailRequest::clear_home() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.home_.ClearToEmpty();
}
inline const std::string& UserByEmailRequest::home() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserByEmailRequest.home)
  return _internal_home();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserByEmailRequest::set_home(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.home_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserByEmailRequest.home)
}
inline std::string* UserByEmailRequest::mutable_home() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_home();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserByEmailRequest.home)
  return _s;
}
inline const std::string& UserByEmailRequest::_internal_home() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.home_.Get();
}
inline void UserByEmailRequest::_internal_set_home(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.home_.Set(value, GetArena());
}
inline std::string* UserByEmailRequest::_internal_mutable_home() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.home_.Mutable( GetArena());
}
inline std::string* UserByEmailRequest::release_home() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserByEmailRequest.home)
  return _impl_.home_.Release();
}
inline void UserByEmailRequest::set_allocated_home(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.home_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.home_.IsDefault()) {
          _impl_.home_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserByEmailRequest.home)
}

inline bool UserByEmailRequest::has_user() const {
  return user_case() != USER_NOT_SET;
}
inline void UserByEmailRequest::clear_has_user() {
  _impl_._oneof_case_[0] = USER_NOT_SET;
}
inline UserByEmailRequest::UserCase UserByEmailRequest::user_case() const {
  return UserByEmailRequest::UserCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// UserByTokenRequest

// string token = 1;
inline void UserByTokenRequest::clear_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& UserByTokenRequest::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserByTokenRequest.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserByTokenRequest::set_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserByTokenRequest.token)
}
inline std::string* UserByTokenRequest::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserByTokenRequest.token)
  return _s;
}
inline const std::string& UserByTokenRequest::_internal_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.token_.Get();
}
inline void UserByTokenRequest::_internal_set_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(value, GetArena());
}
inline std::string* UserByTokenRequest::_internal_mutable_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* UserByTokenRequest::release_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserByTokenRequest.token)
  return _impl_.token_.Release();
}
inline void UserByTokenRequest::set_allocated_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserByTokenRequest.token)
}

// -------------------------------------------------------------------

// UserSignInByEmailRequest

// string email = 1;
inline bool UserSignInByEmailRequest::has_email() const {
  return user_case() == kEmail;
}
inline void UserSignInByEmailRequest::set_has_email() {
  _impl_._oneof_case_[0] = kEmail;
}
inline void UserSignInByEmailRequest::clear_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() == kEmail) {
    _impl_.user_.email_.Destroy();
    clear_has_user();
  }
}
inline const std::string& UserSignInByEmailRequest::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInByEmailRequest.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInByEmailRequest::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kEmail) {
    clear_user();

    set_has_email();
    _impl_.user_.email_.InitDefault();
  }
  _impl_.user_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInByEmailRequest.email)
}
inline std::string* UserSignInByEmailRequest::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInByEmailRequest.email)
  return _s;
}
inline const std::string& UserSignInByEmailRequest::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (user_case() != kEmail) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.user_.email_.Get();
}
inline void UserSignInByEmailRequest::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kEmail) {
    clear_user();

    set_has_email();
    _impl_.user_.email_.InitDefault();
  }
  _impl_.user_.email_.Set(value, GetArena());
}
inline std::string* UserSignInByEmailRequest::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kEmail) {
    clear_user();

    set_has_email();
    _impl_.user_.email_.InitDefault();
  }
  return _impl_.user_.email_.Mutable( GetArena());
}
inline std::string* UserSignInByEmailRequest::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignInByEmailRequest.email)
  if (user_case() != kEmail) {
    return nullptr;
  }
  clear_has_user();
  return _impl_.user_.email_.Release();
}
inline void UserSignInByEmailRequest::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_user()) {
    clear_user();
  }
  if (value != nullptr) {
    set_has_email();
    _impl_.user_.email_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignInByEmailRequest.email)
}

// string nickname = 2;
inline bool UserSignInByEmailRequest::has_nickname() const {
  return user_case() == kNickname;
}
inline void UserSignInByEmailRequest::set_has_nickname() {
  _impl_._oneof_case_[0] = kNickname;
}
inline void UserSignInByEmailRequest::clear_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() == kNickname) {
    _impl_.user_.nickname_.Destroy();
    clear_has_user();
  }
}
inline const std::string& UserSignInByEmailRequest::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInByEmailRequest.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInByEmailRequest::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kNickname) {
    clear_user();

    set_has_nickname();
    _impl_.user_.nickname_.InitDefault();
  }
  _impl_.user_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInByEmailRequest.nickname)
}
inline std::string* UserSignInByEmailRequest::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInByEmailRequest.nickname)
  return _s;
}
inline const std::string& UserSignInByEmailRequest::_internal_nickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  if (user_case() != kNickname) {
    return ::google::protobuf::internal::GetEmptyStringAlreadyInited();
  }
  return _impl_.user_.nickname_.Get();
}
inline void UserSignInByEmailRequest::_internal_set_nickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kNickname) {
    clear_user();

    set_has_nickname();
    _impl_.user_.nickname_.InitDefault();
  }
  _impl_.user_.nickname_.Set(value, GetArena());
}
inline std::string* UserSignInByEmailRequest::_internal_mutable_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (user_case() != kNickname) {
    clear_user();

    set_has_nickname();
    _impl_.user_.nickname_.InitDefault();
  }
  return _impl_.user_.nickname_.Mutable( GetArena());
}
inline std::string* UserSignInByEmailRequest::release_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignInByEmailRequest.nickname)
  if (user_case() != kNickname) {
    return nullptr;
  }
  clear_has_user();
  return _impl_.user_.nickname_.Release();
}
inline void UserSignInByEmailRequest::set_allocated_nickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (has_user()) {
    clear_user();
  }
  if (value != nullptr) {
    set_has_nickname();
    _impl_.user_.nickname_.InitAllocated(value, GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignInByEmailRequest.nickname)
}

// string password = 8;
inline void UserSignInByEmailRequest::clear_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.ClearToEmpty();
}
inline const std::string& UserSignInByEmailRequest::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInByEmailRequest.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInByEmailRequest::set_password(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInByEmailRequest.password)
}
inline std::string* UserSignInByEmailRequest::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInByEmailRequest.password)
  return _s;
}
inline const std::string& UserSignInByEmailRequest::_internal_password() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.password_.Get();
}
inline void UserSignInByEmailRequest::_internal_set_password(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_.Set(value, GetArena());
}
inline std::string* UserSignInByEmailRequest::_internal_mutable_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* UserSignInByEmailRequest::release_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignInByEmailRequest.password)
  return _impl_.password_.Release();
}
inline void UserSignInByEmailRequest::set_allocated_password(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.password_.IsDefault()) {
          _impl_.password_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignInByEmailRequest.password)
}

// .google.protobuf.Duration ttl = 9;
inline bool UserSignInByEmailRequest::has_ttl() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ttl_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& UserSignInByEmailRequest::_internal_ttl() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Duration* p = _impl_.ttl_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& UserSignInByEmailRequest::ttl() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInByEmailRequest.ttl)
  return _internal_ttl();
}
inline void UserSignInByEmailRequest::unsafe_arena_set_allocated_ttl(::google::protobuf::Duration* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ttl_);
  }
  _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.UserSignInByEmailRequest.ttl)
}
inline ::google::protobuf::Duration* UserSignInByEmailRequest::release_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.ttl_;
  _impl_.ttl_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Duration* UserSignInByEmailRequest::unsafe_arena_release_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignInByEmailRequest.ttl)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.ttl_;
  _impl_.ttl_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* UserSignInByEmailRequest::_internal_mutable_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.ttl_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArena());
    _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.ttl_;
}
inline ::google::protobuf::Duration* UserSignInByEmailRequest::mutable_ttl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Duration* _msg = _internal_mutable_ttl();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInByEmailRequest.ttl)
  return _msg;
}
inline void UserSignInByEmailRequest::set_allocated_ttl(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ttl_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignInByEmailRequest.ttl)
}

inline bool UserSignInByEmailRequest::has_user() const {
  return user_case() != USER_NOT_SET;
}
inline void UserSignInByEmailRequest::clear_has_user() {
  _impl_._oneof_case_[0] = USER_NOT_SET;
}
inline UserSignInByEmailRequest::UserCase UserSignInByEmailRequest::user_case() const {
  return UserSignInByEmailRequest::UserCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// UserSignUpByEmailRequest

// string real_name = 1;
inline void UserSignUpByEmailRequest::clear_real_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.real_name_.ClearToEmpty();
}
inline const std::string& UserSignUpByEmailRequest::real_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignUpByEmailRequest.real_name)
  return _internal_real_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignUpByEmailRequest::set_real_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.real_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignUpByEmailRequest.real_name)
}
inline std::string* UserSignUpByEmailRequest::mutable_real_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_real_name();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignUpByEmailRequest.real_name)
  return _s;
}
inline const std::string& UserSignUpByEmailRequest::_internal_real_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.real_name_.Get();
}
inline void UserSignUpByEmailRequest::_internal_set_real_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.real_name_.Set(value, GetArena());
}
inline std::string* UserSignUpByEmailRequest::_internal_mutable_real_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.real_name_.Mutable( GetArena());
}
inline std::string* UserSignUpByEmailRequest::release_real_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignUpByEmailRequest.real_name)
  return _impl_.real_name_.Release();
}
inline void UserSignUpByEmailRequest::set_allocated_real_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.real_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.real_name_.IsDefault()) {
          _impl_.real_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignUpByEmailRequest.real_name)
}

// string email = 2;
inline void UserSignUpByEmailRequest::clear_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.ClearToEmpty();
}
inline const std::string& UserSignUpByEmailRequest::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignUpByEmailRequest.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignUpByEmailRequest::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignUpByEmailRequest.email)
}
inline std::string* UserSignUpByEmailRequest::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignUpByEmailRequest.email)
  return _s;
}
inline const std::string& UserSignUpByEmailRequest::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.email_.Get();
}
inline void UserSignUpByEmailRequest::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(value, GetArena());
}
inline std::string* UserSignUpByEmailRequest::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* UserSignUpByEmailRequest::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignUpByEmailRequest.email)
  return _impl_.email_.Release();
}
inline void UserSignUpByEmailRequest::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignUpByEmailRequest.email)
}

// string nickname = 3;
inline void UserSignUpByEmailRequest::clear_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& UserSignUpByEmailRequest::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignUpByEmailRequest.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignUpByEmailRequest::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignUpByEmailRequest.nickname)
}
inline std::string* UserSignUpByEmailRequest::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignUpByEmailRequest.nickname)
  return _s;
}
inline const std::string& UserSignUpByEmailRequest::_internal_nickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nickname_.Get();
}
inline void UserSignUpByEmailRequest::_internal_set_nickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* UserSignUpByEmailRequest::_internal_mutable_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* UserSignUpByEmailRequest::release_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignUpByEmailRequest.nickname)
  return _impl_.nickname_.Release();
}
inline void UserSignUpByEmailRequest::set_allocated_nickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignUpByEmailRequest.nickname)
}

// string password = 4;
inline void UserSignUpByEmailRequest::clear_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.ClearToEmpty();
}
inline const std::string& UserSignUpByEmailRequest::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignUpByEmailRequest.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignUpByEmailRequest::set_password(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignUpByEmailRequest.password)
}
inline std::string* UserSignUpByEmailRequest::mutable_password() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignUpByEmailRequest.password)
  return _s;
}
inline const std::string& UserSignUpByEmailRequest::_internal_password() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.password_.Get();
}
inline void UserSignUpByEmailRequest::_internal_set_password(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.password_.Set(value, GetArena());
}
inline std::string* UserSignUpByEmailRequest::_internal_mutable_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.password_.Mutable( GetArena());
}
inline std::string* UserSignUpByEmailRequest::release_password() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignUpByEmailRequest.password)
  return _impl_.password_.Release();
}
inline void UserSignUpByEmailRequest::set_allocated_password(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.password_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.password_.IsDefault()) {
          _impl_.password_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignUpByEmailRequest.password)
}

// string timezone = 5;
inline void UserSignUpByEmailRequest::clear_timezone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.timezone_.ClearToEmpty();
}
inline const std::string& UserSignUpByEmailRequest::timezone() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignUpByEmailRequest.timezone)
  return _internal_timezone();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignUpByEmailRequest::set_timezone(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timezone_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignUpByEmailRequest.timezone)
}
inline std::string* UserSignUpByEmailRequest::mutable_timezone() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timezone();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignUpByEmailRequest.timezone)
  return _s;
}
inline const std::string& UserSignUpByEmailRequest::_internal_timezone() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timezone_.Get();
}
inline void UserSignUpByEmailRequest::_internal_set_timezone(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timezone_.Set(value, GetArena());
}
inline std::string* UserSignUpByEmailRequest::_internal_mutable_timezone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.timezone_.Mutable( GetArena());
}
inline std::string* UserSignUpByEmailRequest::release_timezone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignUpByEmailRequest.timezone)
  return _impl_.timezone_.Release();
}
inline void UserSignUpByEmailRequest::set_allocated_timezone(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.timezone_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.timezone_.IsDefault()) {
          _impl_.timezone_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignUpByEmailRequest.timezone)
}

// string home = 6;
inline void UserSignUpByEmailRequest::clear_home() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.home_.ClearToEmpty();
}
inline const std::string& UserSignUpByEmailRequest::home() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignUpByEmailRequest.home)
  return _internal_home();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignUpByEmailRequest::set_home(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.home_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignUpByEmailRequest.home)
}
inline std::string* UserSignUpByEmailRequest::mutable_home() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_home();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignUpByEmailRequest.home)
  return _s;
}
inline const std::string& UserSignUpByEmailRequest::_internal_home() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.home_.Get();
}
inline void UserSignUpByEmailRequest::_internal_set_home(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.home_.Set(value, GetArena());
}
inline std::string* UserSignUpByEmailRequest::_internal_mutable_home() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.home_.Mutable( GetArena());
}
inline std::string* UserSignUpByEmailRequest::release_home() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignUpByEmailRequest.home)
  return _impl_.home_.Release();
}
inline void UserSignUpByEmailRequest::set_allocated_home(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.home_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.home_.IsDefault()) {
          _impl_.home_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignUpByEmailRequest.home)
}

// .google.protobuf.Duration ttl = 9;
inline bool UserSignUpByEmailRequest::has_ttl() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ttl_ != nullptr);
  return value;
}
inline const ::google::protobuf::Duration& UserSignUpByEmailRequest::_internal_ttl() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Duration* p = _impl_.ttl_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Duration&>(::google::protobuf::_Duration_default_instance_);
}
inline const ::google::protobuf::Duration& UserSignUpByEmailRequest::ttl() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignUpByEmailRequest.ttl)
  return _internal_ttl();
}
inline void UserSignUpByEmailRequest::unsafe_arena_set_allocated_ttl(::google::protobuf::Duration* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ttl_);
  }
  _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.UserSignUpByEmailRequest.ttl)
}
inline ::google::protobuf::Duration* UserSignUpByEmailRequest::release_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* released = _impl_.ttl_;
  _impl_.ttl_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Duration* UserSignUpByEmailRequest::unsafe_arena_release_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignUpByEmailRequest.ttl)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Duration* temp = _impl_.ttl_;
  _impl_.ttl_ = nullptr;
  return temp;
}
inline ::google::protobuf::Duration* UserSignUpByEmailRequest::_internal_mutable_ttl() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.ttl_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Duration>(GetArena());
    _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(p);
  }
  return _impl_.ttl_;
}
inline ::google::protobuf::Duration* UserSignUpByEmailRequest::mutable_ttl() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Duration* _msg = _internal_mutable_ttl();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignUpByEmailRequest.ttl)
  return _msg;
}
inline void UserSignUpByEmailRequest::set_allocated_ttl(::google::protobuf::Duration* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ttl_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ttl_ = reinterpret_cast<::google::protobuf::Duration*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignUpByEmailRequest.ttl)
}

// -------------------------------------------------------------------

// UserSignInResponse_Detail

// optional string name = 1;
inline bool UserSignInResponse_Detail::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void UserSignInResponse_Detail::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UserSignInResponse_Detail::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.Detail.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInResponse_Detail::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.Detail.name)
}
inline std::string* UserSignInResponse_Detail::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInResponse.Detail.name)
  return _s;
}
inline const std::string& UserSignInResponse_Detail::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void UserSignInResponse_Detail::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* UserSignInResponse_Detail::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* UserSignInResponse_Detail::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignInResponse.Detail.name)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void UserSignInResponse_Detail::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignInResponse.Detail.name)
}

// optional string avatar = 2;
inline bool UserSignInResponse_Detail::has_avatar() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void UserSignInResponse_Detail::clear_avatar() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.avatar_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& UserSignInResponse_Detail::avatar() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.Detail.avatar)
  return _internal_avatar();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInResponse_Detail::set_avatar(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.avatar_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.Detail.avatar)
}
inline std::string* UserSignInResponse_Detail::mutable_avatar() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_avatar();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInResponse.Detail.avatar)
  return _s;
}
inline const std::string& UserSignInResponse_Detail::_internal_avatar() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.avatar_.Get();
}
inline void UserSignInResponse_Detail::_internal_set_avatar(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.avatar_.Set(value, GetArena());
}
inline std::string* UserSignInResponse_Detail::_internal_mutable_avatar() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.avatar_.Mutable( GetArena());
}
inline std::string* UserSignInResponse_Detail::release_avatar() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignInResponse.Detail.avatar)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.avatar_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avatar_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void UserSignInResponse_Detail::set_allocated_avatar(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.avatar_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.avatar_.IsDefault()) {
          _impl_.avatar_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignInResponse.Detail.avatar)
}

// string lang = 3;
inline void UserSignInResponse_Detail::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& UserSignInResponse_Detail::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.Detail.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInResponse_Detail::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.Detail.lang)
}
inline std::string* UserSignInResponse_Detail::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInResponse.Detail.lang)
  return _s;
}
inline const std::string& UserSignInResponse_Detail::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void UserSignInResponse_Detail::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* UserSignInResponse_Detail::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* UserSignInResponse_Detail::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignInResponse.Detail.lang)
  return _impl_.lang_.Release();
}
inline void UserSignInResponse_Detail::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignInResponse.Detail.lang)
}

// string timezone = 4;
inline void UserSignInResponse_Detail::clear_timezone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.timezone_.ClearToEmpty();
}
inline const std::string& UserSignInResponse_Detail::timezone() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.Detail.timezone)
  return _internal_timezone();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInResponse_Detail::set_timezone(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timezone_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.Detail.timezone)
}
inline std::string* UserSignInResponse_Detail::mutable_timezone() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_timezone();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInResponse.Detail.timezone)
  return _s;
}
inline const std::string& UserSignInResponse_Detail::_internal_timezone() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.timezone_.Get();
}
inline void UserSignInResponse_Detail::_internal_set_timezone(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.timezone_.Set(value, GetArena());
}
inline std::string* UserSignInResponse_Detail::_internal_mutable_timezone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.timezone_.Mutable( GetArena());
}
inline std::string* UserSignInResponse_Detail::release_timezone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignInResponse.Detail.timezone)
  return _impl_.timezone_.Release();
}
inline void UserSignInResponse_Detail::set_allocated_timezone(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.timezone_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.timezone_.IsDefault()) {
          _impl_.timezone_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignInResponse.Detail.timezone)
}

// .palm.balsam.v1.UserSignInResponse.Detail.ProviderType provider_type = 8;
inline void UserSignInResponse_Detail::clear_provider_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.provider_type_ = 0;
}
inline ::palm::balsam::v1::UserSignInResponse_Detail_ProviderType UserSignInResponse_Detail::provider_type() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.Detail.provider_type)
  return _internal_provider_type();
}
inline void UserSignInResponse_Detail::set_provider_type(::palm::balsam::v1::UserSignInResponse_Detail_ProviderType value) {
  _internal_set_provider_type(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.Detail.provider_type)
}
inline ::palm::balsam::v1::UserSignInResponse_Detail_ProviderType UserSignInResponse_Detail::_internal_provider_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::balsam::v1::UserSignInResponse_Detail_ProviderType>(_impl_.provider_type_);
}
inline void UserSignInResponse_Detail::_internal_set_provider_type(::palm::balsam::v1::UserSignInResponse_Detail_ProviderType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.provider_type_ = value;
}

// bool has_email = 11;
inline void UserSignInResponse_Detail::clear_has_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.has_email_ = false;
}
inline bool UserSignInResponse_Detail::has_email() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.Detail.has_email)
  return _internal_has_email();
}
inline void UserSignInResponse_Detail::set_has_email(bool value) {
  _internal_set_has_email(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.Detail.has_email)
}
inline bool UserSignInResponse_Detail::_internal_has_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.has_email_;
}
inline void UserSignInResponse_Detail::_internal_set_has_email(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.has_email_ = value;
}

// bool has_phone = 12;
inline void UserSignInResponse_Detail::clear_has_phone() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.has_phone_ = false;
}
inline bool UserSignInResponse_Detail::has_phone() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.Detail.has_phone)
  return _internal_has_phone();
}
inline void UserSignInResponse_Detail::set_has_phone(bool value) {
  _internal_set_has_phone(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.Detail.has_phone)
}
inline bool UserSignInResponse_Detail::_internal_has_phone() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.has_phone_;
}
inline void UserSignInResponse_Detail::_internal_set_has_phone(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.has_phone_ = value;
}

// bool has_google_oauth2 = 21;
inline void UserSignInResponse_Detail::clear_has_google_oauth2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.has_google_oauth2_ = false;
}
inline bool UserSignInResponse_Detail::has_google_oauth2() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.Detail.has_google_oauth2)
  return _internal_has_google_oauth2();
}
inline void UserSignInResponse_Detail::set_has_google_oauth2(bool value) {
  _internal_set_has_google_oauth2(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.Detail.has_google_oauth2)
}
inline bool UserSignInResponse_Detail::_internal_has_google_oauth2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.has_google_oauth2_;
}
inline void UserSignInResponse_Detail::_internal_set_has_google_oauth2(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.has_google_oauth2_ = value;
}

// bool has_wechat_oauth2 = 22;
inline void UserSignInResponse_Detail::clear_has_wechat_oauth2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.has_wechat_oauth2_ = false;
}
inline bool UserSignInResponse_Detail::has_wechat_oauth2() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.Detail.has_wechat_oauth2)
  return _internal_has_wechat_oauth2();
}
inline void UserSignInResponse_Detail::set_has_wechat_oauth2(bool value) {
  _internal_set_has_wechat_oauth2(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.Detail.has_wechat_oauth2)
}
inline bool UserSignInResponse_Detail::_internal_has_wechat_oauth2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.has_wechat_oauth2_;
}
inline void UserSignInResponse_Detail::_internal_set_has_wechat_oauth2(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.has_wechat_oauth2_ = value;
}

// bool has_wechat_mini_program = 23;
inline void UserSignInResponse_Detail::clear_has_wechat_mini_program() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.has_wechat_mini_program_ = false;
}
inline bool UserSignInResponse_Detail::has_wechat_mini_program() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.Detail.has_wechat_mini_program)
  return _internal_has_wechat_mini_program();
}
inline void UserSignInResponse_Detail::set_has_wechat_mini_program(bool value) {
  _internal_set_has_wechat_mini_program(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.Detail.has_wechat_mini_program)
}
inline bool UserSignInResponse_Detail::_internal_has_wechat_mini_program() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.has_wechat_mini_program_;
}
inline void UserSignInResponse_Detail::_internal_set_has_wechat_mini_program(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.has_wechat_mini_program_ = value;
}

// bool has_facebook_oauth2 = 24;
inline void UserSignInResponse_Detail::clear_has_facebook_oauth2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.has_facebook_oauth2_ = false;
}
inline bool UserSignInResponse_Detail::has_facebook_oauth2() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.Detail.has_facebook_oauth2)
  return _internal_has_facebook_oauth2();
}
inline void UserSignInResponse_Detail::set_has_facebook_oauth2(bool value) {
  _internal_set_has_facebook_oauth2(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.Detail.has_facebook_oauth2)
}
inline bool UserSignInResponse_Detail::_internal_has_facebook_oauth2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.has_facebook_oauth2_;
}
inline void UserSignInResponse_Detail::_internal_set_has_facebook_oauth2(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.has_facebook_oauth2_ = value;
}

// -------------------------------------------------------------------

// UserSignInResponse_Permission

// string operation = 1;
inline void UserSignInResponse_Permission::clear_operation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.operation_.ClearToEmpty();
}
inline const std::string& UserSignInResponse_Permission::operation() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.Permission.operation)
  return _internal_operation();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInResponse_Permission::set_operation(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.operation_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.Permission.operation)
}
inline std::string* UserSignInResponse_Permission::mutable_operation() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_operation();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInResponse.Permission.operation)
  return _s;
}
inline const std::string& UserSignInResponse_Permission::_internal_operation() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.operation_.Get();
}
inline void UserSignInResponse_Permission::_internal_set_operation(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.operation_.Set(value, GetArena());
}
inline std::string* UserSignInResponse_Permission::_internal_mutable_operation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.operation_.Mutable( GetArena());
}
inline std::string* UserSignInResponse_Permission::release_operation() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignInResponse.Permission.operation)
  return _impl_.operation_.Release();
}
inline void UserSignInResponse_Permission::set_allocated_operation(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.operation_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.operation_.IsDefault()) {
          _impl_.operation_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignInResponse.Permission.operation)
}

// string resource_type = 2;
inline void UserSignInResponse_Permission::clear_resource_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resource_type_.ClearToEmpty();
}
inline const std::string& UserSignInResponse_Permission::resource_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.Permission.resource_type)
  return _internal_resource_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInResponse_Permission::set_resource_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resource_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.Permission.resource_type)
}
inline std::string* UserSignInResponse_Permission::mutable_resource_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_resource_type();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInResponse.Permission.resource_type)
  return _s;
}
inline const std::string& UserSignInResponse_Permission::_internal_resource_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resource_type_.Get();
}
inline void UserSignInResponse_Permission::_internal_set_resource_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resource_type_.Set(value, GetArena());
}
inline std::string* UserSignInResponse_Permission::_internal_mutable_resource_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.resource_type_.Mutable( GetArena());
}
inline std::string* UserSignInResponse_Permission::release_resource_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignInResponse.Permission.resource_type)
  return _impl_.resource_type_.Release();
}
inline void UserSignInResponse_Permission::set_allocated_resource_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resource_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.resource_type_.IsDefault()) {
          _impl_.resource_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignInResponse.Permission.resource_type)
}

// optional uint64 resource_id = 3;
inline bool UserSignInResponse_Permission::has_resource_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void UserSignInResponse_Permission::clear_resource_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resource_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t UserSignInResponse_Permission::resource_id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.Permission.resource_id)
  return _internal_resource_id();
}
inline void UserSignInResponse_Permission::set_resource_id(::uint64_t value) {
  _internal_set_resource_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.Permission.resource_id)
}
inline ::uint64_t UserSignInResponse_Permission::_internal_resource_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resource_id_;
}
inline void UserSignInResponse_Permission::_internal_set_resource_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.resource_id_ = value;
}

// -------------------------------------------------------------------

// UserSignInResponse_Menu

// string label = 1;
inline void UserSignInResponse_Menu::clear_label() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& UserSignInResponse_Menu::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.Menu.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInResponse_Menu::set_label(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.Menu.label)
}
inline std::string* UserSignInResponse_Menu::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInResponse.Menu.label)
  return _s;
}
inline const std::string& UserSignInResponse_Menu::_internal_label() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.label_.Get();
}
inline void UserSignInResponse_Menu::_internal_set_label(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.label_.Set(value, GetArena());
}
inline std::string* UserSignInResponse_Menu::_internal_mutable_label() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* UserSignInResponse_Menu::release_label() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignInResponse.Menu.label)
  return _impl_.label_.Release();
}
inline void UserSignInResponse_Menu::set_allocated_label(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignInResponse.Menu.label)
}

// string to = 2;
inline void UserSignInResponse_Menu::clear_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.to_.ClearToEmpty();
}
inline const std::string& UserSignInResponse_Menu::to() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.Menu.to)
  return _internal_to();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInResponse_Menu::set_to(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.to_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.Menu.to)
}
inline std::string* UserSignInResponse_Menu::mutable_to() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_to();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInResponse.Menu.to)
  return _s;
}
inline const std::string& UserSignInResponse_Menu::_internal_to() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.to_.Get();
}
inline void UserSignInResponse_Menu::_internal_set_to(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.to_.Set(value, GetArena());
}
inline std::string* UserSignInResponse_Menu::_internal_mutable_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.to_.Mutable( GetArena());
}
inline std::string* UserSignInResponse_Menu::release_to() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignInResponse.Menu.to)
  return _impl_.to_.Release();
}
inline void UserSignInResponse_Menu::set_allocated_to(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.to_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.to_.IsDefault()) {
          _impl_.to_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignInResponse.Menu.to)
}

// optional string icon = 3;
inline bool UserSignInResponse_Menu::has_icon() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void UserSignInResponse_Menu::clear_icon() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.icon_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& UserSignInResponse_Menu::icon() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.Menu.icon)
  return _internal_icon();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInResponse_Menu::set_icon(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.icon_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.Menu.icon)
}
inline std::string* UserSignInResponse_Menu::mutable_icon() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_icon();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInResponse.Menu.icon)
  return _s;
}
inline const std::string& UserSignInResponse_Menu::_internal_icon() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.icon_.Get();
}
inline void UserSignInResponse_Menu::_internal_set_icon(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.icon_.Set(value, GetArena());
}
inline std::string* UserSignInResponse_Menu::_internal_mutable_icon() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.icon_.Mutable( GetArena());
}
inline std::string* UserSignInResponse_Menu::release_icon() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignInResponse.Menu.icon)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.icon_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.icon_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void UserSignInResponse_Menu::set_allocated_icon(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.icon_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.icon_.IsDefault()) {
          _impl_.icon_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignInResponse.Menu.icon)
}

// repeated .palm.balsam.v1.UserSignInResponse.Menu menus = 9;
inline int UserSignInResponse_Menu::_internal_menus_size() const {
  return _internal_menus().size();
}
inline int UserSignInResponse_Menu::menus_size() const {
  return _internal_menus_size();
}
inline void UserSignInResponse_Menu::clear_menus() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.menus_.Clear();
}
inline ::palm::balsam::v1::UserSignInResponse_Menu* UserSignInResponse_Menu::mutable_menus(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInResponse.Menu.menus)
  return _internal_mutable_menus()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserSignInResponse_Menu>* UserSignInResponse_Menu::mutable_menus()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.UserSignInResponse.Menu.menus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_menus();
}
inline const ::palm::balsam::v1::UserSignInResponse_Menu& UserSignInResponse_Menu::menus(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.Menu.menus)
  return _internal_menus().Get(index);
}
inline ::palm::balsam::v1::UserSignInResponse_Menu* UserSignInResponse_Menu::add_menus() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::balsam::v1::UserSignInResponse_Menu* _add = _internal_mutable_menus()->Add();
  // @@protoc_insertion_point(field_add:palm.balsam.v1.UserSignInResponse.Menu.menus)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserSignInResponse_Menu>& UserSignInResponse_Menu::menus() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.UserSignInResponse.Menu.menus)
  return _internal_menus();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserSignInResponse_Menu>&
UserSignInResponse_Menu::_internal_menus() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.menus_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserSignInResponse_Menu>*
UserSignInResponse_Menu::_internal_mutable_menus() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.menus_;
}

// -------------------------------------------------------------------

// UserSignInResponse

// string token = 1;
inline void UserSignInResponse::clear_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.ClearToEmpty();
}
inline const std::string& UserSignInResponse::token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.token)
  return _internal_token();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UserSignInResponse::set_token(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.token)
}
inline std::string* UserSignInResponse::mutable_token() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_token();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInResponse.token)
  return _s;
}
inline const std::string& UserSignInResponse::_internal_token() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.token_.Get();
}
inline void UserSignInResponse::_internal_set_token(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.token_.Set(value, GetArena());
}
inline std::string* UserSignInResponse::_internal_mutable_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.token_.Mutable( GetArena());
}
inline std::string* UserSignInResponse::release_token() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignInResponse.token)
  return _impl_.token_.Release();
}
inline void UserSignInResponse::set_allocated_token(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.token_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.token_.IsDefault()) {
          _impl_.token_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignInResponse.token)
}

// .palm.balsam.v1.UserSignInResponse.Detail detail = 2;
inline bool UserSignInResponse::has_detail() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.detail_ != nullptr);
  return value;
}
inline void UserSignInResponse::clear_detail() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.detail_ != nullptr) _impl_.detail_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::balsam::v1::UserSignInResponse_Detail& UserSignInResponse::_internal_detail() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::UserSignInResponse_Detail* p = _impl_.detail_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::UserSignInResponse_Detail&>(::palm::balsam::v1::_UserSignInResponse_Detail_default_instance_);
}
inline const ::palm::balsam::v1::UserSignInResponse_Detail& UserSignInResponse::detail() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.detail)
  return _internal_detail();
}
inline void UserSignInResponse::unsafe_arena_set_allocated_detail(::palm::balsam::v1::UserSignInResponse_Detail* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.detail_);
  }
  _impl_.detail_ = reinterpret_cast<::palm::balsam::v1::UserSignInResponse_Detail*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.UserSignInResponse.detail)
}
inline ::palm::balsam::v1::UserSignInResponse_Detail* UserSignInResponse::release_detail() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::UserSignInResponse_Detail* released = _impl_.detail_;
  _impl_.detail_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::UserSignInResponse_Detail* UserSignInResponse::unsafe_arena_release_detail() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.UserSignInResponse.detail)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::UserSignInResponse_Detail* temp = _impl_.detail_;
  _impl_.detail_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::UserSignInResponse_Detail* UserSignInResponse::_internal_mutable_detail() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.detail_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::UserSignInResponse_Detail>(GetArena());
    _impl_.detail_ = reinterpret_cast<::palm::balsam::v1::UserSignInResponse_Detail*>(p);
  }
  return _impl_.detail_;
}
inline ::palm::balsam::v1::UserSignInResponse_Detail* UserSignInResponse::mutable_detail() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::UserSignInResponse_Detail* _msg = _internal_mutable_detail();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInResponse.detail)
  return _msg;
}
inline void UserSignInResponse::set_allocated_detail(::palm::balsam::v1::UserSignInResponse_Detail* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::UserSignInResponse_Detail*>(_impl_.detail_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::UserSignInResponse_Detail*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.detail_ = reinterpret_cast<::palm::balsam::v1::UserSignInResponse_Detail*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.UserSignInResponse.detail)
}

// repeated string roles = 11;
inline int UserSignInResponse::_internal_roles_size() const {
  return _internal_roles().size();
}
inline int UserSignInResponse::roles_size() const {
  return _internal_roles_size();
}
inline void UserSignInResponse::clear_roles() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.roles_.Clear();
}
inline std::string* UserSignInResponse::add_roles()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_roles()->Add();
  // @@protoc_insertion_point(field_add_mutable:palm.balsam.v1.UserSignInResponse.roles)
  return _s;
}
inline const std::string& UserSignInResponse::roles(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.roles)
  return _internal_roles().Get(index);
}
inline std::string* UserSignInResponse::mutable_roles(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInResponse.roles)
  return _internal_mutable_roles()->Mutable(index);
}
inline void UserSignInResponse::set_roles(int index, const std::string& value) {
  _internal_mutable_roles()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.roles)
}
inline void UserSignInResponse::set_roles(int index, std::string&& value) {
  _internal_mutable_roles()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.roles)
}
inline void UserSignInResponse::set_roles(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_roles()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:palm.balsam.v1.UserSignInResponse.roles)
}
inline void UserSignInResponse::set_roles(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_roles()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:palm.balsam.v1.UserSignInResponse.roles)
}
inline void UserSignInResponse::set_roles(int index, absl::string_view value) {
  _internal_mutable_roles()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:palm.balsam.v1.UserSignInResponse.roles)
}
inline void UserSignInResponse::add_roles(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_roles()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:palm.balsam.v1.UserSignInResponse.roles)
}
inline void UserSignInResponse::add_roles(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_roles()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:palm.balsam.v1.UserSignInResponse.roles)
}
inline void UserSignInResponse::add_roles(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_roles()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:palm.balsam.v1.UserSignInResponse.roles)
}
inline void UserSignInResponse::add_roles(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_roles()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:palm.balsam.v1.UserSignInResponse.roles)
}
inline void UserSignInResponse::add_roles(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_roles()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:palm.balsam.v1.UserSignInResponse.roles)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
UserSignInResponse::roles() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.UserSignInResponse.roles)
  return _internal_roles();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
UserSignInResponse::mutable_roles() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.UserSignInResponse.roles)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_roles();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
UserSignInResponse::_internal_roles() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.roles_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
UserSignInResponse::_internal_mutable_roles() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.roles_;
}

// repeated .palm.balsam.v1.UserSignInResponse.Permission permissions = 12;
inline int UserSignInResponse::_internal_permissions_size() const {
  return _internal_permissions().size();
}
inline int UserSignInResponse::permissions_size() const {
  return _internal_permissions_size();
}
inline void UserSignInResponse::clear_permissions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.permissions_.Clear();
}
inline ::palm::balsam::v1::UserSignInResponse_Permission* UserSignInResponse::mutable_permissions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInResponse.permissions)
  return _internal_mutable_permissions()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserSignInResponse_Permission>* UserSignInResponse::mutable_permissions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.UserSignInResponse.permissions)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_permissions();
}
inline const ::palm::balsam::v1::UserSignInResponse_Permission& UserSignInResponse::permissions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.permissions)
  return _internal_permissions().Get(index);
}
inline ::palm::balsam::v1::UserSignInResponse_Permission* UserSignInResponse::add_permissions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::balsam::v1::UserSignInResponse_Permission* _add = _internal_mutable_permissions()->Add();
  // @@protoc_insertion_point(field_add:palm.balsam.v1.UserSignInResponse.permissions)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserSignInResponse_Permission>& UserSignInResponse::permissions() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.UserSignInResponse.permissions)
  return _internal_permissions();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserSignInResponse_Permission>&
UserSignInResponse::_internal_permissions() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.permissions_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserSignInResponse_Permission>*
UserSignInResponse::_internal_mutable_permissions() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.permissions_;
}

// repeated .palm.balsam.v1.UserSignInResponse.Menu menus = 13;
inline int UserSignInResponse::_internal_menus_size() const {
  return _internal_menus().size();
}
inline int UserSignInResponse::menus_size() const {
  return _internal_menus_size();
}
inline void UserSignInResponse::clear_menus() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.menus_.Clear();
}
inline ::palm::balsam::v1::UserSignInResponse_Menu* UserSignInResponse::mutable_menus(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.UserSignInResponse.menus)
  return _internal_mutable_menus()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserSignInResponse_Menu>* UserSignInResponse::mutable_menus()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.UserSignInResponse.menus)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_menus();
}
inline const ::palm::balsam::v1::UserSignInResponse_Menu& UserSignInResponse::menus(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.menus)
  return _internal_menus().Get(index);
}
inline ::palm::balsam::v1::UserSignInResponse_Menu* UserSignInResponse::add_menus() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::balsam::v1::UserSignInResponse_Menu* _add = _internal_mutable_menus()->Add();
  // @@protoc_insertion_point(field_add:palm.balsam.v1.UserSignInResponse.menus)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserSignInResponse_Menu>& UserSignInResponse::menus() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.UserSignInResponse.menus)
  return _internal_menus();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserSignInResponse_Menu>&
UserSignInResponse::_internal_menus() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.menus_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::UserSignInResponse_Menu>*
UserSignInResponse::_internal_mutable_menus() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.menus_;
}

// bool is_administrator = 98;
inline void UserSignInResponse::clear_is_administrator() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.is_administrator_ = false;
}
inline bool UserSignInResponse::is_administrator() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.is_administrator)
  return _internal_is_administrator();
}
inline void UserSignInResponse::set_is_administrator(bool value) {
  _internal_set_is_administrator(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.is_administrator)
}
inline bool UserSignInResponse::_internal_is_administrator() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_administrator_;
}
inline void UserSignInResponse::_internal_set_is_administrator(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_administrator_ = value;
}

// bool is_root = 99;
inline void UserSignInResponse::clear_is_root() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.is_root_ = false;
}
inline bool UserSignInResponse::is_root() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.UserSignInResponse.is_root)
  return _internal_is_root();
}
inline void UserSignInResponse::set_is_root(bool value) {
  _internal_set_is_root(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.UserSignInResponse.is_root)
}
inline bool UserSignInResponse::_internal_is_root() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.is_root_;
}
inline void UserSignInResponse::_internal_set_is_root(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.is_root_ = value;
}

// -------------------------------------------------------------------

// GoogleOauth2UserBySubjectRequest

// string subject = 1;
inline void GoogleOauth2UserBySubjectRequest::clear_subject() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subject_.ClearToEmpty();
}
inline const std::string& GoogleOauth2UserBySubjectRequest::subject() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.GoogleOauth2UserBySubjectRequest.subject)
  return _internal_subject();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GoogleOauth2UserBySubjectRequest::set_subject(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subject_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.GoogleOauth2UserBySubjectRequest.subject)
}
inline std::string* GoogleOauth2UserBySubjectRequest::mutable_subject() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subject();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.GoogleOauth2UserBySubjectRequest.subject)
  return _s;
}
inline const std::string& GoogleOauth2UserBySubjectRequest::_internal_subject() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subject_.Get();
}
inline void GoogleOauth2UserBySubjectRequest::_internal_set_subject(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subject_.Set(value, GetArena());
}
inline std::string* GoogleOauth2UserBySubjectRequest::_internal_mutable_subject() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.subject_.Mutable( GetArena());
}
inline std::string* GoogleOauth2UserBySubjectRequest::release_subject() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.GoogleOauth2UserBySubjectRequest.subject)
  return _impl_.subject_.Release();
}
inline void GoogleOauth2UserBySubjectRequest::set_allocated_subject(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subject_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subject_.IsDefault()) {
          _impl_.subject_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.GoogleOauth2UserBySubjectRequest.subject)
}

// -------------------------------------------------------------------

// GoogleOauth2UserIndexResponse_Item

// uint64 id = 1;
inline void GoogleOauth2UserIndexResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t GoogleOauth2UserIndexResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.id)
  return _internal_id();
}
inline void GoogleOauth2UserIndexResponse_Item::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.id)
}
inline ::uint64_t GoogleOauth2UserIndexResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void GoogleOauth2UserIndexResponse_Item::_internal_set_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// uint64 user_id = 2;
inline void GoogleOauth2UserIndexResponse_Item::clear_user_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_id_ = ::uint64_t{0u};
}
inline ::uint64_t GoogleOauth2UserIndexResponse_Item::user_id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.user_id)
  return _internal_user_id();
}
inline void GoogleOauth2UserIndexResponse_Item::set_user_id(::uint64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.user_id)
}
inline ::uint64_t GoogleOauth2UserIndexResponse_Item::_internal_user_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_id_;
}
inline void GoogleOauth2UserIndexResponse_Item::_internal_set_user_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_id_ = value;
}

// string subject = 3;
inline void GoogleOauth2UserIndexResponse_Item::clear_subject() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subject_.ClearToEmpty();
}
inline const std::string& GoogleOauth2UserIndexResponse_Item::subject() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.subject)
  return _internal_subject();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GoogleOauth2UserIndexResponse_Item::set_subject(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subject_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.subject)
}
inline std::string* GoogleOauth2UserIndexResponse_Item::mutable_subject() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subject();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.subject)
  return _s;
}
inline const std::string& GoogleOauth2UserIndexResponse_Item::_internal_subject() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subject_.Get();
}
inline void GoogleOauth2UserIndexResponse_Item::_internal_set_subject(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subject_.Set(value, GetArena());
}
inline std::string* GoogleOauth2UserIndexResponse_Item::_internal_mutable_subject() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.subject_.Mutable( GetArena());
}
inline std::string* GoogleOauth2UserIndexResponse_Item::release_subject() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.subject)
  return _impl_.subject_.Release();
}
inline void GoogleOauth2UserIndexResponse_Item::set_allocated_subject(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subject_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subject_.IsDefault()) {
          _impl_.subject_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.subject)
}

// optional string email = 4;
inline bool GoogleOauth2UserIndexResponse_Item::has_email() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void GoogleOauth2UserIndexResponse_Item::clear_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& GoogleOauth2UserIndexResponse_Item::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GoogleOauth2UserIndexResponse_Item::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.email)
}
inline std::string* GoogleOauth2UserIndexResponse_Item::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.email)
  return _s;
}
inline const std::string& GoogleOauth2UserIndexResponse_Item::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.email_.Get();
}
inline void GoogleOauth2UserIndexResponse_Item::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.email_.Set(value, GetArena());
}
inline std::string* GoogleOauth2UserIndexResponse_Item::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* GoogleOauth2UserIndexResponse_Item::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.email)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.email_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.email_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void GoogleOauth2UserIndexResponse_Item::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.email_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.email)
}

// bool email_verified = 5;
inline void GoogleOauth2UserIndexResponse_Item::clear_email_verified() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_verified_ = false;
}
inline bool GoogleOauth2UserIndexResponse_Item::email_verified() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.email_verified)
  return _internal_email_verified();
}
inline void GoogleOauth2UserIndexResponse_Item::set_email_verified(bool value) {
  _internal_set_email_verified(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.email_verified)
}
inline bool GoogleOauth2UserIndexResponse_Item::_internal_email_verified() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.email_verified_;
}
inline void GoogleOauth2UserIndexResponse_Item::_internal_set_email_verified(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_verified_ = value;
}

// optional string name = 6;
inline bool GoogleOauth2UserIndexResponse_Item::has_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void GoogleOauth2UserIndexResponse_Item::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& GoogleOauth2UserIndexResponse_Item::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GoogleOauth2UserIndexResponse_Item::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.name)
}
inline std::string* GoogleOauth2UserIndexResponse_Item::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.name)
  return _s;
}
inline const std::string& GoogleOauth2UserIndexResponse_Item::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void GoogleOauth2UserIndexResponse_Item::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* GoogleOauth2UserIndexResponse_Item::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* GoogleOauth2UserIndexResponse_Item::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.name)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.name_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void GoogleOauth2UserIndexResponse_Item::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.name)
}

// optional string picture = 7;
inline bool GoogleOauth2UserIndexResponse_Item::has_picture() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void GoogleOauth2UserIndexResponse_Item::clear_picture() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.picture_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& GoogleOauth2UserIndexResponse_Item::picture() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.picture)
  return _internal_picture();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GoogleOauth2UserIndexResponse_Item::set_picture(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.picture_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.picture)
}
inline std::string* GoogleOauth2UserIndexResponse_Item::mutable_picture() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_picture();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.picture)
  return _s;
}
inline const std::string& GoogleOauth2UserIndexResponse_Item::_internal_picture() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.picture_.Get();
}
inline void GoogleOauth2UserIndexResponse_Item::_internal_set_picture(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.picture_.Set(value, GetArena());
}
inline std::string* GoogleOauth2UserIndexResponse_Item::_internal_mutable_picture() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.picture_.Mutable( GetArena());
}
inline std::string* GoogleOauth2UserIndexResponse_Item::release_picture() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.picture)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.picture_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.picture_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void GoogleOauth2UserIndexResponse_Item::set_allocated_picture(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.picture_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.picture_.IsDefault()) {
          _impl_.picture_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.picture)
}

// optional string locale = 8;
inline bool GoogleOauth2UserIndexResponse_Item::has_locale() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void GoogleOauth2UserIndexResponse_Item::clear_locale() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.locale_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& GoogleOauth2UserIndexResponse_Item::locale() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.locale)
  return _internal_locale();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GoogleOauth2UserIndexResponse_Item::set_locale(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.locale_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.locale)
}
inline std::string* GoogleOauth2UserIndexResponse_Item::mutable_locale() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_locale();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.locale)
  return _s;
}
inline const std::string& GoogleOauth2UserIndexResponse_Item::_internal_locale() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.locale_.Get();
}
inline void GoogleOauth2UserIndexResponse_Item::_internal_set_locale(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.locale_.Set(value, GetArena());
}
inline std::string* GoogleOauth2UserIndexResponse_Item::_internal_mutable_locale() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.locale_.Mutable( GetArena());
}
inline std::string* GoogleOauth2UserIndexResponse_Item::release_locale() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.locale)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.locale_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.locale_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void GoogleOauth2UserIndexResponse_Item::set_allocated_locale(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.locale_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.locale_.IsDefault()) {
          _impl_.locale_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.locale)
}

// optional .google.protobuf.Timestamp deleted_at = 9;
inline bool GoogleOauth2UserIndexResponse_Item::has_deleted_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.deleted_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& GoogleOauth2UserIndexResponse_Item::_internal_deleted_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.deleted_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& GoogleOauth2UserIndexResponse_Item::deleted_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.deleted_at)
  return _internal_deleted_at();
}
inline void GoogleOauth2UserIndexResponse_Item::unsafe_arena_set_allocated_deleted_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deleted_at_);
  }
  _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.deleted_at)
}
inline ::google::protobuf::Timestamp* GoogleOauth2UserIndexResponse_Item::release_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::Timestamp* released = _impl_.deleted_at_;
  _impl_.deleted_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* GoogleOauth2UserIndexResponse_Item::unsafe_arena_release_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.deleted_at)

  _impl_._has_bits_[0] &= ~0x00000010u;
  ::google::protobuf::Timestamp* temp = _impl_.deleted_at_;
  _impl_.deleted_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* GoogleOauth2UserIndexResponse_Item::_internal_mutable_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000010u;
  if (_impl_.deleted_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.deleted_at_;
}
inline ::google::protobuf::Timestamp* GoogleOauth2UserIndexResponse_Item::mutable_deleted_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_deleted_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.deleted_at)
  return _msg;
}
inline void GoogleOauth2UserIndexResponse_Item::set_allocated_deleted_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deleted_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }

  _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.deleted_at)
}

// .google.protobuf.Timestamp updated_at = 10;
inline bool GoogleOauth2UserIndexResponse_Item::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& GoogleOauth2UserIndexResponse_Item::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& GoogleOauth2UserIndexResponse_Item::updated_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.updated_at)
  return _internal_updated_at();
}
inline void GoogleOauth2UserIndexResponse_Item::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.updated_at)
}
inline ::google::protobuf::Timestamp* GoogleOauth2UserIndexResponse_Item::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* GoogleOauth2UserIndexResponse_Item::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.updated_at)

  _impl_._has_bits_[0] &= ~0x00000020u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* GoogleOauth2UserIndexResponse_Item::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000020u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* GoogleOauth2UserIndexResponse_Item::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.updated_at)
  return _msg;
}
inline void GoogleOauth2UserIndexResponse_Item::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.updated_at)
}

// -------------------------------------------------------------------

// GoogleOauth2UserIndexResponse

// repeated .palm.balsam.v1.GoogleOauth2UserIndexResponse.Item items = 1;
inline int GoogleOauth2UserIndexResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int GoogleOauth2UserIndexResponse::items_size() const {
  return _internal_items_size();
}
inline void GoogleOauth2UserIndexResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::balsam::v1::GoogleOauth2UserIndexResponse_Item* GoogleOauth2UserIndexResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.GoogleOauth2UserIndexResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::GoogleOauth2UserIndexResponse_Item>* GoogleOauth2UserIndexResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.GoogleOauth2UserIndexResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::balsam::v1::GoogleOauth2UserIndexResponse_Item& GoogleOauth2UserIndexResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.GoogleOauth2UserIndexResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::balsam::v1::GoogleOauth2UserIndexResponse_Item* GoogleOauth2UserIndexResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::balsam::v1::GoogleOauth2UserIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.balsam.v1.GoogleOauth2UserIndexResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::GoogleOauth2UserIndexResponse_Item>& GoogleOauth2UserIndexResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.GoogleOauth2UserIndexResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::GoogleOauth2UserIndexResponse_Item>&
GoogleOauth2UserIndexResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::GoogleOauth2UserIndexResponse_Item>*
GoogleOauth2UserIndexResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// .palm.balsam.v1.Pagination pagination = 2;
inline bool GoogleOauth2UserIndexResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline void GoogleOauth2UserIndexResponse::clear_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::balsam::v1::Pagination& GoogleOauth2UserIndexResponse::_internal_pagination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::Pagination* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::Pagination&>(::palm::balsam::v1::_Pagination_default_instance_);
}
inline const ::palm::balsam::v1::Pagination& GoogleOauth2UserIndexResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.GoogleOauth2UserIndexResponse.pagination)
  return _internal_pagination();
}
inline void GoogleOauth2UserIndexResponse::unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.GoogleOauth2UserIndexResponse.pagination)
}
inline ::palm::balsam::v1::Pagination* GoogleOauth2UserIndexResponse::release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::Pagination* GoogleOauth2UserIndexResponse::unsafe_arena_release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.GoogleOauth2UserIndexResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::Pagination* GoogleOauth2UserIndexResponse::_internal_mutable_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::Pagination>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(p);
  }
  return _impl_.pagination_;
}
inline ::palm::balsam::v1::Pagination* GoogleOauth2UserIndexResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::Pagination* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.GoogleOauth2UserIndexResponse.pagination)
  return _msg;
}
inline void GoogleOauth2UserIndexResponse::set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::Pagination*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::Pagination*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.GoogleOauth2UserIndexResponse.pagination)
}

// -------------------------------------------------------------------

// WechatByUnionIdRequest

// string union_id = 1;
inline void WechatByUnionIdRequest::clear_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.union_id_.ClearToEmpty();
}
inline const std::string& WechatByUnionIdRequest::union_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatByUnionIdRequest.union_id)
  return _internal_union_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatByUnionIdRequest::set_union_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.union_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatByUnionIdRequest.union_id)
}
inline std::string* WechatByUnionIdRequest::mutable_union_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_union_id();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatByUnionIdRequest.union_id)
  return _s;
}
inline const std::string& WechatByUnionIdRequest::_internal_union_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.union_id_.Get();
}
inline void WechatByUnionIdRequest::_internal_set_union_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.union_id_.Set(value, GetArena());
}
inline std::string* WechatByUnionIdRequest::_internal_mutable_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.union_id_.Mutable( GetArena());
}
inline std::string* WechatByUnionIdRequest::release_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatByUnionIdRequest.union_id)
  return _impl_.union_id_.Release();
}
inline void WechatByUnionIdRequest::set_allocated_union_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.union_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.union_id_.IsDefault()) {
          _impl_.union_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatByUnionIdRequest.union_id)
}

// -------------------------------------------------------------------

// WechatByAppIdAndOpenIdRequest

// string app_id = 1;
inline void WechatByAppIdAndOpenIdRequest::clear_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.ClearToEmpty();
}
inline const std::string& WechatByAppIdAndOpenIdRequest::app_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatByAppIdAndOpenIdRequest.app_id)
  return _internal_app_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatByAppIdAndOpenIdRequest::set_app_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatByAppIdAndOpenIdRequest.app_id)
}
inline std::string* WechatByAppIdAndOpenIdRequest::mutable_app_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_app_id();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatByAppIdAndOpenIdRequest.app_id)
  return _s;
}
inline const std::string& WechatByAppIdAndOpenIdRequest::_internal_app_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.app_id_.Get();
}
inline void WechatByAppIdAndOpenIdRequest::_internal_set_app_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(value, GetArena());
}
inline std::string* WechatByAppIdAndOpenIdRequest::_internal_mutable_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.app_id_.Mutable( GetArena());
}
inline std::string* WechatByAppIdAndOpenIdRequest::release_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatByAppIdAndOpenIdRequest.app_id)
  return _impl_.app_id_.Release();
}
inline void WechatByAppIdAndOpenIdRequest::set_allocated_app_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.app_id_.IsDefault()) {
          _impl_.app_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatByAppIdAndOpenIdRequest.app_id)
}

// string open_id = 2;
inline void WechatByAppIdAndOpenIdRequest::clear_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.ClearToEmpty();
}
inline const std::string& WechatByAppIdAndOpenIdRequest::open_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatByAppIdAndOpenIdRequest.open_id)
  return _internal_open_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatByAppIdAndOpenIdRequest::set_open_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatByAppIdAndOpenIdRequest.open_id)
}
inline std::string* WechatByAppIdAndOpenIdRequest::mutable_open_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_open_id();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatByAppIdAndOpenIdRequest.open_id)
  return _s;
}
inline const std::string& WechatByAppIdAndOpenIdRequest::_internal_open_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.open_id_.Get();
}
inline void WechatByAppIdAndOpenIdRequest::_internal_set_open_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(value, GetArena());
}
inline std::string* WechatByAppIdAndOpenIdRequest::_internal_mutable_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.open_id_.Mutable( GetArena());
}
inline std::string* WechatByAppIdAndOpenIdRequest::release_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatByAppIdAndOpenIdRequest.open_id)
  return _impl_.open_id_.Release();
}
inline void WechatByAppIdAndOpenIdRequest::set_allocated_open_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.open_id_.IsDefault()) {
          _impl_.open_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatByAppIdAndOpenIdRequest.open_id)
}

// -------------------------------------------------------------------

// WechatOauth2UserIndexResponse_Item

// uint64 id = 1;
inline void WechatOauth2UserIndexResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t WechatOauth2UserIndexResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.id)
  return _internal_id();
}
inline void WechatOauth2UserIndexResponse_Item::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.id)
}
inline ::uint64_t WechatOauth2UserIndexResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void WechatOauth2UserIndexResponse_Item::_internal_set_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// uint64 user_id = 2;
inline void WechatOauth2UserIndexResponse_Item::clear_user_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_id_ = ::uint64_t{0u};
}
inline ::uint64_t WechatOauth2UserIndexResponse_Item::user_id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.user_id)
  return _internal_user_id();
}
inline void WechatOauth2UserIndexResponse_Item::set_user_id(::uint64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.user_id)
}
inline ::uint64_t WechatOauth2UserIndexResponse_Item::_internal_user_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_id_;
}
inline void WechatOauth2UserIndexResponse_Item::_internal_set_user_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_id_ = value;
}

// string union_id = 3;
inline void WechatOauth2UserIndexResponse_Item::clear_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.union_id_.ClearToEmpty();
}
inline const std::string& WechatOauth2UserIndexResponse_Item::union_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.union_id)
  return _internal_union_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatOauth2UserIndexResponse_Item::set_union_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.union_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.union_id)
}
inline std::string* WechatOauth2UserIndexResponse_Item::mutable_union_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_union_id();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.union_id)
  return _s;
}
inline const std::string& WechatOauth2UserIndexResponse_Item::_internal_union_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.union_id_.Get();
}
inline void WechatOauth2UserIndexResponse_Item::_internal_set_union_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.union_id_.Set(value, GetArena());
}
inline std::string* WechatOauth2UserIndexResponse_Item::_internal_mutable_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.union_id_.Mutable( GetArena());
}
inline std::string* WechatOauth2UserIndexResponse_Item::release_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.union_id)
  return _impl_.union_id_.Release();
}
inline void WechatOauth2UserIndexResponse_Item::set_allocated_union_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.union_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.union_id_.IsDefault()) {
          _impl_.union_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.union_id)
}

// string app_id = 4;
inline void WechatOauth2UserIndexResponse_Item::clear_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.ClearToEmpty();
}
inline const std::string& WechatOauth2UserIndexResponse_Item::app_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.app_id)
  return _internal_app_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatOauth2UserIndexResponse_Item::set_app_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.app_id)
}
inline std::string* WechatOauth2UserIndexResponse_Item::mutable_app_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_app_id();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.app_id)
  return _s;
}
inline const std::string& WechatOauth2UserIndexResponse_Item::_internal_app_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.app_id_.Get();
}
inline void WechatOauth2UserIndexResponse_Item::_internal_set_app_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(value, GetArena());
}
inline std::string* WechatOauth2UserIndexResponse_Item::_internal_mutable_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.app_id_.Mutable( GetArena());
}
inline std::string* WechatOauth2UserIndexResponse_Item::release_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.app_id)
  return _impl_.app_id_.Release();
}
inline void WechatOauth2UserIndexResponse_Item::set_allocated_app_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.app_id_.IsDefault()) {
          _impl_.app_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.app_id)
}

// string open_id = 5;
inline void WechatOauth2UserIndexResponse_Item::clear_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.ClearToEmpty();
}
inline const std::string& WechatOauth2UserIndexResponse_Item::open_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.open_id)
  return _internal_open_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatOauth2UserIndexResponse_Item::set_open_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.open_id)
}
inline std::string* WechatOauth2UserIndexResponse_Item::mutable_open_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_open_id();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.open_id)
  return _s;
}
inline const std::string& WechatOauth2UserIndexResponse_Item::_internal_open_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.open_id_.Get();
}
inline void WechatOauth2UserIndexResponse_Item::_internal_set_open_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(value, GetArena());
}
inline std::string* WechatOauth2UserIndexResponse_Item::_internal_mutable_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.open_id_.Mutable( GetArena());
}
inline std::string* WechatOauth2UserIndexResponse_Item::release_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.open_id)
  return _impl_.open_id_.Release();
}
inline void WechatOauth2UserIndexResponse_Item::set_allocated_open_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.open_id_.IsDefault()) {
          _impl_.open_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.open_id)
}

// string nickname = 6;
inline void WechatOauth2UserIndexResponse_Item::clear_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.ClearToEmpty();
}
inline const std::string& WechatOauth2UserIndexResponse_Item::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatOauth2UserIndexResponse_Item::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.nickname)
}
inline std::string* WechatOauth2UserIndexResponse_Item::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.nickname)
  return _s;
}
inline const std::string& WechatOauth2UserIndexResponse_Item::_internal_nickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nickname_.Get();
}
inline void WechatOauth2UserIndexResponse_Item::_internal_set_nickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* WechatOauth2UserIndexResponse_Item::_internal_mutable_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* WechatOauth2UserIndexResponse_Item::release_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.nickname)
  return _impl_.nickname_.Release();
}
inline void WechatOauth2UserIndexResponse_Item::set_allocated_nickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.nickname)
}

// .palm.balsam.v1.WechatOauth2UserIndexResponse.Item.Sex sex = 7;
inline void WechatOauth2UserIndexResponse_Item::clear_sex() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.sex_ = 0;
}
inline ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Sex WechatOauth2UserIndexResponse_Item::sex() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.sex)
  return _internal_sex();
}
inline void WechatOauth2UserIndexResponse_Item::set_sex(::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Sex value) {
  _internal_set_sex(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.sex)
}
inline ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Sex WechatOauth2UserIndexResponse_Item::_internal_sex() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Sex>(_impl_.sex_);
}
inline void WechatOauth2UserIndexResponse_Item::_internal_set_sex(::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Sex value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.sex_ = value;
}

// string city = 8;
inline void WechatOauth2UserIndexResponse_Item::clear_city() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.city_.ClearToEmpty();
}
inline const std::string& WechatOauth2UserIndexResponse_Item::city() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.city)
  return _internal_city();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatOauth2UserIndexResponse_Item::set_city(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.city_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.city)
}
inline std::string* WechatOauth2UserIndexResponse_Item::mutable_city() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_city();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.city)
  return _s;
}
inline const std::string& WechatOauth2UserIndexResponse_Item::_internal_city() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.city_.Get();
}
inline void WechatOauth2UserIndexResponse_Item::_internal_set_city(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.city_.Set(value, GetArena());
}
inline std::string* WechatOauth2UserIndexResponse_Item::_internal_mutable_city() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.city_.Mutable( GetArena());
}
inline std::string* WechatOauth2UserIndexResponse_Item::release_city() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.city)
  return _impl_.city_.Release();
}
inline void WechatOauth2UserIndexResponse_Item::set_allocated_city(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.city_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.city_.IsDefault()) {
          _impl_.city_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.city)
}

// string province = 9;
inline void WechatOauth2UserIndexResponse_Item::clear_province() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.province_.ClearToEmpty();
}
inline const std::string& WechatOauth2UserIndexResponse_Item::province() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.province)
  return _internal_province();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatOauth2UserIndexResponse_Item::set_province(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.province_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.province)
}
inline std::string* WechatOauth2UserIndexResponse_Item::mutable_province() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_province();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.province)
  return _s;
}
inline const std::string& WechatOauth2UserIndexResponse_Item::_internal_province() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.province_.Get();
}
inline void WechatOauth2UserIndexResponse_Item::_internal_set_province(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.province_.Set(value, GetArena());
}
inline std::string* WechatOauth2UserIndexResponse_Item::_internal_mutable_province() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.province_.Mutable( GetArena());
}
inline std::string* WechatOauth2UserIndexResponse_Item::release_province() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.province)
  return _impl_.province_.Release();
}
inline void WechatOauth2UserIndexResponse_Item::set_allocated_province(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.province_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.province_.IsDefault()) {
          _impl_.province_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.province)
}

// string country = 10;
inline void WechatOauth2UserIndexResponse_Item::clear_country() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.country_.ClearToEmpty();
}
inline const std::string& WechatOauth2UserIndexResponse_Item::country() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.country)
  return _internal_country();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatOauth2UserIndexResponse_Item::set_country(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.country_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.country)
}
inline std::string* WechatOauth2UserIndexResponse_Item::mutable_country() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_country();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.country)
  return _s;
}
inline const std::string& WechatOauth2UserIndexResponse_Item::_internal_country() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.country_.Get();
}
inline void WechatOauth2UserIndexResponse_Item::_internal_set_country(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.country_.Set(value, GetArena());
}
inline std::string* WechatOauth2UserIndexResponse_Item::_internal_mutable_country() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.country_.Mutable( GetArena());
}
inline std::string* WechatOauth2UserIndexResponse_Item::release_country() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.country)
  return _impl_.country_.Release();
}
inline void WechatOauth2UserIndexResponse_Item::set_allocated_country(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.country_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.country_.IsDefault()) {
          _impl_.country_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.country)
}

// optional string head_img_url = 11;
inline bool WechatOauth2UserIndexResponse_Item::has_head_img_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void WechatOauth2UserIndexResponse_Item::clear_head_img_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.head_img_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& WechatOauth2UserIndexResponse_Item::head_img_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.head_img_url)
  return _internal_head_img_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatOauth2UserIndexResponse_Item::set_head_img_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.head_img_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.head_img_url)
}
inline std::string* WechatOauth2UserIndexResponse_Item::mutable_head_img_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_head_img_url();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.head_img_url)
  return _s;
}
inline const std::string& WechatOauth2UserIndexResponse_Item::_internal_head_img_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.head_img_url_.Get();
}
inline void WechatOauth2UserIndexResponse_Item::_internal_set_head_img_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.head_img_url_.Set(value, GetArena());
}
inline std::string* WechatOauth2UserIndexResponse_Item::_internal_mutable_head_img_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.head_img_url_.Mutable( GetArena());
}
inline std::string* WechatOauth2UserIndexResponse_Item::release_head_img_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.head_img_url)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.head_img_url_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.head_img_url_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void WechatOauth2UserIndexResponse_Item::set_allocated_head_img_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.head_img_url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.head_img_url_.IsDefault()) {
          _impl_.head_img_url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.head_img_url)
}

// repeated string privilege = 12;
inline int WechatOauth2UserIndexResponse_Item::_internal_privilege_size() const {
  return _internal_privilege().size();
}
inline int WechatOauth2UserIndexResponse_Item::privilege_size() const {
  return _internal_privilege_size();
}
inline void WechatOauth2UserIndexResponse_Item::clear_privilege() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.privilege_.Clear();
}
inline std::string* WechatOauth2UserIndexResponse_Item::add_privilege()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_privilege()->Add();
  // @@protoc_insertion_point(field_add_mutable:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.privilege)
  return _s;
}
inline const std::string& WechatOauth2UserIndexResponse_Item::privilege(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.privilege)
  return _internal_privilege().Get(index);
}
inline std::string* WechatOauth2UserIndexResponse_Item::mutable_privilege(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.privilege)
  return _internal_mutable_privilege()->Mutable(index);
}
inline void WechatOauth2UserIndexResponse_Item::set_privilege(int index, const std::string& value) {
  _internal_mutable_privilege()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.privilege)
}
inline void WechatOauth2UserIndexResponse_Item::set_privilege(int index, std::string&& value) {
  _internal_mutable_privilege()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.privilege)
}
inline void WechatOauth2UserIndexResponse_Item::set_privilege(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_privilege()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.privilege)
}
inline void WechatOauth2UserIndexResponse_Item::set_privilege(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_privilege()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.privilege)
}
inline void WechatOauth2UserIndexResponse_Item::set_privilege(int index, absl::string_view value) {
  _internal_mutable_privilege()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.privilege)
}
inline void WechatOauth2UserIndexResponse_Item::add_privilege(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_privilege()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.privilege)
}
inline void WechatOauth2UserIndexResponse_Item::add_privilege(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_privilege()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.privilege)
}
inline void WechatOauth2UserIndexResponse_Item::add_privilege(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_privilege()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.privilege)
}
inline void WechatOauth2UserIndexResponse_Item::add_privilege(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_privilege()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.privilege)
}
inline void WechatOauth2UserIndexResponse_Item::add_privilege(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_privilege()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.privilege)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
WechatOauth2UserIndexResponse_Item::privilege() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.privilege)
  return _internal_privilege();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
WechatOauth2UserIndexResponse_Item::mutable_privilege() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.privilege)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_privilege();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
WechatOauth2UserIndexResponse_Item::_internal_privilege() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.privilege_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
WechatOauth2UserIndexResponse_Item::_internal_mutable_privilege() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.privilege_;
}

// .palm.balsam.v1.WechatOauth2UserIndexResponse.Item.Lang lang = 13;
inline void WechatOauth2UserIndexResponse_Item::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_ = 0;
}
inline ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Lang WechatOauth2UserIndexResponse_Item::lang() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.lang)
  return _internal_lang();
}
inline void WechatOauth2UserIndexResponse_Item::set_lang(::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Lang value) {
  _internal_set_lang(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.lang)
}
inline ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Lang WechatOauth2UserIndexResponse_Item::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Lang>(_impl_.lang_);
}
inline void WechatOauth2UserIndexResponse_Item::_internal_set_lang(::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Lang value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_ = value;
}

// optional .google.protobuf.Timestamp deleted_at = 18;
inline bool WechatOauth2UserIndexResponse_Item::has_deleted_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.deleted_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& WechatOauth2UserIndexResponse_Item::_internal_deleted_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.deleted_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& WechatOauth2UserIndexResponse_Item::deleted_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.deleted_at)
  return _internal_deleted_at();
}
inline void WechatOauth2UserIndexResponse_Item::unsafe_arena_set_allocated_deleted_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deleted_at_);
  }
  _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.deleted_at)
}
inline ::google::protobuf::Timestamp* WechatOauth2UserIndexResponse_Item::release_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.deleted_at_;
  _impl_.deleted_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* WechatOauth2UserIndexResponse_Item::unsafe_arena_release_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.deleted_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.deleted_at_;
  _impl_.deleted_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* WechatOauth2UserIndexResponse_Item::_internal_mutable_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.deleted_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.deleted_at_;
}
inline ::google::protobuf::Timestamp* WechatOauth2UserIndexResponse_Item::mutable_deleted_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_deleted_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.deleted_at)
  return _msg;
}
inline void WechatOauth2UserIndexResponse_Item::set_allocated_deleted_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deleted_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.deleted_at)
}

// .google.protobuf.Timestamp updated_at = 19;
inline bool WechatOauth2UserIndexResponse_Item::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& WechatOauth2UserIndexResponse_Item::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& WechatOauth2UserIndexResponse_Item::updated_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.updated_at)
  return _internal_updated_at();
}
inline void WechatOauth2UserIndexResponse_Item::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.updated_at)
}
inline ::google::protobuf::Timestamp* WechatOauth2UserIndexResponse_Item::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* WechatOauth2UserIndexResponse_Item::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.updated_at)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* WechatOauth2UserIndexResponse_Item::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* WechatOauth2UserIndexResponse_Item::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.updated_at)
  return _msg;
}
inline void WechatOauth2UserIndexResponse_Item::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatOauth2UserIndexResponse.Item.updated_at)
}

// -------------------------------------------------------------------

// WechatOauth2UserIndexResponse

// repeated .palm.balsam.v1.WechatOauth2UserIndexResponse.Item items = 1;
inline int WechatOauth2UserIndexResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int WechatOauth2UserIndexResponse::items_size() const {
  return _internal_items_size();
}
inline void WechatOauth2UserIndexResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item* WechatOauth2UserIndexResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatOauth2UserIndexResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::WechatOauth2UserIndexResponse_Item>* WechatOauth2UserIndexResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.WechatOauth2UserIndexResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item& WechatOauth2UserIndexResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatOauth2UserIndexResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item* WechatOauth2UserIndexResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.balsam.v1.WechatOauth2UserIndexResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::WechatOauth2UserIndexResponse_Item>& WechatOauth2UserIndexResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.WechatOauth2UserIndexResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::WechatOauth2UserIndexResponse_Item>&
WechatOauth2UserIndexResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::WechatOauth2UserIndexResponse_Item>*
WechatOauth2UserIndexResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// .palm.balsam.v1.Pagination pagination = 2;
inline bool WechatOauth2UserIndexResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline void WechatOauth2UserIndexResponse::clear_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::balsam::v1::Pagination& WechatOauth2UserIndexResponse::_internal_pagination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::Pagination* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::Pagination&>(::palm::balsam::v1::_Pagination_default_instance_);
}
inline const ::palm::balsam::v1::Pagination& WechatOauth2UserIndexResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatOauth2UserIndexResponse.pagination)
  return _internal_pagination();
}
inline void WechatOauth2UserIndexResponse::unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.WechatOauth2UserIndexResponse.pagination)
}
inline ::palm::balsam::v1::Pagination* WechatOauth2UserIndexResponse::release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::Pagination* WechatOauth2UserIndexResponse::unsafe_arena_release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatOauth2UserIndexResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::Pagination* WechatOauth2UserIndexResponse::_internal_mutable_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::Pagination>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(p);
  }
  return _impl_.pagination_;
}
inline ::palm::balsam::v1::Pagination* WechatOauth2UserIndexResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::Pagination* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatOauth2UserIndexResponse.pagination)
  return _msg;
}
inline void WechatOauth2UserIndexResponse::set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::Pagination*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::Pagination*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatOauth2UserIndexResponse.pagination)
}

// -------------------------------------------------------------------

// WechatMiniProgramUserIndexResponse_Item

// uint64 id = 1;
inline void WechatMiniProgramUserIndexResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t WechatMiniProgramUserIndexResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.id)
  return _internal_id();
}
inline void WechatMiniProgramUserIndexResponse_Item::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.id)
}
inline ::uint64_t WechatMiniProgramUserIndexResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void WechatMiniProgramUserIndexResponse_Item::_internal_set_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// uint64 user_id = 2;
inline void WechatMiniProgramUserIndexResponse_Item::clear_user_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_id_ = ::uint64_t{0u};
}
inline ::uint64_t WechatMiniProgramUserIndexResponse_Item::user_id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.user_id)
  return _internal_user_id();
}
inline void WechatMiniProgramUserIndexResponse_Item::set_user_id(::uint64_t value) {
  _internal_set_user_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.user_id)
}
inline ::uint64_t WechatMiniProgramUserIndexResponse_Item::_internal_user_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_id_;
}
inline void WechatMiniProgramUserIndexResponse_Item::_internal_set_user_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_id_ = value;
}

// string union_id = 3;
inline void WechatMiniProgramUserIndexResponse_Item::clear_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.union_id_.ClearToEmpty();
}
inline const std::string& WechatMiniProgramUserIndexResponse_Item::union_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.union_id)
  return _internal_union_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatMiniProgramUserIndexResponse_Item::set_union_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.union_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.union_id)
}
inline std::string* WechatMiniProgramUserIndexResponse_Item::mutable_union_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_union_id();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.union_id)
  return _s;
}
inline const std::string& WechatMiniProgramUserIndexResponse_Item::_internal_union_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.union_id_.Get();
}
inline void WechatMiniProgramUserIndexResponse_Item::_internal_set_union_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.union_id_.Set(value, GetArena());
}
inline std::string* WechatMiniProgramUserIndexResponse_Item::_internal_mutable_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.union_id_.Mutable( GetArena());
}
inline std::string* WechatMiniProgramUserIndexResponse_Item::release_union_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.union_id)
  return _impl_.union_id_.Release();
}
inline void WechatMiniProgramUserIndexResponse_Item::set_allocated_union_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.union_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.union_id_.IsDefault()) {
          _impl_.union_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.union_id)
}

// string app_id = 4;
inline void WechatMiniProgramUserIndexResponse_Item::clear_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.ClearToEmpty();
}
inline const std::string& WechatMiniProgramUserIndexResponse_Item::app_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.app_id)
  return _internal_app_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatMiniProgramUserIndexResponse_Item::set_app_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.app_id)
}
inline std::string* WechatMiniProgramUserIndexResponse_Item::mutable_app_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_app_id();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.app_id)
  return _s;
}
inline const std::string& WechatMiniProgramUserIndexResponse_Item::_internal_app_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.app_id_.Get();
}
inline void WechatMiniProgramUserIndexResponse_Item::_internal_set_app_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.app_id_.Set(value, GetArena());
}
inline std::string* WechatMiniProgramUserIndexResponse_Item::_internal_mutable_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.app_id_.Mutable( GetArena());
}
inline std::string* WechatMiniProgramUserIndexResponse_Item::release_app_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.app_id)
  return _impl_.app_id_.Release();
}
inline void WechatMiniProgramUserIndexResponse_Item::set_allocated_app_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.app_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.app_id_.IsDefault()) {
          _impl_.app_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.app_id)
}

// string open_id = 5;
inline void WechatMiniProgramUserIndexResponse_Item::clear_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.ClearToEmpty();
}
inline const std::string& WechatMiniProgramUserIndexResponse_Item::open_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.open_id)
  return _internal_open_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatMiniProgramUserIndexResponse_Item::set_open_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.open_id)
}
inline std::string* WechatMiniProgramUserIndexResponse_Item::mutable_open_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_open_id();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.open_id)
  return _s;
}
inline const std::string& WechatMiniProgramUserIndexResponse_Item::_internal_open_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.open_id_.Get();
}
inline void WechatMiniProgramUserIndexResponse_Item::_internal_set_open_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.open_id_.Set(value, GetArena());
}
inline std::string* WechatMiniProgramUserIndexResponse_Item::_internal_mutable_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.open_id_.Mutable( GetArena());
}
inline std::string* WechatMiniProgramUserIndexResponse_Item::release_open_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.open_id)
  return _impl_.open_id_.Release();
}
inline void WechatMiniProgramUserIndexResponse_Item::set_allocated_open_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.open_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.open_id_.IsDefault()) {
          _impl_.open_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.open_id)
}

// optional string nickname = 6;
inline bool WechatMiniProgramUserIndexResponse_Item::has_nickname() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void WechatMiniProgramUserIndexResponse_Item::clear_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nickname_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& WechatMiniProgramUserIndexResponse_Item::nickname() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.nickname)
  return _internal_nickname();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatMiniProgramUserIndexResponse_Item::set_nickname(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nickname_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.nickname)
}
inline std::string* WechatMiniProgramUserIndexResponse_Item::mutable_nickname() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_nickname();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.nickname)
  return _s;
}
inline const std::string& WechatMiniProgramUserIndexResponse_Item::_internal_nickname() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nickname_.Get();
}
inline void WechatMiniProgramUserIndexResponse_Item::_internal_set_nickname(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.nickname_.Set(value, GetArena());
}
inline std::string* WechatMiniProgramUserIndexResponse_Item::_internal_mutable_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.nickname_.Mutable( GetArena());
}
inline std::string* WechatMiniProgramUserIndexResponse_Item::release_nickname() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.nickname)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.nickname_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nickname_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void WechatMiniProgramUserIndexResponse_Item::set_allocated_nickname(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.nickname_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.nickname_.IsDefault()) {
          _impl_.nickname_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.nickname)
}

// optional string avatar_url = 7;
inline bool WechatMiniProgramUserIndexResponse_Item::has_avatar_url() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void WechatMiniProgramUserIndexResponse_Item::clear_avatar_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.avatar_url_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& WechatMiniProgramUserIndexResponse_Item::avatar_url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.avatar_url)
  return _internal_avatar_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WechatMiniProgramUserIndexResponse_Item::set_avatar_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.avatar_url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.avatar_url)
}
inline std::string* WechatMiniProgramUserIndexResponse_Item::mutable_avatar_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_avatar_url();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.avatar_url)
  return _s;
}
inline const std::string& WechatMiniProgramUserIndexResponse_Item::_internal_avatar_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.avatar_url_.Get();
}
inline void WechatMiniProgramUserIndexResponse_Item::_internal_set_avatar_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.avatar_url_.Set(value, GetArena());
}
inline std::string* WechatMiniProgramUserIndexResponse_Item::_internal_mutable_avatar_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.avatar_url_.Mutable( GetArena());
}
inline std::string* WechatMiniProgramUserIndexResponse_Item::release_avatar_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.avatar_url)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.avatar_url_.Release();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avatar_url_.Set("", GetArena());
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return released;
}
inline void WechatMiniProgramUserIndexResponse_Item::set_allocated_avatar_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.avatar_url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.avatar_url_.IsDefault()) {
          _impl_.avatar_url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.avatar_url)
}

// optional .google.protobuf.Timestamp deleted_at = 8;
inline bool WechatMiniProgramUserIndexResponse_Item::has_deleted_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.deleted_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& WechatMiniProgramUserIndexResponse_Item::_internal_deleted_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.deleted_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& WechatMiniProgramUserIndexResponse_Item::deleted_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.deleted_at)
  return _internal_deleted_at();
}
inline void WechatMiniProgramUserIndexResponse_Item::unsafe_arena_set_allocated_deleted_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deleted_at_);
  }
  _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.deleted_at)
}
inline ::google::protobuf::Timestamp* WechatMiniProgramUserIndexResponse_Item::release_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.deleted_at_;
  _impl_.deleted_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* WechatMiniProgramUserIndexResponse_Item::unsafe_arena_release_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.deleted_at)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.deleted_at_;
  _impl_.deleted_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* WechatMiniProgramUserIndexResponse_Item::_internal_mutable_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.deleted_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.deleted_at_;
}
inline ::google::protobuf::Timestamp* WechatMiniProgramUserIndexResponse_Item::mutable_deleted_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_deleted_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.deleted_at)
  return _msg;
}
inline void WechatMiniProgramUserIndexResponse_Item::set_allocated_deleted_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deleted_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.deleted_at)
}

// .google.protobuf.Timestamp updated_at = 9;
inline bool WechatMiniProgramUserIndexResponse_Item::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& WechatMiniProgramUserIndexResponse_Item::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& WechatMiniProgramUserIndexResponse_Item::updated_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.updated_at)
  return _internal_updated_at();
}
inline void WechatMiniProgramUserIndexResponse_Item::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.updated_at)
}
inline ::google::protobuf::Timestamp* WechatMiniProgramUserIndexResponse_Item::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* WechatMiniProgramUserIndexResponse_Item::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.updated_at)

  _impl_._has_bits_[0] &= ~0x00000008u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* WechatMiniProgramUserIndexResponse_Item::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000008u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* WechatMiniProgramUserIndexResponse_Item::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.updated_at)
  return _msg;
}
inline void WechatMiniProgramUserIndexResponse_Item::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.updated_at)
}

// -------------------------------------------------------------------

// WechatMiniProgramUserIndexResponse

// repeated .palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item items = 1;
inline int WechatMiniProgramUserIndexResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int WechatMiniProgramUserIndexResponse::items_size() const {
  return _internal_items_size();
}
inline void WechatMiniProgramUserIndexResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::balsam::v1::WechatMiniProgramUserIndexResponse_Item* WechatMiniProgramUserIndexResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatMiniProgramUserIndexResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::WechatMiniProgramUserIndexResponse_Item>* WechatMiniProgramUserIndexResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.WechatMiniProgramUserIndexResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::balsam::v1::WechatMiniProgramUserIndexResponse_Item& WechatMiniProgramUserIndexResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatMiniProgramUserIndexResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::balsam::v1::WechatMiniProgramUserIndexResponse_Item* WechatMiniProgramUserIndexResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::balsam::v1::WechatMiniProgramUserIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.balsam.v1.WechatMiniProgramUserIndexResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::WechatMiniProgramUserIndexResponse_Item>& WechatMiniProgramUserIndexResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.WechatMiniProgramUserIndexResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::WechatMiniProgramUserIndexResponse_Item>&
WechatMiniProgramUserIndexResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::WechatMiniProgramUserIndexResponse_Item>*
WechatMiniProgramUserIndexResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// .palm.balsam.v1.Pagination pagination = 2;
inline bool WechatMiniProgramUserIndexResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline void WechatMiniProgramUserIndexResponse::clear_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::balsam::v1::Pagination& WechatMiniProgramUserIndexResponse::_internal_pagination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::Pagination* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::Pagination&>(::palm::balsam::v1::_Pagination_default_instance_);
}
inline const ::palm::balsam::v1::Pagination& WechatMiniProgramUserIndexResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.WechatMiniProgramUserIndexResponse.pagination)
  return _internal_pagination();
}
inline void WechatMiniProgramUserIndexResponse::unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.WechatMiniProgramUserIndexResponse.pagination)
}
inline ::palm::balsam::v1::Pagination* WechatMiniProgramUserIndexResponse::release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::Pagination* WechatMiniProgramUserIndexResponse::unsafe_arena_release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.WechatMiniProgramUserIndexResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::Pagination* WechatMiniProgramUserIndexResponse::_internal_mutable_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::Pagination>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(p);
  }
  return _impl_.pagination_;
}
inline ::palm::balsam::v1::Pagination* WechatMiniProgramUserIndexResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::Pagination* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.WechatMiniProgramUserIndexResponse.pagination)
  return _msg;
}
inline void WechatMiniProgramUserIndexResponse::set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::Pagination*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::Pagination*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.WechatMiniProgramUserIndexResponse.pagination)
}

// -------------------------------------------------------------------

// SessionListResponse

// repeated .palm.balsam.v1.SessionIndexResponse.Item items = 1;
inline int SessionListResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int SessionListResponse::items_size() const {
  return _internal_items_size();
}
inline void SessionListResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::balsam::v1::SessionIndexResponse_Item* SessionListResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SessionListResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::SessionIndexResponse_Item>* SessionListResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.SessionListResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::balsam::v1::SessionIndexResponse_Item& SessionListResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SessionListResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::balsam::v1::SessionIndexResponse_Item* SessionListResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::balsam::v1::SessionIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.balsam.v1.SessionListResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::SessionIndexResponse_Item>& SessionListResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.SessionListResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::SessionIndexResponse_Item>&
SessionListResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::SessionIndexResponse_Item>*
SessionListResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// SessionIndexResponse_Item

// uint64 id = 1;
inline void SessionIndexResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t SessionIndexResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SessionIndexResponse.Item.id)
  return _internal_id();
}
inline void SessionIndexResponse_Item::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SessionIndexResponse.Item.id)
}
inline ::uint64_t SessionIndexResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void SessionIndexResponse_Item::_internal_set_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// uint64 user = 2;
inline void SessionIndexResponse_Item::clear_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_ = ::uint64_t{0u};
}
inline ::uint64_t SessionIndexResponse_Item::user() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SessionIndexResponse.Item.user)
  return _internal_user();
}
inline void SessionIndexResponse_Item::set_user(::uint64_t value) {
  _internal_set_user(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SessionIndexResponse.Item.user)
}
inline ::uint64_t SessionIndexResponse_Item::_internal_user() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_;
}
inline void SessionIndexResponse_Item::_internal_set_user(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_ = value;
}

// string uid = 3;
inline void SessionIndexResponse_Item::clear_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uid_.ClearToEmpty();
}
inline const std::string& SessionIndexResponse_Item::uid() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SessionIndexResponse.Item.uid)
  return _internal_uid();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SessionIndexResponse_Item::set_uid(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uid_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SessionIndexResponse.Item.uid)
}
inline std::string* SessionIndexResponse_Item::mutable_uid() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_uid();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SessionIndexResponse.Item.uid)
  return _s;
}
inline const std::string& SessionIndexResponse_Item::_internal_uid() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.uid_.Get();
}
inline void SessionIndexResponse_Item::_internal_set_uid(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.uid_.Set(value, GetArena());
}
inline std::string* SessionIndexResponse_Item::_internal_mutable_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.uid_.Mutable( GetArena());
}
inline std::string* SessionIndexResponse_Item::release_uid() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SessionIndexResponse.Item.uid)
  return _impl_.uid_.Release();
}
inline void SessionIndexResponse_Item::set_allocated_uid(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.uid_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.uid_.IsDefault()) {
          _impl_.uid_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SessionIndexResponse.Item.uid)
}

// .palm.balsam.v1.UserSignInResponse.Detail.ProviderType provider_type = 4;
inline void SessionIndexResponse_Item::clear_provider_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.provider_type_ = 0;
}
inline ::palm::balsam::v1::UserSignInResponse_Detail_ProviderType SessionIndexResponse_Item::provider_type() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SessionIndexResponse.Item.provider_type)
  return _internal_provider_type();
}
inline void SessionIndexResponse_Item::set_provider_type(::palm::balsam::v1::UserSignInResponse_Detail_ProviderType value) {
  _internal_set_provider_type(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SessionIndexResponse.Item.provider_type)
}
inline ::palm::balsam::v1::UserSignInResponse_Detail_ProviderType SessionIndexResponse_Item::_internal_provider_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::balsam::v1::UserSignInResponse_Detail_ProviderType>(_impl_.provider_type_);
}
inline void SessionIndexResponse_Item::_internal_set_provider_type(::palm::balsam::v1::UserSignInResponse_Detail_ProviderType value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.provider_type_ = value;
}

// uint64 provider_id = 5;
inline void SessionIndexResponse_Item::clear_provider_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.provider_id_ = ::uint64_t{0u};
}
inline ::uint64_t SessionIndexResponse_Item::provider_id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SessionIndexResponse.Item.provider_id)
  return _internal_provider_id();
}
inline void SessionIndexResponse_Item::set_provider_id(::uint64_t value) {
  _internal_set_provider_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SessionIndexResponse.Item.provider_id)
}
inline ::uint64_t SessionIndexResponse_Item::_internal_provider_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.provider_id_;
}
inline void SessionIndexResponse_Item::_internal_set_provider_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.provider_id_ = value;
}

// string ip = 6;
inline void SessionIndexResponse_Item::clear_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_.ClearToEmpty();
}
inline const std::string& SessionIndexResponse_Item::ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SessionIndexResponse.Item.ip)
  return _internal_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SessionIndexResponse_Item::set_ip(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SessionIndexResponse.Item.ip)
}
inline std::string* SessionIndexResponse_Item::mutable_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ip();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SessionIndexResponse.Item.ip)
  return _s;
}
inline const std::string& SessionIndexResponse_Item::_internal_ip() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ip_.Get();
}
inline void SessionIndexResponse_Item::_internal_set_ip(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_.Set(value, GetArena());
}
inline std::string* SessionIndexResponse_Item::_internal_mutable_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ip_.Mutable( GetArena());
}
inline std::string* SessionIndexResponse_Item::release_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SessionIndexResponse.Item.ip)
  return _impl_.ip_.Release();
}
inline void SessionIndexResponse_Item::set_allocated_ip(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ip_.IsDefault()) {
          _impl_.ip_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SessionIndexResponse.Item.ip)
}

// .google.protobuf.Timestamp expires_at = 11;
inline bool SessionIndexResponse_Item::has_expires_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.expires_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& SessionIndexResponse_Item::_internal_expires_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.expires_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& SessionIndexResponse_Item::expires_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SessionIndexResponse.Item.expires_at)
  return _internal_expires_at();
}
inline void SessionIndexResponse_Item::unsafe_arena_set_allocated_expires_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.expires_at_);
  }
  _impl_.expires_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.SessionIndexResponse.Item.expires_at)
}
inline ::google::protobuf::Timestamp* SessionIndexResponse_Item::release_expires_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.expires_at_;
  _impl_.expires_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* SessionIndexResponse_Item::unsafe_arena_release_expires_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SessionIndexResponse.Item.expires_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.expires_at_;
  _impl_.expires_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* SessionIndexResponse_Item::_internal_mutable_expires_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.expires_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.expires_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.expires_at_;
}
inline ::google::protobuf::Timestamp* SessionIndexResponse_Item::mutable_expires_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_expires_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SessionIndexResponse.Item.expires_at)
  return _msg;
}
inline void SessionIndexResponse_Item::set_allocated_expires_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.expires_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.expires_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SessionIndexResponse.Item.expires_at)
}

// optional .google.protobuf.Timestamp deleted_at = 12;
inline bool SessionIndexResponse_Item::has_deleted_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.deleted_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& SessionIndexResponse_Item::_internal_deleted_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.deleted_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& SessionIndexResponse_Item::deleted_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SessionIndexResponse.Item.deleted_at)
  return _internal_deleted_at();
}
inline void SessionIndexResponse_Item::unsafe_arena_set_allocated_deleted_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deleted_at_);
  }
  _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.SessionIndexResponse.Item.deleted_at)
}
inline ::google::protobuf::Timestamp* SessionIndexResponse_Item::release_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.deleted_at_;
  _impl_.deleted_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* SessionIndexResponse_Item::unsafe_arena_release_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SessionIndexResponse.Item.deleted_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.deleted_at_;
  _impl_.deleted_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* SessionIndexResponse_Item::_internal_mutable_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.deleted_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.deleted_at_;
}
inline ::google::protobuf::Timestamp* SessionIndexResponse_Item::mutable_deleted_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_deleted_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SessionIndexResponse.Item.deleted_at)
  return _msg;
}
inline void SessionIndexResponse_Item::set_allocated_deleted_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deleted_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SessionIndexResponse.Item.deleted_at)
}

// .google.protobuf.Timestamp created_at = 13;
inline bool SessionIndexResponse_Item::has_created_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.created_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& SessionIndexResponse_Item::_internal_created_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.created_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& SessionIndexResponse_Item::created_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SessionIndexResponse.Item.created_at)
  return _internal_created_at();
}
inline void SessionIndexResponse_Item::unsafe_arena_set_allocated_created_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }
  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.SessionIndexResponse.Item.created_at)
}
inline ::google::protobuf::Timestamp* SessionIndexResponse_Item::release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* SessionIndexResponse_Item::unsafe_arena_release_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SessionIndexResponse.Item.created_at)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.created_at_;
  _impl_.created_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* SessionIndexResponse_Item::_internal_mutable_created_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.created_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.created_at_;
}
inline ::google::protobuf::Timestamp* SessionIndexResponse_Item::mutable_created_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_created_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SessionIndexResponse.Item.created_at)
  return _msg;
}
inline void SessionIndexResponse_Item::set_allocated_created_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.created_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.created_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SessionIndexResponse.Item.created_at)
}

// -------------------------------------------------------------------

// SessionIndexResponse

// repeated .palm.balsam.v1.SessionIndexResponse.Item items = 1;
inline int SessionIndexResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int SessionIndexResponse::items_size() const {
  return _internal_items_size();
}
inline void SessionIndexResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::balsam::v1::SessionIndexResponse_Item* SessionIndexResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SessionIndexResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::SessionIndexResponse_Item>* SessionIndexResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.SessionIndexResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::balsam::v1::SessionIndexResponse_Item& SessionIndexResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SessionIndexResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::balsam::v1::SessionIndexResponse_Item* SessionIndexResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::balsam::v1::SessionIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.balsam.v1.SessionIndexResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::SessionIndexResponse_Item>& SessionIndexResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.SessionIndexResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::SessionIndexResponse_Item>&
SessionIndexResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::SessionIndexResponse_Item>*
SessionIndexResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// .palm.balsam.v1.Pagination pagination = 2;
inline bool SessionIndexResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline void SessionIndexResponse::clear_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::balsam::v1::Pagination& SessionIndexResponse::_internal_pagination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::Pagination* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::Pagination&>(::palm::balsam::v1::_Pagination_default_instance_);
}
inline const ::palm::balsam::v1::Pagination& SessionIndexResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SessionIndexResponse.pagination)
  return _internal_pagination();
}
inline void SessionIndexResponse::unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.SessionIndexResponse.pagination)
}
inline ::palm::balsam::v1::Pagination* SessionIndexResponse::release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::Pagination* SessionIndexResponse::unsafe_arena_release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SessionIndexResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::Pagination* SessionIndexResponse::_internal_mutable_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::Pagination>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(p);
  }
  return _impl_.pagination_;
}
inline ::palm::balsam::v1::Pagination* SessionIndexResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::Pagination* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SessionIndexResponse.pagination)
  return _msg;
}
inline void SessionIndexResponse::set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::Pagination*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::Pagination*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SessionIndexResponse.pagination)
}

// -------------------------------------------------------------------

// LocaleSetRequest

// string lang = 1;
inline void LocaleSetRequest::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& LocaleSetRequest::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LocaleSetRequest.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LocaleSetRequest::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.LocaleSetRequest.lang)
}
inline std::string* LocaleSetRequest::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LocaleSetRequest.lang)
  return _s;
}
inline const std::string& LocaleSetRequest::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void LocaleSetRequest::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* LocaleSetRequest::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* LocaleSetRequest::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.LocaleSetRequest.lang)
  return _impl_.lang_.Release();
}
inline void LocaleSetRequest::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.LocaleSetRequest.lang)
}

// string code = 2;
inline void LocaleSetRequest::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& LocaleSetRequest::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LocaleSetRequest.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LocaleSetRequest::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.LocaleSetRequest.code)
}
inline std::string* LocaleSetRequest::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LocaleSetRequest.code)
  return _s;
}
inline const std::string& LocaleSetRequest::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void LocaleSetRequest::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* LocaleSetRequest::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* LocaleSetRequest::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.LocaleSetRequest.code)
  return _impl_.code_.Release();
}
inline void LocaleSetRequest::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.LocaleSetRequest.code)
}

// string message = 3;
inline void LocaleSetRequest::clear_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& LocaleSetRequest::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LocaleSetRequest.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LocaleSetRequest::set_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.LocaleSetRequest.message)
}
inline std::string* LocaleSetRequest::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LocaleSetRequest.message)
  return _s;
}
inline const std::string& LocaleSetRequest::_internal_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.message_.Get();
}
inline void LocaleSetRequest::_internal_set_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(value, GetArena());
}
inline std::string* LocaleSetRequest::_internal_mutable_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* LocaleSetRequest::release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.LocaleSetRequest.message)
  return _impl_.message_.Release();
}
inline void LocaleSetRequest::set_allocated_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.LocaleSetRequest.message)
}

// -------------------------------------------------------------------

// LocaleIndexResponse_Item

// uint64 id = 1;
inline void LocaleIndexResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t LocaleIndexResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LocaleIndexResponse.Item.id)
  return _internal_id();
}
inline void LocaleIndexResponse_Item::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.LocaleIndexResponse.Item.id)
}
inline ::uint64_t LocaleIndexResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void LocaleIndexResponse_Item::_internal_set_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string lang = 2;
inline void LocaleIndexResponse_Item::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& LocaleIndexResponse_Item::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LocaleIndexResponse.Item.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LocaleIndexResponse_Item::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.LocaleIndexResponse.Item.lang)
}
inline std::string* LocaleIndexResponse_Item::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LocaleIndexResponse.Item.lang)
  return _s;
}
inline const std::string& LocaleIndexResponse_Item::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void LocaleIndexResponse_Item::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* LocaleIndexResponse_Item::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* LocaleIndexResponse_Item::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.LocaleIndexResponse.Item.lang)
  return _impl_.lang_.Release();
}
inline void LocaleIndexResponse_Item::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.LocaleIndexResponse.Item.lang)
}

// string code = 3;
inline void LocaleIndexResponse_Item::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& LocaleIndexResponse_Item::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LocaleIndexResponse.Item.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LocaleIndexResponse_Item::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.LocaleIndexResponse.Item.code)
}
inline std::string* LocaleIndexResponse_Item::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LocaleIndexResponse.Item.code)
  return _s;
}
inline const std::string& LocaleIndexResponse_Item::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void LocaleIndexResponse_Item::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* LocaleIndexResponse_Item::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* LocaleIndexResponse_Item::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.LocaleIndexResponse.Item.code)
  return _impl_.code_.Release();
}
inline void LocaleIndexResponse_Item::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.LocaleIndexResponse.Item.code)
}

// string message = 4;
inline void LocaleIndexResponse_Item::clear_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& LocaleIndexResponse_Item::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LocaleIndexResponse.Item.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LocaleIndexResponse_Item::set_message(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.LocaleIndexResponse.Item.message)
}
inline std::string* LocaleIndexResponse_Item::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LocaleIndexResponse.Item.message)
  return _s;
}
inline const std::string& LocaleIndexResponse_Item::_internal_message() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.message_.Get();
}
inline void LocaleIndexResponse_Item::_internal_set_message(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.message_.Set(value, GetArena());
}
inline std::string* LocaleIndexResponse_Item::_internal_mutable_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* LocaleIndexResponse_Item::release_message() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.LocaleIndexResponse.Item.message)
  return _impl_.message_.Release();
}
inline void LocaleIndexResponse_Item::set_allocated_message(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.LocaleIndexResponse.Item.message)
}

// .google.protobuf.Timestamp updated_at = 5;
inline bool LocaleIndexResponse_Item::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& LocaleIndexResponse_Item::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& LocaleIndexResponse_Item::updated_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LocaleIndexResponse.Item.updated_at)
  return _internal_updated_at();
}
inline void LocaleIndexResponse_Item::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.LocaleIndexResponse.Item.updated_at)
}
inline ::google::protobuf::Timestamp* LocaleIndexResponse_Item::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* LocaleIndexResponse_Item::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.LocaleIndexResponse.Item.updated_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* LocaleIndexResponse_Item::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* LocaleIndexResponse_Item::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LocaleIndexResponse.Item.updated_at)
  return _msg;
}
inline void LocaleIndexResponse_Item::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.LocaleIndexResponse.Item.updated_at)
}

// -------------------------------------------------------------------

// LocaleIndexResponse

// repeated .palm.balsam.v1.LocaleIndexResponse.Item items = 1;
inline int LocaleIndexResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int LocaleIndexResponse::items_size() const {
  return _internal_items_size();
}
inline void LocaleIndexResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::balsam::v1::LocaleIndexResponse_Item* LocaleIndexResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LocaleIndexResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::LocaleIndexResponse_Item>* LocaleIndexResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.LocaleIndexResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::balsam::v1::LocaleIndexResponse_Item& LocaleIndexResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LocaleIndexResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::balsam::v1::LocaleIndexResponse_Item* LocaleIndexResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::balsam::v1::LocaleIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.balsam.v1.LocaleIndexResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::LocaleIndexResponse_Item>& LocaleIndexResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.LocaleIndexResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::LocaleIndexResponse_Item>&
LocaleIndexResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::LocaleIndexResponse_Item>*
LocaleIndexResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// .palm.balsam.v1.Pagination pagination = 2;
inline bool LocaleIndexResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline void LocaleIndexResponse::clear_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::balsam::v1::Pagination& LocaleIndexResponse::_internal_pagination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::Pagination* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::Pagination&>(::palm::balsam::v1::_Pagination_default_instance_);
}
inline const ::palm::balsam::v1::Pagination& LocaleIndexResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LocaleIndexResponse.pagination)
  return _internal_pagination();
}
inline void LocaleIndexResponse::unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.LocaleIndexResponse.pagination)
}
inline ::palm::balsam::v1::Pagination* LocaleIndexResponse::release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::Pagination* LocaleIndexResponse::unsafe_arena_release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.LocaleIndexResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::Pagination* LocaleIndexResponse::_internal_mutable_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::Pagination>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(p);
  }
  return _impl_.pagination_;
}
inline ::palm::balsam::v1::Pagination* LocaleIndexResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::Pagination* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LocaleIndexResponse.pagination)
  return _msg;
}
inline void LocaleIndexResponse::set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::Pagination*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::Pagination*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.LocaleIndexResponse.pagination)
}

// -------------------------------------------------------------------

// LocaleByLangRequest

// string lang = 1;
inline void LocaleByLangRequest::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& LocaleByLangRequest::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LocaleByLangRequest.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LocaleByLangRequest::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.LocaleByLangRequest.lang)
}
inline std::string* LocaleByLangRequest::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LocaleByLangRequest.lang)
  return _s;
}
inline const std::string& LocaleByLangRequest::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void LocaleByLangRequest::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* LocaleByLangRequest::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* LocaleByLangRequest::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.LocaleByLangRequest.lang)
  return _impl_.lang_.Release();
}
inline void LocaleByLangRequest::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.LocaleByLangRequest.lang)
}

// -------------------------------------------------------------------

// LocaleByLangResponse

// repeated .palm.balsam.v1.LocaleIndexResponse.Item items = 1;
inline int LocaleByLangResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int LocaleByLangResponse::items_size() const {
  return _internal_items_size();
}
inline void LocaleByLangResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::balsam::v1::LocaleIndexResponse_Item* LocaleByLangResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LocaleByLangResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::LocaleIndexResponse_Item>* LocaleByLangResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.LocaleByLangResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::balsam::v1::LocaleIndexResponse_Item& LocaleByLangResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LocaleByLangResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::balsam::v1::LocaleIndexResponse_Item* LocaleByLangResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::balsam::v1::LocaleIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.balsam.v1.LocaleByLangResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::LocaleIndexResponse_Item>& LocaleByLangResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.LocaleByLangResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::LocaleIndexResponse_Item>&
LocaleByLangResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::LocaleIndexResponse_Item>*
LocaleByLangResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// AttachmentClearRequest

// uint32 days_to_keep = 1;
inline void AttachmentClearRequest::clear_days_to_keep() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.days_to_keep_ = 0u;
}
inline ::uint32_t AttachmentClearRequest::days_to_keep() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentClearRequest.days_to_keep)
  return _internal_days_to_keep();
}
inline void AttachmentClearRequest::set_days_to_keep(::uint32_t value) {
  _internal_set_days_to_keep(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentClearRequest.days_to_keep)
}
inline ::uint32_t AttachmentClearRequest::_internal_days_to_keep() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.days_to_keep_;
}
inline void AttachmentClearRequest::_internal_set_days_to_keep(::uint32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.days_to_keep_ = value;
}

// -------------------------------------------------------------------

// AttachmentResourceRequest

// uint64 id = 1;
inline void AttachmentResourceRequest::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t AttachmentResourceRequest::id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentResourceRequest.id)
  return _internal_id();
}
inline void AttachmentResourceRequest::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentResourceRequest.id)
}
inline ::uint64_t AttachmentResourceRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void AttachmentResourceRequest::_internal_set_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string resource_type = 2;
inline void AttachmentResourceRequest::clear_resource_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resource_type_.ClearToEmpty();
}
inline const std::string& AttachmentResourceRequest::resource_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentResourceRequest.resource_type)
  return _internal_resource_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttachmentResourceRequest::set_resource_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resource_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentResourceRequest.resource_type)
}
inline std::string* AttachmentResourceRequest::mutable_resource_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_resource_type();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AttachmentResourceRequest.resource_type)
  return _s;
}
inline const std::string& AttachmentResourceRequest::_internal_resource_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resource_type_.Get();
}
inline void AttachmentResourceRequest::_internal_set_resource_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.resource_type_.Set(value, GetArena());
}
inline std::string* AttachmentResourceRequest::_internal_mutable_resource_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.resource_type_.Mutable( GetArena());
}
inline std::string* AttachmentResourceRequest::release_resource_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.AttachmentResourceRequest.resource_type)
  return _impl_.resource_type_.Release();
}
inline void AttachmentResourceRequest::set_allocated_resource_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resource_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.resource_type_.IsDefault()) {
          _impl_.resource_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.AttachmentResourceRequest.resource_type)
}

// optional uint64 resource_id = 3;
inline bool AttachmentResourceRequest::has_resource_id() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void AttachmentResourceRequest::clear_resource_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.resource_id_ = ::uint64_t{0u};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline ::uint64_t AttachmentResourceRequest::resource_id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentResourceRequest.resource_id)
  return _internal_resource_id();
}
inline void AttachmentResourceRequest::set_resource_id(::uint64_t value) {
  _internal_set_resource_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentResourceRequest.resource_id)
}
inline ::uint64_t AttachmentResourceRequest::_internal_resource_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.resource_id_;
}
inline void AttachmentResourceRequest::_internal_set_resource_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.resource_id_ = value;
}

// -------------------------------------------------------------------

// AttachmentCreateRequest

// uint64 user = 1;
inline void AttachmentCreateRequest::clear_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_ = ::uint64_t{0u};
}
inline ::uint64_t AttachmentCreateRequest::user() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentCreateRequest.user)
  return _internal_user();
}
inline void AttachmentCreateRequest::set_user(::uint64_t value) {
  _internal_set_user(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentCreateRequest.user)
}
inline ::uint64_t AttachmentCreateRequest::_internal_user() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_;
}
inline void AttachmentCreateRequest::_internal_set_user(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_ = value;
}

// string bucket = 2;
inline void AttachmentCreateRequest::clear_bucket() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bucket_.ClearToEmpty();
}
inline const std::string& AttachmentCreateRequest::bucket() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentCreateRequest.bucket)
  return _internal_bucket();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttachmentCreateRequest::set_bucket(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bucket_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentCreateRequest.bucket)
}
inline std::string* AttachmentCreateRequest::mutable_bucket() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bucket();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AttachmentCreateRequest.bucket)
  return _s;
}
inline const std::string& AttachmentCreateRequest::_internal_bucket() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bucket_.Get();
}
inline void AttachmentCreateRequest::_internal_set_bucket(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bucket_.Set(value, GetArena());
}
inline std::string* AttachmentCreateRequest::_internal_mutable_bucket() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.bucket_.Mutable( GetArena());
}
inline std::string* AttachmentCreateRequest::release_bucket() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.AttachmentCreateRequest.bucket)
  return _impl_.bucket_.Release();
}
inline void AttachmentCreateRequest::set_allocated_bucket(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bucket_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bucket_.IsDefault()) {
          _impl_.bucket_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.AttachmentCreateRequest.bucket)
}

// string object = 3;
inline void AttachmentCreateRequest::clear_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.object_.ClearToEmpty();
}
inline const std::string& AttachmentCreateRequest::object() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentCreateRequest.object)
  return _internal_object();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttachmentCreateRequest::set_object(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.object_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentCreateRequest.object)
}
inline std::string* AttachmentCreateRequest::mutable_object() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_object();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AttachmentCreateRequest.object)
  return _s;
}
inline const std::string& AttachmentCreateRequest::_internal_object() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.object_.Get();
}
inline void AttachmentCreateRequest::_internal_set_object(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.object_.Set(value, GetArena());
}
inline std::string* AttachmentCreateRequest::_internal_mutable_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.object_.Mutable( GetArena());
}
inline std::string* AttachmentCreateRequest::release_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.AttachmentCreateRequest.object)
  return _impl_.object_.Release();
}
inline void AttachmentCreateRequest::set_allocated_object(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.object_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.object_.IsDefault()) {
          _impl_.object_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.AttachmentCreateRequest.object)
}

// string title = 4;
inline void AttachmentCreateRequest::clear_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& AttachmentCreateRequest::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentCreateRequest.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttachmentCreateRequest::set_title(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentCreateRequest.title)
}
inline std::string* AttachmentCreateRequest::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AttachmentCreateRequest.title)
  return _s;
}
inline const std::string& AttachmentCreateRequest::_internal_title() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.title_.Get();
}
inline void AttachmentCreateRequest::_internal_set_title(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(value, GetArena());
}
inline std::string* AttachmentCreateRequest::_internal_mutable_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* AttachmentCreateRequest::release_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.AttachmentCreateRequest.title)
  return _impl_.title_.Release();
}
inline void AttachmentCreateRequest::set_allocated_title(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.AttachmentCreateRequest.title)
}

// uint64 size = 5;
inline void AttachmentCreateRequest::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::uint64_t{0u};
}
inline ::uint64_t AttachmentCreateRequest::size() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentCreateRequest.size)
  return _internal_size();
}
inline void AttachmentCreateRequest::set_size(::uint64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentCreateRequest.size)
}
inline ::uint64_t AttachmentCreateRequest::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void AttachmentCreateRequest::_internal_set_size(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// string content_type = 6;
inline void AttachmentCreateRequest::clear_content_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_type_.ClearToEmpty();
}
inline const std::string& AttachmentCreateRequest::content_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentCreateRequest.content_type)
  return _internal_content_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttachmentCreateRequest::set_content_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentCreateRequest.content_type)
}
inline std::string* AttachmentCreateRequest::mutable_content_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content_type();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AttachmentCreateRequest.content_type)
  return _s;
}
inline const std::string& AttachmentCreateRequest::_internal_content_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.content_type_.Get();
}
inline void AttachmentCreateRequest::_internal_set_content_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_type_.Set(value, GetArena());
}
inline std::string* AttachmentCreateRequest::_internal_mutable_content_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.content_type_.Mutable( GetArena());
}
inline std::string* AttachmentCreateRequest::release_content_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.AttachmentCreateRequest.content_type)
  return _impl_.content_type_.Release();
}
inline void AttachmentCreateRequest::set_allocated_content_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.content_type_.IsDefault()) {
          _impl_.content_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.AttachmentCreateRequest.content_type)
}

// bool public = 9;
inline void AttachmentCreateRequest::clear_public_() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.public__ = false;
}
inline bool AttachmentCreateRequest::public_() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentCreateRequest.public)
  return _internal_public_();
}
inline void AttachmentCreateRequest::set_public_(bool value) {
  _internal_set_public_(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentCreateRequest.public)
}
inline bool AttachmentCreateRequest::_internal_public_() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.public__;
}
inline void AttachmentCreateRequest::_internal_set_public_(bool value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.public__ = value;
}

// -------------------------------------------------------------------

// AttachmentSetTitleRequest

// uint64 id = 1;
inline void AttachmentSetTitleRequest::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t AttachmentSetTitleRequest::id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentSetTitleRequest.id)
  return _internal_id();
}
inline void AttachmentSetTitleRequest::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentSetTitleRequest.id)
}
inline ::uint64_t AttachmentSetTitleRequest::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void AttachmentSetTitleRequest::_internal_set_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string title = 2;
inline void AttachmentSetTitleRequest::clear_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& AttachmentSetTitleRequest::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentSetTitleRequest.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttachmentSetTitleRequest::set_title(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentSetTitleRequest.title)
}
inline std::string* AttachmentSetTitleRequest::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AttachmentSetTitleRequest.title)
  return _s;
}
inline const std::string& AttachmentSetTitleRequest::_internal_title() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.title_.Get();
}
inline void AttachmentSetTitleRequest::_internal_set_title(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(value, GetArena());
}
inline std::string* AttachmentSetTitleRequest::_internal_mutable_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* AttachmentSetTitleRequest::release_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.AttachmentSetTitleRequest.title)
  return _impl_.title_.Release();
}
inline void AttachmentSetTitleRequest::set_allocated_title(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.AttachmentSetTitleRequest.title)
}

// -------------------------------------------------------------------

// AttachmentShowResponse

// string url = 1;
inline void AttachmentShowResponse::clear_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.ClearToEmpty();
}
inline const std::string& AttachmentShowResponse::url() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentShowResponse.url)
  return _internal_url();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttachmentShowResponse::set_url(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentShowResponse.url)
}
inline std::string* AttachmentShowResponse::mutable_url() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_url();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AttachmentShowResponse.url)
  return _s;
}
inline const std::string& AttachmentShowResponse::_internal_url() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.url_.Get();
}
inline void AttachmentShowResponse::_internal_set_url(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.url_.Set(value, GetArena());
}
inline std::string* AttachmentShowResponse::_internal_mutable_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.url_.Mutable( GetArena());
}
inline std::string* AttachmentShowResponse::release_url() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.AttachmentShowResponse.url)
  return _impl_.url_.Release();
}
inline void AttachmentShowResponse::set_allocated_url(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.url_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.url_.IsDefault()) {
          _impl_.url_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.AttachmentShowResponse.url)
}

// -------------------------------------------------------------------

// AttachmentListResponse

// repeated .palm.balsam.v1.AttachmentIndexResponse.Item items = 1;
inline int AttachmentListResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int AttachmentListResponse::items_size() const {
  return _internal_items_size();
}
inline void AttachmentListResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::balsam::v1::AttachmentIndexResponse_Item* AttachmentListResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AttachmentListResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::AttachmentIndexResponse_Item>* AttachmentListResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.AttachmentListResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::balsam::v1::AttachmentIndexResponse_Item& AttachmentListResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentListResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::balsam::v1::AttachmentIndexResponse_Item* AttachmentListResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::balsam::v1::AttachmentIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.balsam.v1.AttachmentListResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::AttachmentIndexResponse_Item>& AttachmentListResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.AttachmentListResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::AttachmentIndexResponse_Item>&
AttachmentListResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::AttachmentIndexResponse_Item>*
AttachmentListResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// -------------------------------------------------------------------

// AttachmentIndexResponse_Item

// uint64 id = 1;
inline void AttachmentIndexResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t AttachmentIndexResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentIndexResponse.Item.id)
  return _internal_id();
}
inline void AttachmentIndexResponse_Item::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentIndexResponse.Item.id)
}
inline ::uint64_t AttachmentIndexResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void AttachmentIndexResponse_Item::_internal_set_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// uint64 user = 2;
inline void AttachmentIndexResponse_Item::clear_user() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.user_ = ::uint64_t{0u};
}
inline ::uint64_t AttachmentIndexResponse_Item::user() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentIndexResponse.Item.user)
  return _internal_user();
}
inline void AttachmentIndexResponse_Item::set_user(::uint64_t value) {
  _internal_set_user(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentIndexResponse.Item.user)
}
inline ::uint64_t AttachmentIndexResponse_Item::_internal_user() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.user_;
}
inline void AttachmentIndexResponse_Item::_internal_set_user(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.user_ = value;
}

// string bucket = 3;
inline void AttachmentIndexResponse_Item::clear_bucket() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bucket_.ClearToEmpty();
}
inline const std::string& AttachmentIndexResponse_Item::bucket() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentIndexResponse.Item.bucket)
  return _internal_bucket();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttachmentIndexResponse_Item::set_bucket(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bucket_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentIndexResponse.Item.bucket)
}
inline std::string* AttachmentIndexResponse_Item::mutable_bucket() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_bucket();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AttachmentIndexResponse.Item.bucket)
  return _s;
}
inline const std::string& AttachmentIndexResponse_Item::_internal_bucket() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.bucket_.Get();
}
inline void AttachmentIndexResponse_Item::_internal_set_bucket(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.bucket_.Set(value, GetArena());
}
inline std::string* AttachmentIndexResponse_Item::_internal_mutable_bucket() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.bucket_.Mutable( GetArena());
}
inline std::string* AttachmentIndexResponse_Item::release_bucket() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.AttachmentIndexResponse.Item.bucket)
  return _impl_.bucket_.Release();
}
inline void AttachmentIndexResponse_Item::set_allocated_bucket(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.bucket_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.bucket_.IsDefault()) {
          _impl_.bucket_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.AttachmentIndexResponse.Item.bucket)
}

// string object = 4;
inline void AttachmentIndexResponse_Item::clear_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.object_.ClearToEmpty();
}
inline const std::string& AttachmentIndexResponse_Item::object() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentIndexResponse.Item.object)
  return _internal_object();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttachmentIndexResponse_Item::set_object(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.object_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentIndexResponse.Item.object)
}
inline std::string* AttachmentIndexResponse_Item::mutable_object() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_object();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AttachmentIndexResponse.Item.object)
  return _s;
}
inline const std::string& AttachmentIndexResponse_Item::_internal_object() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.object_.Get();
}
inline void AttachmentIndexResponse_Item::_internal_set_object(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.object_.Set(value, GetArena());
}
inline std::string* AttachmentIndexResponse_Item::_internal_mutable_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.object_.Mutable( GetArena());
}
inline std::string* AttachmentIndexResponse_Item::release_object() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.AttachmentIndexResponse.Item.object)
  return _impl_.object_.Release();
}
inline void AttachmentIndexResponse_Item::set_allocated_object(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.object_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.object_.IsDefault()) {
          _impl_.object_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.AttachmentIndexResponse.Item.object)
}

// string title = 5;
inline void AttachmentIndexResponse_Item::clear_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& AttachmentIndexResponse_Item::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentIndexResponse.Item.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttachmentIndexResponse_Item::set_title(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentIndexResponse.Item.title)
}
inline std::string* AttachmentIndexResponse_Item::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AttachmentIndexResponse.Item.title)
  return _s;
}
inline const std::string& AttachmentIndexResponse_Item::_internal_title() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.title_.Get();
}
inline void AttachmentIndexResponse_Item::_internal_set_title(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(value, GetArena());
}
inline std::string* AttachmentIndexResponse_Item::_internal_mutable_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* AttachmentIndexResponse_Item::release_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.AttachmentIndexResponse.Item.title)
  return _impl_.title_.Release();
}
inline void AttachmentIndexResponse_Item::set_allocated_title(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.AttachmentIndexResponse.Item.title)
}

// uint64 size = 6;
inline void AttachmentIndexResponse_Item::clear_size() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.size_ = ::uint64_t{0u};
}
inline ::uint64_t AttachmentIndexResponse_Item::size() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentIndexResponse.Item.size)
  return _internal_size();
}
inline void AttachmentIndexResponse_Item::set_size(::uint64_t value) {
  _internal_set_size(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentIndexResponse.Item.size)
}
inline ::uint64_t AttachmentIndexResponse_Item::_internal_size() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.size_;
}
inline void AttachmentIndexResponse_Item::_internal_set_size(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.size_ = value;
}

// string content_type = 7;
inline void AttachmentIndexResponse_Item::clear_content_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_type_.ClearToEmpty();
}
inline const std::string& AttachmentIndexResponse_Item::content_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentIndexResponse.Item.content_type)
  return _internal_content_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AttachmentIndexResponse_Item::set_content_type(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.AttachmentIndexResponse.Item.content_type)
}
inline std::string* AttachmentIndexResponse_Item::mutable_content_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content_type();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AttachmentIndexResponse.Item.content_type)
  return _s;
}
inline const std::string& AttachmentIndexResponse_Item::_internal_content_type() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.content_type_.Get();
}
inline void AttachmentIndexResponse_Item::_internal_set_content_type(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_type_.Set(value, GetArena());
}
inline std::string* AttachmentIndexResponse_Item::_internal_mutable_content_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.content_type_.Mutable( GetArena());
}
inline std::string* AttachmentIndexResponse_Item::release_content_type() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.AttachmentIndexResponse.Item.content_type)
  return _impl_.content_type_.Release();
}
inline void AttachmentIndexResponse_Item::set_allocated_content_type(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.content_type_.IsDefault()) {
          _impl_.content_type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.AttachmentIndexResponse.Item.content_type)
}

// optional .google.protobuf.Timestamp uploaded_at = 11;
inline bool AttachmentIndexResponse_Item::has_uploaded_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.uploaded_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& AttachmentIndexResponse_Item::_internal_uploaded_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.uploaded_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& AttachmentIndexResponse_Item::uploaded_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentIndexResponse.Item.uploaded_at)
  return _internal_uploaded_at();
}
inline void AttachmentIndexResponse_Item::unsafe_arena_set_allocated_uploaded_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.uploaded_at_);
  }
  _impl_.uploaded_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.AttachmentIndexResponse.Item.uploaded_at)
}
inline ::google::protobuf::Timestamp* AttachmentIndexResponse_Item::release_uploaded_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.uploaded_at_;
  _impl_.uploaded_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* AttachmentIndexResponse_Item::unsafe_arena_release_uploaded_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.AttachmentIndexResponse.Item.uploaded_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.uploaded_at_;
  _impl_.uploaded_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* AttachmentIndexResponse_Item::_internal_mutable_uploaded_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.uploaded_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.uploaded_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.uploaded_at_;
}
inline ::google::protobuf::Timestamp* AttachmentIndexResponse_Item::mutable_uploaded_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_uploaded_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AttachmentIndexResponse.Item.uploaded_at)
  return _msg;
}
inline void AttachmentIndexResponse_Item::set_allocated_uploaded_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.uploaded_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.uploaded_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.AttachmentIndexResponse.Item.uploaded_at)
}

// optional .google.protobuf.Timestamp deleted_at = 12;
inline bool AttachmentIndexResponse_Item::has_deleted_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.deleted_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& AttachmentIndexResponse_Item::_internal_deleted_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.deleted_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& AttachmentIndexResponse_Item::deleted_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentIndexResponse.Item.deleted_at)
  return _internal_deleted_at();
}
inline void AttachmentIndexResponse_Item::unsafe_arena_set_allocated_deleted_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deleted_at_);
  }
  _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.AttachmentIndexResponse.Item.deleted_at)
}
inline ::google::protobuf::Timestamp* AttachmentIndexResponse_Item::release_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.deleted_at_;
  _impl_.deleted_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* AttachmentIndexResponse_Item::unsafe_arena_release_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.AttachmentIndexResponse.Item.deleted_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.deleted_at_;
  _impl_.deleted_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* AttachmentIndexResponse_Item::_internal_mutable_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.deleted_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.deleted_at_;
}
inline ::google::protobuf::Timestamp* AttachmentIndexResponse_Item::mutable_deleted_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_deleted_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AttachmentIndexResponse.Item.deleted_at)
  return _msg;
}
inline void AttachmentIndexResponse_Item::set_allocated_deleted_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deleted_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.AttachmentIndexResponse.Item.deleted_at)
}

// .google.protobuf.Timestamp updated_at = 13;
inline bool AttachmentIndexResponse_Item::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& AttachmentIndexResponse_Item::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& AttachmentIndexResponse_Item::updated_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentIndexResponse.Item.updated_at)
  return _internal_updated_at();
}
inline void AttachmentIndexResponse_Item::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.AttachmentIndexResponse.Item.updated_at)
}
inline ::google::protobuf::Timestamp* AttachmentIndexResponse_Item::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* AttachmentIndexResponse_Item::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.AttachmentIndexResponse.Item.updated_at)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* AttachmentIndexResponse_Item::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* AttachmentIndexResponse_Item::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AttachmentIndexResponse.Item.updated_at)
  return _msg;
}
inline void AttachmentIndexResponse_Item::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.AttachmentIndexResponse.Item.updated_at)
}

// -------------------------------------------------------------------

// AttachmentIndexResponse

// repeated .palm.balsam.v1.AttachmentIndexResponse.Item items = 1;
inline int AttachmentIndexResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int AttachmentIndexResponse::items_size() const {
  return _internal_items_size();
}
inline void AttachmentIndexResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::balsam::v1::AttachmentIndexResponse_Item* AttachmentIndexResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AttachmentIndexResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::AttachmentIndexResponse_Item>* AttachmentIndexResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.AttachmentIndexResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::balsam::v1::AttachmentIndexResponse_Item& AttachmentIndexResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentIndexResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::balsam::v1::AttachmentIndexResponse_Item* AttachmentIndexResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::balsam::v1::AttachmentIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.balsam.v1.AttachmentIndexResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::AttachmentIndexResponse_Item>& AttachmentIndexResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.AttachmentIndexResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::AttachmentIndexResponse_Item>&
AttachmentIndexResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::AttachmentIndexResponse_Item>*
AttachmentIndexResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// .palm.balsam.v1.Pagination pagination = 2;
inline bool AttachmentIndexResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline void AttachmentIndexResponse::clear_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::balsam::v1::Pagination& AttachmentIndexResponse::_internal_pagination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::Pagination* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::Pagination&>(::palm::balsam::v1::_Pagination_default_instance_);
}
inline const ::palm::balsam::v1::Pagination& AttachmentIndexResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.AttachmentIndexResponse.pagination)
  return _internal_pagination();
}
inline void AttachmentIndexResponse::unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.AttachmentIndexResponse.pagination)
}
inline ::palm::balsam::v1::Pagination* AttachmentIndexResponse::release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::Pagination* AttachmentIndexResponse::unsafe_arena_release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.AttachmentIndexResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::Pagination* AttachmentIndexResponse::_internal_mutable_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::Pagination>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(p);
  }
  return _impl_.pagination_;
}
inline ::palm::balsam::v1::Pagination* AttachmentIndexResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::Pagination* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.AttachmentIndexResponse.pagination)
  return _msg;
}
inline void AttachmentIndexResponse::set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::Pagination*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::Pagination*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.AttachmentIndexResponse.pagination)
}

// -------------------------------------------------------------------

// LeaveWordCreateRequest

// string body = 1;
inline void LeaveWordCreateRequest::clear_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.body_.ClearToEmpty();
}
inline const std::string& LeaveWordCreateRequest::body() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LeaveWordCreateRequest.body)
  return _internal_body();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeaveWordCreateRequest::set_body(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.body_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.LeaveWordCreateRequest.body)
}
inline std::string* LeaveWordCreateRequest::mutable_body() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_body();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LeaveWordCreateRequest.body)
  return _s;
}
inline const std::string& LeaveWordCreateRequest::_internal_body() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.body_.Get();
}
inline void LeaveWordCreateRequest::_internal_set_body(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.body_.Set(value, GetArena());
}
inline std::string* LeaveWordCreateRequest::_internal_mutable_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.body_.Mutable( GetArena());
}
inline std::string* LeaveWordCreateRequest::release_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.LeaveWordCreateRequest.body)
  return _impl_.body_.Release();
}
inline void LeaveWordCreateRequest::set_allocated_body(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.body_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.body_.IsDefault()) {
          _impl_.body_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.LeaveWordCreateRequest.body)
}

// .palm.balsam.v1.MediaEditor editor = 2;
inline void LeaveWordCreateRequest::clear_editor() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.editor_ = 0;
}
inline ::palm::balsam::v1::MediaEditor LeaveWordCreateRequest::editor() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LeaveWordCreateRequest.editor)
  return _internal_editor();
}
inline void LeaveWordCreateRequest::set_editor(::palm::balsam::v1::MediaEditor value) {
  _internal_set_editor(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.LeaveWordCreateRequest.editor)
}
inline ::palm::balsam::v1::MediaEditor LeaveWordCreateRequest::_internal_editor() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::balsam::v1::MediaEditor>(_impl_.editor_);
}
inline void LeaveWordCreateRequest::_internal_set_editor(::palm::balsam::v1::MediaEditor value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.editor_ = value;
}

// -------------------------------------------------------------------

// LeaveWordIndexResponse_Item

// uint64 id = 1;
inline void LeaveWordIndexResponse_Item::clear_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.id_ = ::uint64_t{0u};
}
inline ::uint64_t LeaveWordIndexResponse_Item::id() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LeaveWordIndexResponse.Item.id)
  return _internal_id();
}
inline void LeaveWordIndexResponse_Item::set_id(::uint64_t value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.LeaveWordIndexResponse.Item.id)
}
inline ::uint64_t LeaveWordIndexResponse_Item::_internal_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.id_;
}
inline void LeaveWordIndexResponse_Item::_internal_set_id(::uint64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.id_ = value;
}

// string lang = 2;
inline void LeaveWordIndexResponse_Item::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& LeaveWordIndexResponse_Item::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LeaveWordIndexResponse.Item.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeaveWordIndexResponse_Item::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.LeaveWordIndexResponse.Item.lang)
}
inline std::string* LeaveWordIndexResponse_Item::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LeaveWordIndexResponse.Item.lang)
  return _s;
}
inline const std::string& LeaveWordIndexResponse_Item::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void LeaveWordIndexResponse_Item::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* LeaveWordIndexResponse_Item::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* LeaveWordIndexResponse_Item::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.LeaveWordIndexResponse.Item.lang)
  return _impl_.lang_.Release();
}
inline void LeaveWordIndexResponse_Item::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.LeaveWordIndexResponse.Item.lang)
}

// string ip = 3;
inline void LeaveWordIndexResponse_Item::clear_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_.ClearToEmpty();
}
inline const std::string& LeaveWordIndexResponse_Item::ip() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LeaveWordIndexResponse.Item.ip)
  return _internal_ip();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeaveWordIndexResponse_Item::set_ip(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.LeaveWordIndexResponse.Item.ip)
}
inline std::string* LeaveWordIndexResponse_Item::mutable_ip() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ip();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LeaveWordIndexResponse.Item.ip)
  return _s;
}
inline const std::string& LeaveWordIndexResponse_Item::_internal_ip() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.ip_.Get();
}
inline void LeaveWordIndexResponse_Item::_internal_set_ip(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.ip_.Set(value, GetArena());
}
inline std::string* LeaveWordIndexResponse_Item::_internal_mutable_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.ip_.Mutable( GetArena());
}
inline std::string* LeaveWordIndexResponse_Item::release_ip() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.LeaveWordIndexResponse.Item.ip)
  return _impl_.ip_.Release();
}
inline void LeaveWordIndexResponse_Item::set_allocated_ip(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.ip_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ip_.IsDefault()) {
          _impl_.ip_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.LeaveWordIndexResponse.Item.ip)
}

// string body = 4;
inline void LeaveWordIndexResponse_Item::clear_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.body_.ClearToEmpty();
}
inline const std::string& LeaveWordIndexResponse_Item::body() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LeaveWordIndexResponse.Item.body)
  return _internal_body();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LeaveWordIndexResponse_Item::set_body(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.body_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.LeaveWordIndexResponse.Item.body)
}
inline std::string* LeaveWordIndexResponse_Item::mutable_body() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_body();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LeaveWordIndexResponse.Item.body)
  return _s;
}
inline const std::string& LeaveWordIndexResponse_Item::_internal_body() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.body_.Get();
}
inline void LeaveWordIndexResponse_Item::_internal_set_body(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.body_.Set(value, GetArena());
}
inline std::string* LeaveWordIndexResponse_Item::_internal_mutable_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.body_.Mutable( GetArena());
}
inline std::string* LeaveWordIndexResponse_Item::release_body() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.LeaveWordIndexResponse.Item.body)
  return _impl_.body_.Release();
}
inline void LeaveWordIndexResponse_Item::set_allocated_body(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.body_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.body_.IsDefault()) {
          _impl_.body_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.LeaveWordIndexResponse.Item.body)
}

// .palm.balsam.v1.MediaEditor editor = 5;
inline void LeaveWordIndexResponse_Item::clear_editor() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.editor_ = 0;
}
inline ::palm::balsam::v1::MediaEditor LeaveWordIndexResponse_Item::editor() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LeaveWordIndexResponse.Item.editor)
  return _internal_editor();
}
inline void LeaveWordIndexResponse_Item::set_editor(::palm::balsam::v1::MediaEditor value) {
  _internal_set_editor(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.LeaveWordIndexResponse.Item.editor)
}
inline ::palm::balsam::v1::MediaEditor LeaveWordIndexResponse_Item::_internal_editor() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::balsam::v1::MediaEditor>(_impl_.editor_);
}
inline void LeaveWordIndexResponse_Item::_internal_set_editor(::palm::balsam::v1::MediaEditor value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.editor_ = value;
}

// .palm.balsam.v1.LeaveWordIndexResponse.Item.Status status = 6;
inline void LeaveWordIndexResponse_Item::clear_status() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.status_ = 0;
}
inline ::palm::balsam::v1::LeaveWordIndexResponse_Item_Status LeaveWordIndexResponse_Item::status() const {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LeaveWordIndexResponse.Item.status)
  return _internal_status();
}
inline void LeaveWordIndexResponse_Item::set_status(::palm::balsam::v1::LeaveWordIndexResponse_Item_Status value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.LeaveWordIndexResponse.Item.status)
}
inline ::palm::balsam::v1::LeaveWordIndexResponse_Item_Status LeaveWordIndexResponse_Item::_internal_status() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return static_cast<::palm::balsam::v1::LeaveWordIndexResponse_Item_Status>(_impl_.status_);
}
inline void LeaveWordIndexResponse_Item::_internal_set_status(::palm::balsam::v1::LeaveWordIndexResponse_Item_Status value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.status_ = value;
}

// optional .google.protobuf.Timestamp published_at = 7;
inline bool LeaveWordIndexResponse_Item::has_published_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.published_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& LeaveWordIndexResponse_Item::_internal_published_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.published_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& LeaveWordIndexResponse_Item::published_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LeaveWordIndexResponse.Item.published_at)
  return _internal_published_at();
}
inline void LeaveWordIndexResponse_Item::unsafe_arena_set_allocated_published_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.published_at_);
  }
  _impl_.published_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.LeaveWordIndexResponse.Item.published_at)
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::release_published_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* released = _impl_.published_at_;
  _impl_.published_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::unsafe_arena_release_published_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.LeaveWordIndexResponse.Item.published_at)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::google::protobuf::Timestamp* temp = _impl_.published_at_;
  _impl_.published_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::_internal_mutable_published_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.published_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.published_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.published_at_;
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::mutable_published_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_published_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LeaveWordIndexResponse.Item.published_at)
  return _msg;
}
inline void LeaveWordIndexResponse_Item::set_allocated_published_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.published_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.published_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.LeaveWordIndexResponse.Item.published_at)
}

// optional .google.protobuf.Timestamp deleted_at = 8;
inline bool LeaveWordIndexResponse_Item::has_deleted_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.deleted_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& LeaveWordIndexResponse_Item::_internal_deleted_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.deleted_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& LeaveWordIndexResponse_Item::deleted_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LeaveWordIndexResponse.Item.deleted_at)
  return _internal_deleted_at();
}
inline void LeaveWordIndexResponse_Item::unsafe_arena_set_allocated_deleted_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deleted_at_);
  }
  _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.LeaveWordIndexResponse.Item.deleted_at)
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::release_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* released = _impl_.deleted_at_;
  _impl_.deleted_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::unsafe_arena_release_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.LeaveWordIndexResponse.Item.deleted_at)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::google::protobuf::Timestamp* temp = _impl_.deleted_at_;
  _impl_.deleted_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::_internal_mutable_deleted_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.deleted_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.deleted_at_;
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::mutable_deleted_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_deleted_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LeaveWordIndexResponse.Item.deleted_at)
  return _msg;
}
inline void LeaveWordIndexResponse_Item::set_allocated_deleted_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.deleted_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.deleted_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.LeaveWordIndexResponse.Item.deleted_at)
}

// .google.protobuf.Timestamp updated_at = 9;
inline bool LeaveWordIndexResponse_Item::has_updated_at() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.updated_at_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& LeaveWordIndexResponse_Item::_internal_updated_at() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::google::protobuf::Timestamp* p = _impl_.updated_at_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& LeaveWordIndexResponse_Item::updated_at() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LeaveWordIndexResponse.Item.updated_at)
  return _internal_updated_at();
}
inline void LeaveWordIndexResponse_Item::unsafe_arena_set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }
  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.LeaveWordIndexResponse.Item.updated_at)
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* released = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::unsafe_arena_release_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.LeaveWordIndexResponse.Item.updated_at)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::google::protobuf::Timestamp* temp = _impl_.updated_at_;
  _impl_.updated_at_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::_internal_mutable_updated_at() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.updated_at_ == nullptr) {
    auto* p = CreateMaybeMessage<::google::protobuf::Timestamp>(GetArena());
    _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.updated_at_;
}
inline ::google::protobuf::Timestamp* LeaveWordIndexResponse_Item::mutable_updated_at() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::Timestamp* _msg = _internal_mutable_updated_at();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LeaveWordIndexResponse.Item.updated_at)
  return _msg;
}
inline void LeaveWordIndexResponse_Item::set_allocated_updated_at(::google::protobuf::Timestamp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.updated_at_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.updated_at_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.LeaveWordIndexResponse.Item.updated_at)
}

// -------------------------------------------------------------------

// LeaveWordIndexResponse

// repeated .palm.balsam.v1.LeaveWordIndexResponse.Item items = 1;
inline int LeaveWordIndexResponse::_internal_items_size() const {
  return _internal_items().size();
}
inline int LeaveWordIndexResponse::items_size() const {
  return _internal_items_size();
}
inline void LeaveWordIndexResponse::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline ::palm::balsam::v1::LeaveWordIndexResponse_Item* LeaveWordIndexResponse::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LeaveWordIndexResponse.items)
  return _internal_mutable_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::LeaveWordIndexResponse_Item>* LeaveWordIndexResponse::mutable_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.LeaveWordIndexResponse.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::palm::balsam::v1::LeaveWordIndexResponse_Item& LeaveWordIndexResponse::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LeaveWordIndexResponse.items)
  return _internal_items().Get(index);
}
inline ::palm::balsam::v1::LeaveWordIndexResponse_Item* LeaveWordIndexResponse::add_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::palm::balsam::v1::LeaveWordIndexResponse_Item* _add = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add:palm.balsam.v1.LeaveWordIndexResponse.items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::LeaveWordIndexResponse_Item>& LeaveWordIndexResponse::items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.LeaveWordIndexResponse.items)
  return _internal_items();
}
inline const ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::LeaveWordIndexResponse_Item>&
LeaveWordIndexResponse::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<::palm::balsam::v1::LeaveWordIndexResponse_Item>*
LeaveWordIndexResponse::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

// .palm.balsam.v1.Pagination pagination = 2;
inline bool LeaveWordIndexResponse::has_pagination() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pagination_ != nullptr);
  return value;
}
inline void LeaveWordIndexResponse::clear_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.pagination_ != nullptr) _impl_.pagination_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::balsam::v1::Pagination& LeaveWordIndexResponse::_internal_pagination() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::Pagination* p = _impl_.pagination_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::Pagination&>(::palm::balsam::v1::_Pagination_default_instance_);
}
inline const ::palm::balsam::v1::Pagination& LeaveWordIndexResponse::pagination() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.LeaveWordIndexResponse.pagination)
  return _internal_pagination();
}
inline void LeaveWordIndexResponse::unsafe_arena_set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pagination_);
  }
  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.LeaveWordIndexResponse.pagination)
}
inline ::palm::balsam::v1::Pagination* LeaveWordIndexResponse::release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* released = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::Pagination* LeaveWordIndexResponse::unsafe_arena_release_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.LeaveWordIndexResponse.pagination)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::Pagination* temp = _impl_.pagination_;
  _impl_.pagination_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::Pagination* LeaveWordIndexResponse::_internal_mutable_pagination() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.pagination_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::Pagination>(GetArena());
    _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(p);
  }
  return _impl_.pagination_;
}
inline ::palm::balsam::v1::Pagination* LeaveWordIndexResponse::mutable_pagination() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::Pagination* _msg = _internal_mutable_pagination();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.LeaveWordIndexResponse.pagination)
  return _msg;
}
inline void LeaveWordIndexResponse::set_allocated_pagination(::palm::balsam::v1::Pagination* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::Pagination*>(_impl_.pagination_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::Pagination*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pagination_ = reinterpret_cast<::palm::balsam::v1::Pagination*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.LeaveWordIndexResponse.pagination)
}

// -------------------------------------------------------------------

// SiteStatusResponse_Redis

// repeated string info = 1;
inline int SiteStatusResponse_Redis::_internal_info_size() const {
  return _internal_info().size();
}
inline int SiteStatusResponse_Redis::info_size() const {
  return _internal_info_size();
}
inline void SiteStatusResponse_Redis::clear_info() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.info_.Clear();
}
inline std::string* SiteStatusResponse_Redis::add_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_info()->Add();
  // @@protoc_insertion_point(field_add_mutable:palm.balsam.v1.SiteStatusResponse.Redis.info)
  return _s;
}
inline const std::string& SiteStatusResponse_Redis::info(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteStatusResponse.Redis.info)
  return _internal_info().Get(index);
}
inline std::string* SiteStatusResponse_Redis::mutable_info(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteStatusResponse.Redis.info)
  return _internal_mutable_info()->Mutable(index);
}
inline void SiteStatusResponse_Redis::set_info(int index, const std::string& value) {
  _internal_mutable_info()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteStatusResponse.Redis.info)
}
inline void SiteStatusResponse_Redis::set_info(int index, std::string&& value) {
  _internal_mutable_info()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteStatusResponse.Redis.info)
}
inline void SiteStatusResponse_Redis::set_info(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_info()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:palm.balsam.v1.SiteStatusResponse.Redis.info)
}
inline void SiteStatusResponse_Redis::set_info(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_info()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:palm.balsam.v1.SiteStatusResponse.Redis.info)
}
inline void SiteStatusResponse_Redis::set_info(int index, absl::string_view value) {
  _internal_mutable_info()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:palm.balsam.v1.SiteStatusResponse.Redis.info)
}
inline void SiteStatusResponse_Redis::add_info(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_info()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:palm.balsam.v1.SiteStatusResponse.Redis.info)
}
inline void SiteStatusResponse_Redis::add_info(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_info()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:palm.balsam.v1.SiteStatusResponse.Redis.info)
}
inline void SiteStatusResponse_Redis::add_info(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_info()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:palm.balsam.v1.SiteStatusResponse.Redis.info)
}
inline void SiteStatusResponse_Redis::add_info(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_info()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:palm.balsam.v1.SiteStatusResponse.Redis.info)
}
inline void SiteStatusResponse_Redis::add_info(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_info()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:palm.balsam.v1.SiteStatusResponse.Redis.info)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteStatusResponse_Redis::info() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.SiteStatusResponse.Redis.info)
  return _internal_info();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteStatusResponse_Redis::mutable_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.SiteStatusResponse.Redis.info)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_info();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteStatusResponse_Redis::_internal_info() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.info_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteStatusResponse_Redis::_internal_mutable_info() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.info_;
}

// repeated string nodes = 2;
inline int SiteStatusResponse_Redis::_internal_nodes_size() const {
  return _internal_nodes().size();
}
inline int SiteStatusResponse_Redis::nodes_size() const {
  return _internal_nodes_size();
}
inline void SiteStatusResponse_Redis::clear_nodes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.nodes_.Clear();
}
inline std::string* SiteStatusResponse_Redis::add_nodes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_nodes()->Add();
  // @@protoc_insertion_point(field_add_mutable:palm.balsam.v1.SiteStatusResponse.Redis.nodes)
  return _s;
}
inline const std::string& SiteStatusResponse_Redis::nodes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteStatusResponse.Redis.nodes)
  return _internal_nodes().Get(index);
}
inline std::string* SiteStatusResponse_Redis::mutable_nodes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteStatusResponse.Redis.nodes)
  return _internal_mutable_nodes()->Mutable(index);
}
inline void SiteStatusResponse_Redis::set_nodes(int index, const std::string& value) {
  _internal_mutable_nodes()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteStatusResponse.Redis.nodes)
}
inline void SiteStatusResponse_Redis::set_nodes(int index, std::string&& value) {
  _internal_mutable_nodes()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteStatusResponse.Redis.nodes)
}
inline void SiteStatusResponse_Redis::set_nodes(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_nodes()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:palm.balsam.v1.SiteStatusResponse.Redis.nodes)
}
inline void SiteStatusResponse_Redis::set_nodes(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_nodes()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:palm.balsam.v1.SiteStatusResponse.Redis.nodes)
}
inline void SiteStatusResponse_Redis::set_nodes(int index, absl::string_view value) {
  _internal_mutable_nodes()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:palm.balsam.v1.SiteStatusResponse.Redis.nodes)
}
inline void SiteStatusResponse_Redis::add_nodes(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_nodes()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:palm.balsam.v1.SiteStatusResponse.Redis.nodes)
}
inline void SiteStatusResponse_Redis::add_nodes(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_nodes()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:palm.balsam.v1.SiteStatusResponse.Redis.nodes)
}
inline void SiteStatusResponse_Redis::add_nodes(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_nodes()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:palm.balsam.v1.SiteStatusResponse.Redis.nodes)
}
inline void SiteStatusResponse_Redis::add_nodes(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_nodes()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:palm.balsam.v1.SiteStatusResponse.Redis.nodes)
}
inline void SiteStatusResponse_Redis::add_nodes(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_nodes()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:palm.balsam.v1.SiteStatusResponse.Redis.nodes)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteStatusResponse_Redis::nodes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.SiteStatusResponse.Redis.nodes)
  return _internal_nodes();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteStatusResponse_Redis::mutable_nodes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.SiteStatusResponse.Redis.nodes)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_nodes();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteStatusResponse_Redis::_internal_nodes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.nodes_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteStatusResponse_Redis::_internal_mutable_nodes() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.nodes_;
}

// -------------------------------------------------------------------

// SiteStatusResponse_PostgreSql

// string version = 1;
inline void SiteStatusResponse_PostgreSql::clear_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_PostgreSql::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteStatusResponse.PostgreSql.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_PostgreSql::set_version(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteStatusResponse.PostgreSql.version)
}
inline std::string* SiteStatusResponse_PostgreSql::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteStatusResponse.PostgreSql.version)
  return _s;
}
inline const std::string& SiteStatusResponse_PostgreSql::_internal_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.version_.Get();
}
inline void SiteStatusResponse_PostgreSql::_internal_set_version(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_PostgreSql::_internal_mutable_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_PostgreSql::release_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteStatusResponse.PostgreSql.version)
  return _impl_.version_.Release();
}
inline void SiteStatusResponse_PostgreSql::set_allocated_version(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.version_.IsDefault()) {
          _impl_.version_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteStatusResponse.PostgreSql.version)
}

// repeated string versions = 2;
inline int SiteStatusResponse_PostgreSql::_internal_versions_size() const {
  return _internal_versions().size();
}
inline int SiteStatusResponse_PostgreSql::versions_size() const {
  return _internal_versions_size();
}
inline void SiteStatusResponse_PostgreSql::clear_versions() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.versions_.Clear();
}
inline std::string* SiteStatusResponse_PostgreSql::add_versions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_versions()->Add();
  // @@protoc_insertion_point(field_add_mutable:palm.balsam.v1.SiteStatusResponse.PostgreSql.versions)
  return _s;
}
inline const std::string& SiteStatusResponse_PostgreSql::versions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteStatusResponse.PostgreSql.versions)
  return _internal_versions().Get(index);
}
inline std::string* SiteStatusResponse_PostgreSql::mutable_versions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteStatusResponse.PostgreSql.versions)
  return _internal_mutable_versions()->Mutable(index);
}
inline void SiteStatusResponse_PostgreSql::set_versions(int index, const std::string& value) {
  _internal_mutable_versions()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteStatusResponse.PostgreSql.versions)
}
inline void SiteStatusResponse_PostgreSql::set_versions(int index, std::string&& value) {
  _internal_mutable_versions()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteStatusResponse.PostgreSql.versions)
}
inline void SiteStatusResponse_PostgreSql::set_versions(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_versions()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:palm.balsam.v1.SiteStatusResponse.PostgreSql.versions)
}
inline void SiteStatusResponse_PostgreSql::set_versions(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_versions()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:palm.balsam.v1.SiteStatusResponse.PostgreSql.versions)
}
inline void SiteStatusResponse_PostgreSql::set_versions(int index, absl::string_view value) {
  _internal_mutable_versions()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:palm.balsam.v1.SiteStatusResponse.PostgreSql.versions)
}
inline void SiteStatusResponse_PostgreSql::add_versions(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_versions()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:palm.balsam.v1.SiteStatusResponse.PostgreSql.versions)
}
inline void SiteStatusResponse_PostgreSql::add_versions(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_versions()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:palm.balsam.v1.SiteStatusResponse.PostgreSql.versions)
}
inline void SiteStatusResponse_PostgreSql::add_versions(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_versions()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:palm.balsam.v1.SiteStatusResponse.PostgreSql.versions)
}
inline void SiteStatusResponse_PostgreSql::add_versions(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_versions()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:palm.balsam.v1.SiteStatusResponse.PostgreSql.versions)
}
inline void SiteStatusResponse_PostgreSql::add_versions(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_versions()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:palm.balsam.v1.SiteStatusResponse.PostgreSql.versions)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteStatusResponse_PostgreSql::versions() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.SiteStatusResponse.PostgreSql.versions)
  return _internal_versions();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteStatusResponse_PostgreSql::mutable_versions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.SiteStatusResponse.PostgreSql.versions)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_versions();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteStatusResponse_PostgreSql::_internal_versions() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.versions_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteStatusResponse_PostgreSql::_internal_mutable_versions() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.versions_;
}

// -------------------------------------------------------------------

// SiteStatusResponse_OpenSearch

// string plugins = 1;
inline void SiteStatusResponse_OpenSearch::clear_plugins() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.plugins_.ClearToEmpty();
}
inline const std::string& SiteStatusResponse_OpenSearch::plugins() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteStatusResponse.OpenSearch.plugins)
  return _internal_plugins();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteStatusResponse_OpenSearch::set_plugins(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plugins_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteStatusResponse.OpenSearch.plugins)
}
inline std::string* SiteStatusResponse_OpenSearch::mutable_plugins() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_plugins();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteStatusResponse.OpenSearch.plugins)
  return _s;
}
inline const std::string& SiteStatusResponse_OpenSearch::_internal_plugins() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.plugins_.Get();
}
inline void SiteStatusResponse_OpenSearch::_internal_set_plugins(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.plugins_.Set(value, GetArena());
}
inline std::string* SiteStatusResponse_OpenSearch::_internal_mutable_plugins() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.plugins_.Mutable( GetArena());
}
inline std::string* SiteStatusResponse_OpenSearch::release_plugins() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteStatusResponse.OpenSearch.plugins)
  return _impl_.plugins_.Release();
}
inline void SiteStatusResponse_OpenSearch::set_allocated_plugins(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.plugins_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.plugins_.IsDefault()) {
          _impl_.plugins_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteStatusResponse.OpenSearch.plugins)
}

// -------------------------------------------------------------------

// SiteStatusResponse

// .palm.balsam.v1.SiteStatusResponse.PostgreSql postgresql = 1;
inline bool SiteStatusResponse::has_postgresql() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.postgresql_ != nullptr);
  return value;
}
inline void SiteStatusResponse::clear_postgresql() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.postgresql_ != nullptr) _impl_.postgresql_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::balsam::v1::SiteStatusResponse_PostgreSql& SiteStatusResponse::_internal_postgresql() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::SiteStatusResponse_PostgreSql* p = _impl_.postgresql_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::SiteStatusResponse_PostgreSql&>(::palm::balsam::v1::_SiteStatusResponse_PostgreSql_default_instance_);
}
inline const ::palm::balsam::v1::SiteStatusResponse_PostgreSql& SiteStatusResponse::postgresql() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteStatusResponse.postgresql)
  return _internal_postgresql();
}
inline void SiteStatusResponse::unsafe_arena_set_allocated_postgresql(::palm::balsam::v1::SiteStatusResponse_PostgreSql* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.postgresql_);
  }
  _impl_.postgresql_ = reinterpret_cast<::palm::balsam::v1::SiteStatusResponse_PostgreSql*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.SiteStatusResponse.postgresql)
}
inline ::palm::balsam::v1::SiteStatusResponse_PostgreSql* SiteStatusResponse::release_postgresql() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::SiteStatusResponse_PostgreSql* released = _impl_.postgresql_;
  _impl_.postgresql_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::SiteStatusResponse_PostgreSql* SiteStatusResponse::unsafe_arena_release_postgresql() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteStatusResponse.postgresql)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::SiteStatusResponse_PostgreSql* temp = _impl_.postgresql_;
  _impl_.postgresql_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::SiteStatusResponse_PostgreSql* SiteStatusResponse::_internal_mutable_postgresql() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.postgresql_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::SiteStatusResponse_PostgreSql>(GetArena());
    _impl_.postgresql_ = reinterpret_cast<::palm::balsam::v1::SiteStatusResponse_PostgreSql*>(p);
  }
  return _impl_.postgresql_;
}
inline ::palm::balsam::v1::SiteStatusResponse_PostgreSql* SiteStatusResponse::mutable_postgresql() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::SiteStatusResponse_PostgreSql* _msg = _internal_mutable_postgresql();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteStatusResponse.postgresql)
  return _msg;
}
inline void SiteStatusResponse::set_allocated_postgresql(::palm::balsam::v1::SiteStatusResponse_PostgreSql* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::SiteStatusResponse_PostgreSql*>(_impl_.postgresql_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::SiteStatusResponse_PostgreSql*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.postgresql_ = reinterpret_cast<::palm::balsam::v1::SiteStatusResponse_PostgreSql*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteStatusResponse.postgresql)
}

// .palm.balsam.v1.SiteStatusResponse.Redis redis = 2;
inline bool SiteStatusResponse::has_redis() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.redis_ != nullptr);
  return value;
}
inline void SiteStatusResponse::clear_redis() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.redis_ != nullptr) _impl_.redis_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::palm::balsam::v1::SiteStatusResponse_Redis& SiteStatusResponse::_internal_redis() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::SiteStatusResponse_Redis* p = _impl_.redis_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::SiteStatusResponse_Redis&>(::palm::balsam::v1::_SiteStatusResponse_Redis_default_instance_);
}
inline const ::palm::balsam::v1::SiteStatusResponse_Redis& SiteStatusResponse::redis() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteStatusResponse.redis)
  return _internal_redis();
}
inline void SiteStatusResponse::unsafe_arena_set_allocated_redis(::palm::balsam::v1::SiteStatusResponse_Redis* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.redis_);
  }
  _impl_.redis_ = reinterpret_cast<::palm::balsam::v1::SiteStatusResponse_Redis*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.SiteStatusResponse.redis)
}
inline ::palm::balsam::v1::SiteStatusResponse_Redis* SiteStatusResponse::release_redis() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::palm::balsam::v1::SiteStatusResponse_Redis* released = _impl_.redis_;
  _impl_.redis_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::SiteStatusResponse_Redis* SiteStatusResponse::unsafe_arena_release_redis() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteStatusResponse.redis)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::palm::balsam::v1::SiteStatusResponse_Redis* temp = _impl_.redis_;
  _impl_.redis_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::SiteStatusResponse_Redis* SiteStatusResponse::_internal_mutable_redis() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.redis_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::SiteStatusResponse_Redis>(GetArena());
    _impl_.redis_ = reinterpret_cast<::palm::balsam::v1::SiteStatusResponse_Redis*>(p);
  }
  return _impl_.redis_;
}
inline ::palm::balsam::v1::SiteStatusResponse_Redis* SiteStatusResponse::mutable_redis() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::SiteStatusResponse_Redis* _msg = _internal_mutable_redis();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteStatusResponse.redis)
  return _msg;
}
inline void SiteStatusResponse::set_allocated_redis(::palm::balsam::v1::SiteStatusResponse_Redis* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::SiteStatusResponse_Redis*>(_impl_.redis_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::SiteStatusResponse_Redis*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.redis_ = reinterpret_cast<::palm::balsam::v1::SiteStatusResponse_Redis*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteStatusResponse.redis)
}

// .palm.balsam.v1.SiteStatusResponse.OpenSearch opensearch = 3;
inline bool SiteStatusResponse::has_opensearch() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.opensearch_ != nullptr);
  return value;
}
inline void SiteStatusResponse::clear_opensearch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.opensearch_ != nullptr) _impl_.opensearch_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::palm::balsam::v1::SiteStatusResponse_OpenSearch& SiteStatusResponse::_internal_opensearch() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::SiteStatusResponse_OpenSearch* p = _impl_.opensearch_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::SiteStatusResponse_OpenSearch&>(::palm::balsam::v1::_SiteStatusResponse_OpenSearch_default_instance_);
}
inline const ::palm::balsam::v1::SiteStatusResponse_OpenSearch& SiteStatusResponse::opensearch() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteStatusResponse.opensearch)
  return _internal_opensearch();
}
inline void SiteStatusResponse::unsafe_arena_set_allocated_opensearch(::palm::balsam::v1::SiteStatusResponse_OpenSearch* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.opensearch_);
  }
  _impl_.opensearch_ = reinterpret_cast<::palm::balsam::v1::SiteStatusResponse_OpenSearch*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.SiteStatusResponse.opensearch)
}
inline ::palm::balsam::v1::SiteStatusResponse_OpenSearch* SiteStatusResponse::release_opensearch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::palm::balsam::v1::SiteStatusResponse_OpenSearch* released = _impl_.opensearch_;
  _impl_.opensearch_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::SiteStatusResponse_OpenSearch* SiteStatusResponse::unsafe_arena_release_opensearch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteStatusResponse.opensearch)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::palm::balsam::v1::SiteStatusResponse_OpenSearch* temp = _impl_.opensearch_;
  _impl_.opensearch_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::SiteStatusResponse_OpenSearch* SiteStatusResponse::_internal_mutable_opensearch() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.opensearch_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::SiteStatusResponse_OpenSearch>(GetArena());
    _impl_.opensearch_ = reinterpret_cast<::palm::balsam::v1::SiteStatusResponse_OpenSearch*>(p);
  }
  return _impl_.opensearch_;
}
inline ::palm::balsam::v1::SiteStatusResponse_OpenSearch* SiteStatusResponse::mutable_opensearch() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::SiteStatusResponse_OpenSearch* _msg = _internal_mutable_opensearch();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteStatusResponse.opensearch)
  return _msg;
}
inline void SiteStatusResponse::set_allocated_opensearch(::palm::balsam::v1::SiteStatusResponse_OpenSearch* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::SiteStatusResponse_OpenSearch*>(_impl_.opensearch_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::SiteStatusResponse_OpenSearch*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.opensearch_ = reinterpret_cast<::palm::balsam::v1::SiteStatusResponse_OpenSearch*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteStatusResponse.opensearch)
}

// -------------------------------------------------------------------

// SiteIndexNowAccount_WebSiteVerify

// string key = 1;
inline void SiteIndexNowAccount_WebSiteVerify::clear_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& SiteIndexNowAccount_WebSiteVerify::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteIndexNowAccount.WebSiteVerify.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteIndexNowAccount_WebSiteVerify::set_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteIndexNowAccount.WebSiteVerify.key)
}
inline std::string* SiteIndexNowAccount_WebSiteVerify::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteIndexNowAccount.WebSiteVerify.key)
  return _s;
}
inline const std::string& SiteIndexNowAccount_WebSiteVerify::_internal_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.key_.Get();
}
inline void SiteIndexNowAccount_WebSiteVerify::_internal_set_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.key_.Set(value, GetArena());
}
inline std::string* SiteIndexNowAccount_WebSiteVerify::_internal_mutable_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* SiteIndexNowAccount_WebSiteVerify::release_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteIndexNowAccount.WebSiteVerify.key)
  return _impl_.key_.Release();
}
inline void SiteIndexNowAccount_WebSiteVerify::set_allocated_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteIndexNowAccount.WebSiteVerify.key)
}

// -------------------------------------------------------------------

// SiteIndexNowAccount

// optional .palm.balsam.v1.SiteIndexNowAccount.WebSiteVerify web_site_verify = 1;
inline bool SiteIndexNowAccount::has_web_site_verify() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.web_site_verify_ != nullptr);
  return value;
}
inline void SiteIndexNowAccount::clear_web_site_verify() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.web_site_verify_ != nullptr) _impl_.web_site_verify_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify& SiteIndexNowAccount::_internal_web_site_verify() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify* p = _impl_.web_site_verify_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify&>(::palm::balsam::v1::_SiteIndexNowAccount_WebSiteVerify_default_instance_);
}
inline const ::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify& SiteIndexNowAccount::web_site_verify() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteIndexNowAccount.web_site_verify)
  return _internal_web_site_verify();
}
inline void SiteIndexNowAccount::unsafe_arena_set_allocated_web_site_verify(::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.web_site_verify_);
  }
  _impl_.web_site_verify_ = reinterpret_cast<::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.SiteIndexNowAccount.web_site_verify)
}
inline ::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify* SiteIndexNowAccount::release_web_site_verify() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify* released = _impl_.web_site_verify_;
  _impl_.web_site_verify_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify* SiteIndexNowAccount::unsafe_arena_release_web_site_verify() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteIndexNowAccount.web_site_verify)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify* temp = _impl_.web_site_verify_;
  _impl_.web_site_verify_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify* SiteIndexNowAccount::_internal_mutable_web_site_verify() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.web_site_verify_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify>(GetArena());
    _impl_.web_site_verify_ = reinterpret_cast<::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify*>(p);
  }
  return _impl_.web_site_verify_;
}
inline ::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify* SiteIndexNowAccount::mutable_web_site_verify() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify* _msg = _internal_mutable_web_site_verify();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteIndexNowAccount.web_site_verify)
  return _msg;
}
inline void SiteIndexNowAccount::set_allocated_web_site_verify(::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify*>(_impl_.web_site_verify_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.web_site_verify_ = reinterpret_cast<::palm::balsam::v1::SiteIndexNowAccount_WebSiteVerify*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteIndexNowAccount.web_site_verify)
}

// -------------------------------------------------------------------

// SiteGoogleAccount_WebSiteVerify

// string code = 1;
inline void SiteGoogleAccount_WebSiteVerify::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& SiteGoogleAccount_WebSiteVerify::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteGoogleAccount.WebSiteVerify.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteGoogleAccount_WebSiteVerify::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteGoogleAccount.WebSiteVerify.code)
}
inline std::string* SiteGoogleAccount_WebSiteVerify::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteGoogleAccount.WebSiteVerify.code)
  return _s;
}
inline const std::string& SiteGoogleAccount_WebSiteVerify::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void SiteGoogleAccount_WebSiteVerify::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* SiteGoogleAccount_WebSiteVerify::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* SiteGoogleAccount_WebSiteVerify::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteGoogleAccount.WebSiteVerify.code)
  return _impl_.code_.Release();
}
inline void SiteGoogleAccount_WebSiteVerify::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteGoogleAccount.WebSiteVerify.code)
}

// -------------------------------------------------------------------

// SiteGoogleAccount_ReCaptcha

// string site_key = 1;
inline void SiteGoogleAccount_ReCaptcha::clear_site_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.site_key_.ClearToEmpty();
}
inline const std::string& SiteGoogleAccount_ReCaptcha::site_key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteGoogleAccount.ReCaptcha.site_key)
  return _internal_site_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteGoogleAccount_ReCaptcha::set_site_key(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.site_key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteGoogleAccount.ReCaptcha.site_key)
}
inline std::string* SiteGoogleAccount_ReCaptcha::mutable_site_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_site_key();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteGoogleAccount.ReCaptcha.site_key)
  return _s;
}
inline const std::string& SiteGoogleAccount_ReCaptcha::_internal_site_key() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.site_key_.Get();
}
inline void SiteGoogleAccount_ReCaptcha::_internal_set_site_key(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.site_key_.Set(value, GetArena());
}
inline std::string* SiteGoogleAccount_ReCaptcha::_internal_mutable_site_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.site_key_.Mutable( GetArena());
}
inline std::string* SiteGoogleAccount_ReCaptcha::release_site_key() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteGoogleAccount.ReCaptcha.site_key)
  return _impl_.site_key_.Release();
}
inline void SiteGoogleAccount_ReCaptcha::set_allocated_site_key(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.site_key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.site_key_.IsDefault()) {
          _impl_.site_key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteGoogleAccount.ReCaptcha.site_key)
}

// string secret = 2;
inline void SiteGoogleAccount_ReCaptcha::clear_secret() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.secret_.ClearToEmpty();
}
inline const std::string& SiteGoogleAccount_ReCaptcha::secret() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteGoogleAccount.ReCaptcha.secret)
  return _internal_secret();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteGoogleAccount_ReCaptcha::set_secret(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.secret_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteGoogleAccount.ReCaptcha.secret)
}
inline std::string* SiteGoogleAccount_ReCaptcha::mutable_secret() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_secret();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteGoogleAccount.ReCaptcha.secret)
  return _s;
}
inline const std::string& SiteGoogleAccount_ReCaptcha::_internal_secret() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.secret_.Get();
}
inline void SiteGoogleAccount_ReCaptcha::_internal_set_secret(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.secret_.Set(value, GetArena());
}
inline std::string* SiteGoogleAccount_ReCaptcha::_internal_mutable_secret() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.secret_.Mutable( GetArena());
}
inline std::string* SiteGoogleAccount_ReCaptcha::release_secret() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteGoogleAccount.ReCaptcha.secret)
  return _impl_.secret_.Release();
}
inline void SiteGoogleAccount_ReCaptcha::set_allocated_secret(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.secret_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.secret_.IsDefault()) {
          _impl_.secret_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteGoogleAccount.ReCaptcha.secret)
}

// -------------------------------------------------------------------

// SiteGoogleAccount

// optional .palm.balsam.v1.SiteGoogleAccount.WebSiteVerify web_site_verify = 1;
inline bool SiteGoogleAccount::has_web_site_verify() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.web_site_verify_ != nullptr);
  return value;
}
inline void SiteGoogleAccount::clear_web_site_verify() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.web_site_verify_ != nullptr) _impl_.web_site_verify_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify& SiteGoogleAccount::_internal_web_site_verify() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify* p = _impl_.web_site_verify_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify&>(::palm::balsam::v1::_SiteGoogleAccount_WebSiteVerify_default_instance_);
}
inline const ::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify& SiteGoogleAccount::web_site_verify() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteGoogleAccount.web_site_verify)
  return _internal_web_site_verify();
}
inline void SiteGoogleAccount::unsafe_arena_set_allocated_web_site_verify(::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.web_site_verify_);
  }
  _impl_.web_site_verify_ = reinterpret_cast<::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.SiteGoogleAccount.web_site_verify)
}
inline ::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify* SiteGoogleAccount::release_web_site_verify() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify* released = _impl_.web_site_verify_;
  _impl_.web_site_verify_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify* SiteGoogleAccount::unsafe_arena_release_web_site_verify() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteGoogleAccount.web_site_verify)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify* temp = _impl_.web_site_verify_;
  _impl_.web_site_verify_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify* SiteGoogleAccount::_internal_mutable_web_site_verify() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.web_site_verify_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify>(GetArena());
    _impl_.web_site_verify_ = reinterpret_cast<::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify*>(p);
  }
  return _impl_.web_site_verify_;
}
inline ::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify* SiteGoogleAccount::mutable_web_site_verify() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify* _msg = _internal_mutable_web_site_verify();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteGoogleAccount.web_site_verify)
  return _msg;
}
inline void SiteGoogleAccount::set_allocated_web_site_verify(::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify*>(_impl_.web_site_verify_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.web_site_verify_ = reinterpret_cast<::palm::balsam::v1::SiteGoogleAccount_WebSiteVerify*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteGoogleAccount.web_site_verify)
}

// optional .palm.balsam.v1.SiteGoogleAccount.ReCaptcha re_captcha = 2;
inline bool SiteGoogleAccount::has_re_captcha() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.re_captcha_ != nullptr);
  return value;
}
inline void SiteGoogleAccount::clear_re_captcha() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.re_captcha_ != nullptr) _impl_.re_captcha_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::palm::balsam::v1::SiteGoogleAccount_ReCaptcha& SiteGoogleAccount::_internal_re_captcha() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::SiteGoogleAccount_ReCaptcha* p = _impl_.re_captcha_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::SiteGoogleAccount_ReCaptcha&>(::palm::balsam::v1::_SiteGoogleAccount_ReCaptcha_default_instance_);
}
inline const ::palm::balsam::v1::SiteGoogleAccount_ReCaptcha& SiteGoogleAccount::re_captcha() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteGoogleAccount.re_captcha)
  return _internal_re_captcha();
}
inline void SiteGoogleAccount::unsafe_arena_set_allocated_re_captcha(::palm::balsam::v1::SiteGoogleAccount_ReCaptcha* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.re_captcha_);
  }
  _impl_.re_captcha_ = reinterpret_cast<::palm::balsam::v1::SiteGoogleAccount_ReCaptcha*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.SiteGoogleAccount.re_captcha)
}
inline ::palm::balsam::v1::SiteGoogleAccount_ReCaptcha* SiteGoogleAccount::release_re_captcha() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::palm::balsam::v1::SiteGoogleAccount_ReCaptcha* released = _impl_.re_captcha_;
  _impl_.re_captcha_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::SiteGoogleAccount_ReCaptcha* SiteGoogleAccount::unsafe_arena_release_re_captcha() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteGoogleAccount.re_captcha)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::palm::balsam::v1::SiteGoogleAccount_ReCaptcha* temp = _impl_.re_captcha_;
  _impl_.re_captcha_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::SiteGoogleAccount_ReCaptcha* SiteGoogleAccount::_internal_mutable_re_captcha() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.re_captcha_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::SiteGoogleAccount_ReCaptcha>(GetArena());
    _impl_.re_captcha_ = reinterpret_cast<::palm::balsam::v1::SiteGoogleAccount_ReCaptcha*>(p);
  }
  return _impl_.re_captcha_;
}
inline ::palm::balsam::v1::SiteGoogleAccount_ReCaptcha* SiteGoogleAccount::mutable_re_captcha() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::SiteGoogleAccount_ReCaptcha* _msg = _internal_mutable_re_captcha();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteGoogleAccount.re_captcha)
  return _msg;
}
inline void SiteGoogleAccount::set_allocated_re_captcha(::palm::balsam::v1::SiteGoogleAccount_ReCaptcha* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::SiteGoogleAccount_ReCaptcha*>(_impl_.re_captcha_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::SiteGoogleAccount_ReCaptcha*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.re_captcha_ = reinterpret_cast<::palm::balsam::v1::SiteGoogleAccount_ReCaptcha*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteGoogleAccount.re_captcha)
}

// -------------------------------------------------------------------

// SiteBaiduAccount_WebSiteVerify

// string code = 1;
inline void SiteBaiduAccount_WebSiteVerify::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& SiteBaiduAccount_WebSiteVerify::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteBaiduAccount.WebSiteVerify.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteBaiduAccount_WebSiteVerify::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteBaiduAccount.WebSiteVerify.code)
}
inline std::string* SiteBaiduAccount_WebSiteVerify::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteBaiduAccount.WebSiteVerify.code)
  return _s;
}
inline const std::string& SiteBaiduAccount_WebSiteVerify::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void SiteBaiduAccount_WebSiteVerify::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* SiteBaiduAccount_WebSiteVerify::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* SiteBaiduAccount_WebSiteVerify::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteBaiduAccount.WebSiteVerify.code)
  return _impl_.code_.Release();
}
inline void SiteBaiduAccount_WebSiteVerify::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteBaiduAccount.WebSiteVerify.code)
}

// string content = 2;
inline void SiteBaiduAccount_WebSiteVerify::clear_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_.ClearToEmpty();
}
inline const std::string& SiteBaiduAccount_WebSiteVerify::content() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteBaiduAccount.WebSiteVerify.content)
  return _internal_content();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteBaiduAccount_WebSiteVerify::set_content(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteBaiduAccount.WebSiteVerify.content)
}
inline std::string* SiteBaiduAccount_WebSiteVerify::mutable_content() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_content();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteBaiduAccount.WebSiteVerify.content)
  return _s;
}
inline const std::string& SiteBaiduAccount_WebSiteVerify::_internal_content() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.content_.Get();
}
inline void SiteBaiduAccount_WebSiteVerify::_internal_set_content(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.content_.Set(value, GetArena());
}
inline std::string* SiteBaiduAccount_WebSiteVerify::_internal_mutable_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.content_.Mutable( GetArena());
}
inline std::string* SiteBaiduAccount_WebSiteVerify::release_content() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteBaiduAccount.WebSiteVerify.content)
  return _impl_.content_.Release();
}
inline void SiteBaiduAccount_WebSiteVerify::set_allocated_content(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.content_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.content_.IsDefault()) {
          _impl_.content_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteBaiduAccount.WebSiteVerify.content)
}

// -------------------------------------------------------------------

// SiteBaiduAccount

// optional .palm.balsam.v1.SiteBaiduAccount.WebSiteVerify web_site_verify = 1;
inline bool SiteBaiduAccount::has_web_site_verify() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.web_site_verify_ != nullptr);
  return value;
}
inline void SiteBaiduAccount::clear_web_site_verify() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.web_site_verify_ != nullptr) _impl_.web_site_verify_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify& SiteBaiduAccount::_internal_web_site_verify() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify* p = _impl_.web_site_verify_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify&>(::palm::balsam::v1::_SiteBaiduAccount_WebSiteVerify_default_instance_);
}
inline const ::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify& SiteBaiduAccount::web_site_verify() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteBaiduAccount.web_site_verify)
  return _internal_web_site_verify();
}
inline void SiteBaiduAccount::unsafe_arena_set_allocated_web_site_verify(::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.web_site_verify_);
  }
  _impl_.web_site_verify_ = reinterpret_cast<::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.SiteBaiduAccount.web_site_verify)
}
inline ::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify* SiteBaiduAccount::release_web_site_verify() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify* released = _impl_.web_site_verify_;
  _impl_.web_site_verify_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify* SiteBaiduAccount::unsafe_arena_release_web_site_verify() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteBaiduAccount.web_site_verify)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify* temp = _impl_.web_site_verify_;
  _impl_.web_site_verify_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify* SiteBaiduAccount::_internal_mutable_web_site_verify() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.web_site_verify_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify>(GetArena());
    _impl_.web_site_verify_ = reinterpret_cast<::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify*>(p);
  }
  return _impl_.web_site_verify_;
}
inline ::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify* SiteBaiduAccount::mutable_web_site_verify() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify* _msg = _internal_mutable_web_site_verify();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteBaiduAccount.web_site_verify)
  return _msg;
}
inline void SiteBaiduAccount::set_allocated_web_site_verify(::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify*>(_impl_.web_site_verify_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.web_site_verify_ = reinterpret_cast<::palm::balsam::v1::SiteBaiduAccount_WebSiteVerify*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteBaiduAccount.web_site_verify)
}

// -------------------------------------------------------------------

// SiteGetInfoByLangRequest

// string lang = 1;
inline void SiteGetInfoByLangRequest::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& SiteGetInfoByLangRequest::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteGetInfoByLangRequest.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteGetInfoByLangRequest::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteGetInfoByLangRequest.lang)
}
inline std::string* SiteGetInfoByLangRequest::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteGetInfoByLangRequest.lang)
  return _s;
}
inline const std::string& SiteGetInfoByLangRequest::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void SiteGetInfoByLangRequest::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* SiteGetInfoByLangRequest::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* SiteGetInfoByLangRequest::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteGetInfoByLangRequest.lang)
  return _impl_.lang_.Release();
}
inline void SiteGetInfoByLangRequest::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteGetInfoByLangRequest.lang)
}

// -------------------------------------------------------------------

// SiteGetInfoByLangResponse

// string title = 1;
inline void SiteGetInfoByLangResponse::clear_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& SiteGetInfoByLangResponse::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteGetInfoByLangResponse.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteGetInfoByLangResponse::set_title(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteGetInfoByLangResponse.title)
}
inline std::string* SiteGetInfoByLangResponse::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteGetInfoByLangResponse.title)
  return _s;
}
inline const std::string& SiteGetInfoByLangResponse::_internal_title() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.title_.Get();
}
inline void SiteGetInfoByLangResponse::_internal_set_title(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(value, GetArena());
}
inline std::string* SiteGetInfoByLangResponse::_internal_mutable_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* SiteGetInfoByLangResponse::release_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteGetInfoByLangResponse.title)
  return _impl_.title_.Release();
}
inline void SiteGetInfoByLangResponse::set_allocated_title(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteGetInfoByLangResponse.title)
}

// string subhead = 2;
inline void SiteGetInfoByLangResponse::clear_subhead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subhead_.ClearToEmpty();
}
inline const std::string& SiteGetInfoByLangResponse::subhead() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteGetInfoByLangResponse.subhead)
  return _internal_subhead();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteGetInfoByLangResponse::set_subhead(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subhead_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteGetInfoByLangResponse.subhead)
}
inline std::string* SiteGetInfoByLangResponse::mutable_subhead() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subhead();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteGetInfoByLangResponse.subhead)
  return _s;
}
inline const std::string& SiteGetInfoByLangResponse::_internal_subhead() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subhead_.Get();
}
inline void SiteGetInfoByLangResponse::_internal_set_subhead(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subhead_.Set(value, GetArena());
}
inline std::string* SiteGetInfoByLangResponse::_internal_mutable_subhead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.subhead_.Mutable( GetArena());
}
inline std::string* SiteGetInfoByLangResponse::release_subhead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteGetInfoByLangResponse.subhead)
  return _impl_.subhead_.Release();
}
inline void SiteGetInfoByLangResponse::set_allocated_subhead(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subhead_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subhead_.IsDefault()) {
          _impl_.subhead_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteGetInfoByLangResponse.subhead)
}

// string description = 3;
inline void SiteGetInfoByLangResponse::clear_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& SiteGetInfoByLangResponse::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteGetInfoByLangResponse.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteGetInfoByLangResponse::set_description(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteGetInfoByLangResponse.description)
}
inline std::string* SiteGetInfoByLangResponse::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteGetInfoByLangResponse.description)
  return _s;
}
inline const std::string& SiteGetInfoByLangResponse::_internal_description() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.description_.Get();
}
inline void SiteGetInfoByLangResponse::_internal_set_description(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.description_.Set(value, GetArena());
}
inline std::string* SiteGetInfoByLangResponse::_internal_mutable_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* SiteGetInfoByLangResponse::release_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteGetInfoByLangResponse.description)
  return _impl_.description_.Release();
}
inline void SiteGetInfoByLangResponse::set_allocated_description(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteGetInfoByLangResponse.description)
}

// string copyright = 4;
inline void SiteGetInfoByLangResponse::clear_copyright() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.copyright_.ClearToEmpty();
}
inline const std::string& SiteGetInfoByLangResponse::copyright() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteGetInfoByLangResponse.copyright)
  return _internal_copyright();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteGetInfoByLangResponse::set_copyright(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.copyright_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteGetInfoByLangResponse.copyright)
}
inline std::string* SiteGetInfoByLangResponse::mutable_copyright() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_copyright();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteGetInfoByLangResponse.copyright)
  return _s;
}
inline const std::string& SiteGetInfoByLangResponse::_internal_copyright() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.copyright_.Get();
}
inline void SiteGetInfoByLangResponse::_internal_set_copyright(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.copyright_.Set(value, GetArena());
}
inline std::string* SiteGetInfoByLangResponse::_internal_mutable_copyright() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.copyright_.Mutable( GetArena());
}
inline std::string* SiteGetInfoByLangResponse::release_copyright() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteGetInfoByLangResponse.copyright)
  return _impl_.copyright_.Release();
}
inline void SiteGetInfoByLangResponse::set_allocated_copyright(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.copyright_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.copyright_.IsDefault()) {
          _impl_.copyright_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteGetInfoByLangResponse.copyright)
}

// -------------------------------------------------------------------

// SiteLayoutResponse_Author

// string name = 1;
inline void SiteLayoutResponse_Author::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse_Author::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteLayoutResponse.Author.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse_Author::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteLayoutResponse.Author.name)
}
inline std::string* SiteLayoutResponse_Author::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteLayoutResponse.Author.name)
  return _s;
}
inline const std::string& SiteLayoutResponse_Author::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void SiteLayoutResponse_Author::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse_Author::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse_Author::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteLayoutResponse.Author.name)
  return _impl_.name_.Release();
}
inline void SiteLayoutResponse_Author::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteLayoutResponse.Author.name)
}

// string email = 2;
inline void SiteLayoutResponse_Author::clear_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse_Author::email() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteLayoutResponse.Author.email)
  return _internal_email();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse_Author::set_email(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteLayoutResponse.Author.email)
}
inline std::string* SiteLayoutResponse_Author::mutable_email() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_email();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteLayoutResponse.Author.email)
  return _s;
}
inline const std::string& SiteLayoutResponse_Author::_internal_email() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.email_.Get();
}
inline void SiteLayoutResponse_Author::_internal_set_email(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.email_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse_Author::_internal_mutable_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.email_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse_Author::release_email() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteLayoutResponse.Author.email)
  return _impl_.email_.Release();
}
inline void SiteLayoutResponse_Author::set_allocated_email(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.email_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.email_.IsDefault()) {
          _impl_.email_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteLayoutResponse.Author.email)
}

// -------------------------------------------------------------------

// SiteLayoutResponse_CnGab

// string code = 1;
inline void SiteLayoutResponse_CnGab::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse_CnGab::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteLayoutResponse.CnGab.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse_CnGab::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteLayoutResponse.CnGab.code)
}
inline std::string* SiteLayoutResponse_CnGab::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteLayoutResponse.CnGab.code)
  return _s;
}
inline const std::string& SiteLayoutResponse_CnGab::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void SiteLayoutResponse_CnGab::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse_CnGab::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse_CnGab::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteLayoutResponse.CnGab.code)
  return _impl_.code_.Release();
}
inline void SiteLayoutResponse_CnGab::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteLayoutResponse.CnGab.code)
}

// string name = 2;
inline void SiteLayoutResponse_CnGab::clear_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse_CnGab::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteLayoutResponse.CnGab.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse_CnGab::set_name(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteLayoutResponse.CnGab.name)
}
inline std::string* SiteLayoutResponse_CnGab::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteLayoutResponse.CnGab.name)
  return _s;
}
inline const std::string& SiteLayoutResponse_CnGab::_internal_name() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.name_.Get();
}
inline void SiteLayoutResponse_CnGab::_internal_set_name(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.name_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse_CnGab::_internal_mutable_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse_CnGab::release_name() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteLayoutResponse.CnGab.name)
  return _impl_.name_.Release();
}
inline void SiteLayoutResponse_CnGab::set_allocated_name(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteLayoutResponse.CnGab.name)
}

// -------------------------------------------------------------------

// SiteLayoutResponse_CnIcp

// string code = 1;
inline void SiteLayoutResponse_CnIcp::clear_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse_CnIcp::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteLayoutResponse.CnIcp.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse_CnIcp::set_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteLayoutResponse.CnIcp.code)
}
inline std::string* SiteLayoutResponse_CnIcp::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteLayoutResponse.CnIcp.code)
  return _s;
}
inline const std::string& SiteLayoutResponse_CnIcp::_internal_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.code_.Get();
}
inline void SiteLayoutResponse_CnIcp::_internal_set_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.code_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse_CnIcp::_internal_mutable_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse_CnIcp::release_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteLayoutResponse.CnIcp.code)
  return _impl_.code_.Release();
}
inline void SiteLayoutResponse_CnIcp::set_allocated_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteLayoutResponse.CnIcp.code)
}

// -------------------------------------------------------------------

// SiteLayoutResponse

// string title = 1;
inline void SiteLayoutResponse::clear_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteLayoutResponse.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse::set_title(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteLayoutResponse.title)
}
inline std::string* SiteLayoutResponse::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteLayoutResponse.title)
  return _s;
}
inline const std::string& SiteLayoutResponse::_internal_title() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.title_.Get();
}
inline void SiteLayoutResponse::_internal_set_title(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse::_internal_mutable_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse::release_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteLayoutResponse.title)
  return _impl_.title_.Release();
}
inline void SiteLayoutResponse::set_allocated_title(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteLayoutResponse.title)
}

// string subhead = 2;
inline void SiteLayoutResponse::clear_subhead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subhead_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse::subhead() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteLayoutResponse.subhead)
  return _internal_subhead();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse::set_subhead(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subhead_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteLayoutResponse.subhead)
}
inline std::string* SiteLayoutResponse::mutable_subhead() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subhead();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteLayoutResponse.subhead)
  return _s;
}
inline const std::string& SiteLayoutResponse::_internal_subhead() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subhead_.Get();
}
inline void SiteLayoutResponse::_internal_set_subhead(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subhead_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse::_internal_mutable_subhead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.subhead_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse::release_subhead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteLayoutResponse.subhead)
  return _impl_.subhead_.Release();
}
inline void SiteLayoutResponse::set_allocated_subhead(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subhead_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subhead_.IsDefault()) {
          _impl_.subhead_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteLayoutResponse.subhead)
}

// string description = 3;
inline void SiteLayoutResponse::clear_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteLayoutResponse.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse::set_description(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteLayoutResponse.description)
}
inline std::string* SiteLayoutResponse::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteLayoutResponse.description)
  return _s;
}
inline const std::string& SiteLayoutResponse::_internal_description() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.description_.Get();
}
inline void SiteLayoutResponse::_internal_set_description(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.description_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse::_internal_mutable_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse::release_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteLayoutResponse.description)
  return _impl_.description_.Release();
}
inline void SiteLayoutResponse::set_allocated_description(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteLayoutResponse.description)
}

// string copyright = 4;
inline void SiteLayoutResponse::clear_copyright() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.copyright_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse::copyright() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteLayoutResponse.copyright)
  return _internal_copyright();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse::set_copyright(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.copyright_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteLayoutResponse.copyright)
}
inline std::string* SiteLayoutResponse::mutable_copyright() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_copyright();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteLayoutResponse.copyright)
  return _s;
}
inline const std::string& SiteLayoutResponse::_internal_copyright() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.copyright_.Get();
}
inline void SiteLayoutResponse::_internal_set_copyright(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.copyright_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse::_internal_mutable_copyright() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.copyright_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse::release_copyright() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteLayoutResponse.copyright)
  return _impl_.copyright_.Release();
}
inline void SiteLayoutResponse::set_allocated_copyright(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.copyright_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.copyright_.IsDefault()) {
          _impl_.copyright_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteLayoutResponse.copyright)
}

// .palm.balsam.v1.SiteLayoutResponse.Author author = 5;
inline bool SiteLayoutResponse::has_author() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.author_ != nullptr);
  return value;
}
inline void SiteLayoutResponse::clear_author() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.author_ != nullptr) _impl_.author_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::palm::balsam::v1::SiteLayoutResponse_Author& SiteLayoutResponse::_internal_author() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::SiteLayoutResponse_Author* p = _impl_.author_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::SiteLayoutResponse_Author&>(::palm::balsam::v1::_SiteLayoutResponse_Author_default_instance_);
}
inline const ::palm::balsam::v1::SiteLayoutResponse_Author& SiteLayoutResponse::author() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteLayoutResponse.author)
  return _internal_author();
}
inline void SiteLayoutResponse::unsafe_arena_set_allocated_author(::palm::balsam::v1::SiteLayoutResponse_Author* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.author_);
  }
  _impl_.author_ = reinterpret_cast<::palm::balsam::v1::SiteLayoutResponse_Author*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.SiteLayoutResponse.author)
}
inline ::palm::balsam::v1::SiteLayoutResponse_Author* SiteLayoutResponse::release_author() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::SiteLayoutResponse_Author* released = _impl_.author_;
  _impl_.author_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::SiteLayoutResponse_Author* SiteLayoutResponse::unsafe_arena_release_author() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteLayoutResponse.author)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::palm::balsam::v1::SiteLayoutResponse_Author* temp = _impl_.author_;
  _impl_.author_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::SiteLayoutResponse_Author* SiteLayoutResponse::_internal_mutable_author() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000001u;
  if (_impl_.author_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::SiteLayoutResponse_Author>(GetArena());
    _impl_.author_ = reinterpret_cast<::palm::balsam::v1::SiteLayoutResponse_Author*>(p);
  }
  return _impl_.author_;
}
inline ::palm::balsam::v1::SiteLayoutResponse_Author* SiteLayoutResponse::mutable_author() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::SiteLayoutResponse_Author* _msg = _internal_mutable_author();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteLayoutResponse.author)
  return _msg;
}
inline void SiteLayoutResponse::set_allocated_author(::palm::balsam::v1::SiteLayoutResponse_Author* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::SiteLayoutResponse_Author*>(_impl_.author_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::SiteLayoutResponse_Author*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.author_ = reinterpret_cast<::palm::balsam::v1::SiteLayoutResponse_Author*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteLayoutResponse.author)
}

// repeated string keywords = 6;
inline int SiteLayoutResponse::_internal_keywords_size() const {
  return _internal_keywords().size();
}
inline int SiteLayoutResponse::keywords_size() const {
  return _internal_keywords_size();
}
inline void SiteLayoutResponse::clear_keywords() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.keywords_.Clear();
}
inline std::string* SiteLayoutResponse::add_keywords()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_keywords()->Add();
  // @@protoc_insertion_point(field_add_mutable:palm.balsam.v1.SiteLayoutResponse.keywords)
  return _s;
}
inline const std::string& SiteLayoutResponse::keywords(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteLayoutResponse.keywords)
  return _internal_keywords().Get(index);
}
inline std::string* SiteLayoutResponse::mutable_keywords(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteLayoutResponse.keywords)
  return _internal_mutable_keywords()->Mutable(index);
}
inline void SiteLayoutResponse::set_keywords(int index, const std::string& value) {
  _internal_mutable_keywords()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteLayoutResponse.keywords)
}
inline void SiteLayoutResponse::set_keywords(int index, std::string&& value) {
  _internal_mutable_keywords()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteLayoutResponse.keywords)
}
inline void SiteLayoutResponse::set_keywords(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_keywords()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:palm.balsam.v1.SiteLayoutResponse.keywords)
}
inline void SiteLayoutResponse::set_keywords(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_keywords()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:palm.balsam.v1.SiteLayoutResponse.keywords)
}
inline void SiteLayoutResponse::set_keywords(int index, absl::string_view value) {
  _internal_mutable_keywords()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:palm.balsam.v1.SiteLayoutResponse.keywords)
}
inline void SiteLayoutResponse::add_keywords(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keywords()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:palm.balsam.v1.SiteLayoutResponse.keywords)
}
inline void SiteLayoutResponse::add_keywords(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keywords()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:palm.balsam.v1.SiteLayoutResponse.keywords)
}
inline void SiteLayoutResponse::add_keywords(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keywords()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:palm.balsam.v1.SiteLayoutResponse.keywords)
}
inline void SiteLayoutResponse::add_keywords(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keywords()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:palm.balsam.v1.SiteLayoutResponse.keywords)
}
inline void SiteLayoutResponse::add_keywords(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_keywords()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:palm.balsam.v1.SiteLayoutResponse.keywords)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteLayoutResponse::keywords() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.SiteLayoutResponse.keywords)
  return _internal_keywords();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteLayoutResponse::mutable_keywords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.SiteLayoutResponse.keywords)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_keywords();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteLayoutResponse::_internal_keywords() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.keywords_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteLayoutResponse::_internal_mutable_keywords() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.keywords_;
}

// optional .palm.balsam.v1.SiteLayoutResponse.CnIcp cn_icp = 11;
inline bool SiteLayoutResponse::has_cn_icp() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cn_icp_ != nullptr);
  return value;
}
inline void SiteLayoutResponse::clear_cn_icp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.cn_icp_ != nullptr) _impl_.cn_icp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::palm::balsam::v1::SiteLayoutResponse_CnIcp& SiteLayoutResponse::_internal_cn_icp() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::SiteLayoutResponse_CnIcp* p = _impl_.cn_icp_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::SiteLayoutResponse_CnIcp&>(::palm::balsam::v1::_SiteLayoutResponse_CnIcp_default_instance_);
}
inline const ::palm::balsam::v1::SiteLayoutResponse_CnIcp& SiteLayoutResponse::cn_icp() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteLayoutResponse.cn_icp)
  return _internal_cn_icp();
}
inline void SiteLayoutResponse::unsafe_arena_set_allocated_cn_icp(::palm::balsam::v1::SiteLayoutResponse_CnIcp* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cn_icp_);
  }
  _impl_.cn_icp_ = reinterpret_cast<::palm::balsam::v1::SiteLayoutResponse_CnIcp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.SiteLayoutResponse.cn_icp)
}
inline ::palm::balsam::v1::SiteLayoutResponse_CnIcp* SiteLayoutResponse::release_cn_icp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::palm::balsam::v1::SiteLayoutResponse_CnIcp* released = _impl_.cn_icp_;
  _impl_.cn_icp_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::SiteLayoutResponse_CnIcp* SiteLayoutResponse::unsafe_arena_release_cn_icp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteLayoutResponse.cn_icp)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::palm::balsam::v1::SiteLayoutResponse_CnIcp* temp = _impl_.cn_icp_;
  _impl_.cn_icp_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::SiteLayoutResponse_CnIcp* SiteLayoutResponse::_internal_mutable_cn_icp() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000002u;
  if (_impl_.cn_icp_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::SiteLayoutResponse_CnIcp>(GetArena());
    _impl_.cn_icp_ = reinterpret_cast<::palm::balsam::v1::SiteLayoutResponse_CnIcp*>(p);
  }
  return _impl_.cn_icp_;
}
inline ::palm::balsam::v1::SiteLayoutResponse_CnIcp* SiteLayoutResponse::mutable_cn_icp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::SiteLayoutResponse_CnIcp* _msg = _internal_mutable_cn_icp();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteLayoutResponse.cn_icp)
  return _msg;
}
inline void SiteLayoutResponse::set_allocated_cn_icp(::palm::balsam::v1::SiteLayoutResponse_CnIcp* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::SiteLayoutResponse_CnIcp*>(_impl_.cn_icp_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::SiteLayoutResponse_CnIcp*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.cn_icp_ = reinterpret_cast<::palm::balsam::v1::SiteLayoutResponse_CnIcp*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteLayoutResponse.cn_icp)
}

// optional .palm.balsam.v1.SiteLayoutResponse.CnGab cn_gab = 12;
inline bool SiteLayoutResponse::has_cn_gab() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.cn_gab_ != nullptr);
  return value;
}
inline void SiteLayoutResponse::clear_cn_gab() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (_impl_.cn_gab_ != nullptr) _impl_.cn_gab_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::palm::balsam::v1::SiteLayoutResponse_CnGab& SiteLayoutResponse::_internal_cn_gab() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  const ::palm::balsam::v1::SiteLayoutResponse_CnGab* p = _impl_.cn_gab_;
  return p != nullptr ? *p : reinterpret_cast<const ::palm::balsam::v1::SiteLayoutResponse_CnGab&>(::palm::balsam::v1::_SiteLayoutResponse_CnGab_default_instance_);
}
inline const ::palm::balsam::v1::SiteLayoutResponse_CnGab& SiteLayoutResponse::cn_gab() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteLayoutResponse.cn_gab)
  return _internal_cn_gab();
}
inline void SiteLayoutResponse::unsafe_arena_set_allocated_cn_gab(::palm::balsam::v1::SiteLayoutResponse_CnGab* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.cn_gab_);
  }
  _impl_.cn_gab_ = reinterpret_cast<::palm::balsam::v1::SiteLayoutResponse_CnGab*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:palm.balsam.v1.SiteLayoutResponse.cn_gab)
}
inline ::palm::balsam::v1::SiteLayoutResponse_CnGab* SiteLayoutResponse::release_cn_gab() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::palm::balsam::v1::SiteLayoutResponse_CnGab* released = _impl_.cn_gab_;
  _impl_.cn_gab_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::palm::balsam::v1::SiteLayoutResponse_CnGab* SiteLayoutResponse::unsafe_arena_release_cn_gab() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteLayoutResponse.cn_gab)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::palm::balsam::v1::SiteLayoutResponse_CnGab* temp = _impl_.cn_gab_;
  _impl_.cn_gab_ = nullptr;
  return temp;
}
inline ::palm::balsam::v1::SiteLayoutResponse_CnGab* SiteLayoutResponse::_internal_mutable_cn_gab() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_._has_bits_[0] |= 0x00000004u;
  if (_impl_.cn_gab_ == nullptr) {
    auto* p = CreateMaybeMessage<::palm::balsam::v1::SiteLayoutResponse_CnGab>(GetArena());
    _impl_.cn_gab_ = reinterpret_cast<::palm::balsam::v1::SiteLayoutResponse_CnGab*>(p);
  }
  return _impl_.cn_gab_;
}
inline ::palm::balsam::v1::SiteLayoutResponse_CnGab* SiteLayoutResponse::mutable_cn_gab() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::palm::balsam::v1::SiteLayoutResponse_CnGab* _msg = _internal_mutable_cn_gab();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteLayoutResponse.cn_gab)
  return _msg;
}
inline void SiteLayoutResponse::set_allocated_cn_gab(::palm::balsam::v1::SiteLayoutResponse_CnGab* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::palm::balsam::v1::SiteLayoutResponse_CnGab*>(_impl_.cn_gab_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::palm::balsam::v1::SiteLayoutResponse_CnGab*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.cn_gab_ = reinterpret_cast<::palm::balsam::v1::SiteLayoutResponse_CnGab*>(value);
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteLayoutResponse.cn_gab)
}

// string lang = 97;
inline void SiteLayoutResponse::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteLayoutResponse.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteLayoutResponse.lang)
}
inline std::string* SiteLayoutResponse::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteLayoutResponse.lang)
  return _s;
}
inline const std::string& SiteLayoutResponse::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void SiteLayoutResponse::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteLayoutResponse.lang)
  return _impl_.lang_.Release();
}
inline void SiteLayoutResponse::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteLayoutResponse.lang)
}

// string languages = 98;
inline void SiteLayoutResponse::clear_languages() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.languages_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse::languages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteLayoutResponse.languages)
  return _internal_languages();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse::set_languages(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.languages_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteLayoutResponse.languages)
}
inline std::string* SiteLayoutResponse::mutable_languages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_languages();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteLayoutResponse.languages)
  return _s;
}
inline const std::string& SiteLayoutResponse::_internal_languages() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.languages_.Get();
}
inline void SiteLayoutResponse::_internal_set_languages(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.languages_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse::_internal_mutable_languages() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.languages_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse::release_languages() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteLayoutResponse.languages)
  return _impl_.languages_.Release();
}
inline void SiteLayoutResponse::set_allocated_languages(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.languages_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.languages_.IsDefault()) {
          _impl_.languages_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteLayoutResponse.languages)
}

// string version = 99;
inline void SiteLayoutResponse::clear_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& SiteLayoutResponse::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteLayoutResponse.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteLayoutResponse::set_version(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteLayoutResponse.version)
}
inline std::string* SiteLayoutResponse::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteLayoutResponse.version)
  return _s;
}
inline const std::string& SiteLayoutResponse::_internal_version() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.version_.Get();
}
inline void SiteLayoutResponse::_internal_set_version(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.version_.Set(value, GetArena());
}
inline std::string* SiteLayoutResponse::_internal_mutable_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* SiteLayoutResponse::release_version() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteLayoutResponse.version)
  return _impl_.version_.Release();
}
inline void SiteLayoutResponse::set_allocated_version(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.version_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.version_.IsDefault()) {
          _impl_.version_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteLayoutResponse.version)
}

// -------------------------------------------------------------------

// SiteInfoRequest

// string lang = 1;
inline void SiteInfoRequest::clear_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.ClearToEmpty();
}
inline const std::string& SiteInfoRequest::lang() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteInfoRequest.lang)
  return _internal_lang();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteInfoRequest::set_lang(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteInfoRequest.lang)
}
inline std::string* SiteInfoRequest::mutable_lang() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_lang();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteInfoRequest.lang)
  return _s;
}
inline const std::string& SiteInfoRequest::_internal_lang() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.lang_.Get();
}
inline void SiteInfoRequest::_internal_set_lang(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.lang_.Set(value, GetArena());
}
inline std::string* SiteInfoRequest::_internal_mutable_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.lang_.Mutable( GetArena());
}
inline std::string* SiteInfoRequest::release_lang() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteInfoRequest.lang)
  return _impl_.lang_.Release();
}
inline void SiteInfoRequest::set_allocated_lang(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.lang_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.lang_.IsDefault()) {
          _impl_.lang_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteInfoRequest.lang)
}

// string title = 2;
inline void SiteInfoRequest::clear_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.ClearToEmpty();
}
inline const std::string& SiteInfoRequest::title() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteInfoRequest.title)
  return _internal_title();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteInfoRequest::set_title(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteInfoRequest.title)
}
inline std::string* SiteInfoRequest::mutable_title() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_title();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteInfoRequest.title)
  return _s;
}
inline const std::string& SiteInfoRequest::_internal_title() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.title_.Get();
}
inline void SiteInfoRequest::_internal_set_title(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.title_.Set(value, GetArena());
}
inline std::string* SiteInfoRequest::_internal_mutable_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.title_.Mutable( GetArena());
}
inline std::string* SiteInfoRequest::release_title() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteInfoRequest.title)
  return _impl_.title_.Release();
}
inline void SiteInfoRequest::set_allocated_title(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.title_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.title_.IsDefault()) {
          _impl_.title_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteInfoRequest.title)
}

// string subhead = 3;
inline void SiteInfoRequest::clear_subhead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subhead_.ClearToEmpty();
}
inline const std::string& SiteInfoRequest::subhead() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteInfoRequest.subhead)
  return _internal_subhead();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteInfoRequest::set_subhead(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subhead_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteInfoRequest.subhead)
}
inline std::string* SiteInfoRequest::mutable_subhead() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_subhead();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteInfoRequest.subhead)
  return _s;
}
inline const std::string& SiteInfoRequest::_internal_subhead() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.subhead_.Get();
}
inline void SiteInfoRequest::_internal_set_subhead(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.subhead_.Set(value, GetArena());
}
inline std::string* SiteInfoRequest::_internal_mutable_subhead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.subhead_.Mutable( GetArena());
}
inline std::string* SiteInfoRequest::release_subhead() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteInfoRequest.subhead)
  return _impl_.subhead_.Release();
}
inline void SiteInfoRequest::set_allocated_subhead(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.subhead_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.subhead_.IsDefault()) {
          _impl_.subhead_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteInfoRequest.subhead)
}

// string description = 4;
inline void SiteInfoRequest::clear_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& SiteInfoRequest::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteInfoRequest.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteInfoRequest::set_description(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteInfoRequest.description)
}
inline std::string* SiteInfoRequest::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteInfoRequest.description)
  return _s;
}
inline const std::string& SiteInfoRequest::_internal_description() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.description_.Get();
}
inline void SiteInfoRequest::_internal_set_description(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.description_.Set(value, GetArena());
}
inline std::string* SiteInfoRequest::_internal_mutable_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* SiteInfoRequest::release_description() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteInfoRequest.description)
  return _impl_.description_.Release();
}
inline void SiteInfoRequest::set_allocated_description(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteInfoRequest.description)
}

// string copyright = 5;
inline void SiteInfoRequest::clear_copyright() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.copyright_.ClearToEmpty();
}
inline const std::string& SiteInfoRequest::copyright() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteInfoRequest.copyright)
  return _internal_copyright();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SiteInfoRequest::set_copyright(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.copyright_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteInfoRequest.copyright)
}
inline std::string* SiteInfoRequest::mutable_copyright() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_copyright();
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteInfoRequest.copyright)
  return _s;
}
inline const std::string& SiteInfoRequest::_internal_copyright() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.copyright_.Get();
}
inline void SiteInfoRequest::_internal_set_copyright(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.copyright_.Set(value, GetArena());
}
inline std::string* SiteInfoRequest::_internal_mutable_copyright() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.copyright_.Mutable( GetArena());
}
inline std::string* SiteInfoRequest::release_copyright() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:palm.balsam.v1.SiteInfoRequest.copyright)
  return _impl_.copyright_.Release();
}
inline void SiteInfoRequest::set_allocated_copyright(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.copyright_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.copyright_.IsDefault()) {
          _impl_.copyright_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:palm.balsam.v1.SiteInfoRequest.copyright)
}

// -------------------------------------------------------------------

// SiteKeywordsRequest

// repeated string items = 1;
inline int SiteKeywordsRequest::_internal_items_size() const {
  return _internal_items().size();
}
inline int SiteKeywordsRequest::items_size() const {
  return _internal_items_size();
}
inline void SiteKeywordsRequest::clear_items() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.items_.Clear();
}
inline std::string* SiteKeywordsRequest::add_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  std::string* _s = _internal_mutable_items()->Add();
  // @@protoc_insertion_point(field_add_mutable:palm.balsam.v1.SiteKeywordsRequest.items)
  return _s;
}
inline const std::string& SiteKeywordsRequest::items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:palm.balsam.v1.SiteKeywordsRequest.items)
  return _internal_items().Get(index);
}
inline std::string* SiteKeywordsRequest::mutable_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:palm.balsam.v1.SiteKeywordsRequest.items)
  return _internal_mutable_items()->Mutable(index);
}
inline void SiteKeywordsRequest::set_items(int index, const std::string& value) {
  _internal_mutable_items()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteKeywordsRequest.items)
}
inline void SiteKeywordsRequest::set_items(int index, std::string&& value) {
  _internal_mutable_items()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:palm.balsam.v1.SiteKeywordsRequest.items)
}
inline void SiteKeywordsRequest::set_items(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_items()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:palm.balsam.v1.SiteKeywordsRequest.items)
}
inline void SiteKeywordsRequest::set_items(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_items()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:palm.balsam.v1.SiteKeywordsRequest.items)
}
inline void SiteKeywordsRequest::set_items(int index, absl::string_view value) {
  _internal_mutable_items()->Mutable(index)->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_set_string_piece:palm.balsam.v1.SiteKeywordsRequest.items)
}
inline void SiteKeywordsRequest::add_items(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_items()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:palm.balsam.v1.SiteKeywordsRequest.items)
}
inline void SiteKeywordsRequest::add_items(std::string&& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_items()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:palm.balsam.v1.SiteKeywordsRequest.items)
}
inline void SiteKeywordsRequest::add_items(const char* value) {
  ABSL_DCHECK(value != nullptr);
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_items()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:palm.balsam.v1.SiteKeywordsRequest.items)
}
inline void SiteKeywordsRequest::add_items(const char* value, std::size_t size) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_items()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:palm.balsam.v1.SiteKeywordsRequest.items)
}
inline void SiteKeywordsRequest::add_items(absl::string_view value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_items()->Add()->assign(value.data(), value.size());
  // @@protoc_insertion_point(field_add_string_piece:palm.balsam.v1.SiteKeywordsRequest.items)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteKeywordsRequest::items() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:palm.balsam.v1.SiteKeywordsRequest.items)
  return _internal_items();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteKeywordsRequest::mutable_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:palm.balsam.v1.SiteKeywordsRequest.items)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_items();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
SiteKeywordsRequest::_internal_items() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.items_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
SiteKeywordsRequest::_internal_mutable_items() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.items_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace balsam
}  // namespace palm


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::palm::balsam::v1::UserLogsResponse_Item_Level> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::balsam::v1::UserLogsResponse_Item_Level>() {
  return ::palm::balsam::v1::UserLogsResponse_Item_Level_descriptor();
}
template <>
struct is_proto_enum<::palm::balsam::v1::UserSignInResponse_Detail_ProviderType> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::balsam::v1::UserSignInResponse_Detail_ProviderType>() {
  return ::palm::balsam::v1::UserSignInResponse_Detail_ProviderType_descriptor();
}
template <>
struct is_proto_enum<::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Sex> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Sex>() {
  return ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Sex_descriptor();
}
template <>
struct is_proto_enum<::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Lang> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Lang>() {
  return ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Lang_descriptor();
}
template <>
struct is_proto_enum<::palm::balsam::v1::LeaveWordIndexResponse_Item_Status> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::balsam::v1::LeaveWordIndexResponse_Item_Status>() {
  return ::palm::balsam::v1::LeaveWordIndexResponse_Item_Status_descriptor();
}
template <>
struct is_proto_enum<::palm::balsam::v1::MediaEditor> : std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor<::palm::balsam::v1::MediaEditor>() {
  return ::palm::balsam::v1::MediaEditor_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_balsam_2eproto_2epb_2eh
