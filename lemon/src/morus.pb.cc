// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: morus.proto
// Protobuf C++ Version: 5.27.2

#include "morus.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace palm {
namespace morus {
namespace v1 {

inline constexpr MarkdownToHtmlResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MarkdownToHtmlResponse::MarkdownToHtmlResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MarkdownToHtmlResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarkdownToHtmlResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarkdownToHtmlResponseDefaultTypeInternal() {}
  union {
    MarkdownToHtmlResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarkdownToHtmlResponseDefaultTypeInternal _MarkdownToHtmlResponse_default_instance_;

inline constexpr MarkdownToHtmlRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sanitize_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MarkdownToHtmlRequest::MarkdownToHtmlRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MarkdownToHtmlRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MarkdownToHtmlRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MarkdownToHtmlRequestDefaultTypeInternal() {}
  union {
    MarkdownToHtmlRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MarkdownToHtmlRequestDefaultTypeInternal _MarkdownToHtmlRequest_default_instance_;
}  // namespace v1
}  // namespace morus
}  // namespace palm
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_morus_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_morus_2eproto = nullptr;
const ::uint32_t
    TableStruct_morus_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::palm::morus::v1::MarkdownToHtmlRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::palm::morus::v1::MarkdownToHtmlRequest, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::palm::morus::v1::MarkdownToHtmlRequest, _impl_.sanitize_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::palm::morus::v1::MarkdownToHtmlResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::palm::morus::v1::MarkdownToHtmlResponse, _impl_.payload_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::palm::morus::v1::MarkdownToHtmlRequest)},
        {10, -1, -1, sizeof(::palm::morus::v1::MarkdownToHtmlResponse)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::palm::morus::v1::_MarkdownToHtmlRequest_default_instance_._instance,
    &::palm::morus::v1::_MarkdownToHtmlResponse_default_instance_._instance,
};
const char descriptor_table_protodef_morus_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013morus.proto\022\rpalm.morus.v1\":\n\025Markdown"
    "ToHtmlRequest\022\017\n\007payload\030\001 \001(\t\022\020\n\010saniti"
    "ze\030\002 \001(\010\")\n\026MarkdownToHtmlResponse\022\017\n\007pa"
    "yload\030\001 \001(\t2c\n\010Markdown\022W\n\006ToHtml\022$.palm"
    ".morus.v1.MarkdownToHtmlRequest\032%.palm.m"
    "orus.v1.MarkdownToHtmlResponse\"\000Bd\n+com."
    "github.saturn_xiv.palm.plugins.morus.v1P"
    "\001Z3github.com/saturn-xiv/palm/atropa/mor"
    "us/services/v2b\006proto3"
};
static ::absl::once_flag descriptor_table_morus_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_morus_2eproto = {
    false,
    false,
    342,
    descriptor_table_protodef_morus_2eproto,
    "morus.proto",
    &descriptor_table_morus_2eproto_once,
    nullptr,
    0,
    2,
    schemas,
    file_default_instances,
    TableStruct_morus_2eproto::offsets,
    file_level_enum_descriptors_morus_2eproto,
    file_level_service_descriptors_morus_2eproto,
};
namespace palm {
namespace morus {
namespace v1 {
// ===================================================================

class MarkdownToHtmlRequest::_Internal {
 public:
};

MarkdownToHtmlRequest::MarkdownToHtmlRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.morus.v1.MarkdownToHtmlRequest)
}
inline PROTOBUF_NDEBUG_INLINE MarkdownToHtmlRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::palm::morus::v1::MarkdownToHtmlRequest& from_msg)
      : payload_(arena, from.payload_),
        _cached_size_{0} {}

MarkdownToHtmlRequest::MarkdownToHtmlRequest(
    ::google::protobuf::Arena* arena,
    const MarkdownToHtmlRequest& from)
    : ::google::protobuf::Message(arena) {
  MarkdownToHtmlRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.sanitize_ = from._impl_.sanitize_;

  // @@protoc_insertion_point(copy_constructor:palm.morus.v1.MarkdownToHtmlRequest)
}
inline PROTOBUF_NDEBUG_INLINE MarkdownToHtmlRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_(arena),
        _cached_size_{0} {}

inline void MarkdownToHtmlRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.sanitize_ = {};
}
MarkdownToHtmlRequest::~MarkdownToHtmlRequest() {
  // @@protoc_insertion_point(destructor:palm.morus.v1.MarkdownToHtmlRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MarkdownToHtmlRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.payload_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MarkdownToHtmlRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(MarkdownToHtmlRequest, _impl_._cached_size_),
              false,
          },
          &MarkdownToHtmlRequest::MergeImpl,
          &MarkdownToHtmlRequest::kDescriptorMethods,
          &descriptor_table_morus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 51, 2> MarkdownToHtmlRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MarkdownToHtmlRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::palm::morus::v1::MarkdownToHtmlRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool sanitize = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(MarkdownToHtmlRequest, _impl_.sanitize_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(MarkdownToHtmlRequest, _impl_.sanitize_)}},
    // string payload = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MarkdownToHtmlRequest, _impl_.payload_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string payload = 1;
    {PROTOBUF_FIELD_OFFSET(MarkdownToHtmlRequest, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool sanitize = 2;
    {PROTOBUF_FIELD_OFFSET(MarkdownToHtmlRequest, _impl_.sanitize_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\43\7\0\0\0\0\0\0"
    "palm.morus.v1.MarkdownToHtmlRequest"
    "payload"
  }},
};

PROTOBUF_NOINLINE void MarkdownToHtmlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.morus.v1.MarkdownToHtmlRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payload_.ClearToEmpty();
  _impl_.sanitize_ = false;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* MarkdownToHtmlRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.morus.v1.MarkdownToHtmlRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string payload = 1;
  if (!this->_internal_payload().empty()) {
    const std::string& _s = this->_internal_payload();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.morus.v1.MarkdownToHtmlRequest.payload");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // bool sanitize = 2;
  if (this->_internal_sanitize() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this->_internal_sanitize(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.morus.v1.MarkdownToHtmlRequest)
  return target;
}

::size_t MarkdownToHtmlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.morus.v1.MarkdownToHtmlRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string payload = 1;
  if (!this->_internal_payload().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_payload());
  }

  // bool sanitize = 2;
  if (this->_internal_sanitize() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MarkdownToHtmlRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MarkdownToHtmlRequest*>(&to_msg);
  auto& from = static_cast<const MarkdownToHtmlRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.morus.v1.MarkdownToHtmlRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  if (from._internal_sanitize() != 0) {
    _this->_impl_.sanitize_ = from._impl_.sanitize_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MarkdownToHtmlRequest::CopyFrom(const MarkdownToHtmlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.morus.v1.MarkdownToHtmlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MarkdownToHtmlRequest::InternalSwap(MarkdownToHtmlRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
        swap(_impl_.sanitize_, other->_impl_.sanitize_);
}

::google::protobuf::Metadata MarkdownToHtmlRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class MarkdownToHtmlResponse::_Internal {
 public:
};

MarkdownToHtmlResponse::MarkdownToHtmlResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.morus.v1.MarkdownToHtmlResponse)
}
inline PROTOBUF_NDEBUG_INLINE MarkdownToHtmlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::palm::morus::v1::MarkdownToHtmlResponse& from_msg)
      : payload_(arena, from.payload_),
        _cached_size_{0} {}

MarkdownToHtmlResponse::MarkdownToHtmlResponse(
    ::google::protobuf::Arena* arena,
    const MarkdownToHtmlResponse& from)
    : ::google::protobuf::Message(arena) {
  MarkdownToHtmlResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:palm.morus.v1.MarkdownToHtmlResponse)
}
inline PROTOBUF_NDEBUG_INLINE MarkdownToHtmlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_(arena),
        _cached_size_{0} {}

inline void MarkdownToHtmlResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MarkdownToHtmlResponse::~MarkdownToHtmlResponse() {
  // @@protoc_insertion_point(destructor:palm.morus.v1.MarkdownToHtmlResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MarkdownToHtmlResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.payload_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
MarkdownToHtmlResponse::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(MarkdownToHtmlResponse, _impl_._cached_size_),
              false,
          },
          &MarkdownToHtmlResponse::MergeImpl,
          &MarkdownToHtmlResponse::kDescriptorMethods,
          &descriptor_table_morus_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 52, 2> MarkdownToHtmlResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MarkdownToHtmlResponse_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::palm::morus::v1::MarkdownToHtmlResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string payload = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MarkdownToHtmlResponse, _impl_.payload_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string payload = 1;
    {PROTOBUF_FIELD_OFFSET(MarkdownToHtmlResponse, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\7\0\0\0\0\0\0"
    "palm.morus.v1.MarkdownToHtmlResponse"
    "payload"
  }},
};

PROTOBUF_NOINLINE void MarkdownToHtmlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.morus.v1.MarkdownToHtmlResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payload_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* MarkdownToHtmlResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.morus.v1.MarkdownToHtmlResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string payload = 1;
  if (!this->_internal_payload().empty()) {
    const std::string& _s = this->_internal_payload();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.morus.v1.MarkdownToHtmlResponse.payload");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.morus.v1.MarkdownToHtmlResponse)
  return target;
}

::size_t MarkdownToHtmlResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.morus.v1.MarkdownToHtmlResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string payload = 1;
  if (!this->_internal_payload().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_payload());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void MarkdownToHtmlResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<MarkdownToHtmlResponse*>(&to_msg);
  auto& from = static_cast<const MarkdownToHtmlResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.morus.v1.MarkdownToHtmlResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MarkdownToHtmlResponse::CopyFrom(const MarkdownToHtmlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.morus.v1.MarkdownToHtmlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void MarkdownToHtmlResponse::InternalSwap(MarkdownToHtmlResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
}

::google::protobuf::Metadata MarkdownToHtmlResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace morus
}  // namespace palm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_morus_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
