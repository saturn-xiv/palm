// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rbac.proto

#include "rbac.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace palm {
namespace rbac {
namespace v1 {

inline constexpr PolicyUsersResponse_Item::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyUsersResponse_Item::PolicyUsersResponse_Item(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PolicyUsersResponse_ItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyUsersResponse_ItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyUsersResponse_ItemDefaultTypeInternal() {}
  union {
    PolicyUsersResponse_Item _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyUsersResponse_ItemDefaultTypeInternal _PolicyUsersResponse_Item_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PolicyRolesResponse_Item_Root::PolicyRolesResponse_Item_Root(::_pbi::ConstantInitialized) {}
struct PolicyRolesResponse_Item_RootDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyRolesResponse_Item_RootDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyRolesResponse_Item_RootDefaultTypeInternal() {}
  union {
    PolicyRolesResponse_Item_Root _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyRolesResponse_Item_RootDefaultTypeInternal _PolicyRolesResponse_Item_Root_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PolicyRolesResponse_Item_Administrator::PolicyRolesResponse_Item_Administrator(::_pbi::ConstantInitialized) {}
struct PolicyRolesResponse_Item_AdministratorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyRolesResponse_Item_AdministratorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyRolesResponse_Item_AdministratorDefaultTypeInternal() {}
  union {
    PolicyRolesResponse_Item_Administrator _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyRolesResponse_Item_AdministratorDefaultTypeInternal _PolicyRolesResponse_Item_Administrator_default_instance_;

inline constexpr PolicyPermissionsResponse_Item_Resource_Id::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : by_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_Resource_Id::PolicyPermissionsResponse_Item_Resource_Id(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PolicyPermissionsResponse_Item_Resource_IdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_Resource_IdDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyPermissionsResponse_Item_Resource_IdDefaultTypeInternal() {}
  union {
    PolicyPermissionsResponse_Item_Resource_Id _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyPermissionsResponse_Item_Resource_IdDefaultTypeInternal _PolicyPermissionsResponse_Item_Resource_Id_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_Operation_Write::PolicyPermissionsResponse_Item_Operation_Write(::_pbi::ConstantInitialized) {}
struct PolicyPermissionsResponse_Item_Operation_WriteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_Operation_WriteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyPermissionsResponse_Item_Operation_WriteDefaultTypeInternal() {}
  union {
    PolicyPermissionsResponse_Item_Operation_Write _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyPermissionsResponse_Item_Operation_WriteDefaultTypeInternal _PolicyPermissionsResponse_Item_Operation_Write_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_Operation_Read::PolicyPermissionsResponse_Item_Operation_Read(::_pbi::ConstantInitialized) {}
struct PolicyPermissionsResponse_Item_Operation_ReadDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_Operation_ReadDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyPermissionsResponse_Item_Operation_ReadDefaultTypeInternal() {}
  union {
    PolicyPermissionsResponse_Item_Operation_Read _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyPermissionsResponse_Item_Operation_ReadDefaultTypeInternal _PolicyPermissionsResponse_Item_Operation_Read_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_Operation_Inquiry::PolicyPermissionsResponse_Item_Operation_Inquiry(::_pbi::ConstantInitialized) {}
struct PolicyPermissionsResponse_Item_Operation_InquiryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_Operation_InquiryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyPermissionsResponse_Item_Operation_InquiryDefaultTypeInternal() {}
  union {
    PolicyPermissionsResponse_Item_Operation_Inquiry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyPermissionsResponse_Item_Operation_InquiryDefaultTypeInternal _PolicyPermissionsResponse_Item_Operation_Inquiry_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_Operation_Execute::PolicyPermissionsResponse_Item_Operation_Execute(::_pbi::ConstantInitialized) {}
struct PolicyPermissionsResponse_Item_Operation_ExecuteDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_Operation_ExecuteDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyPermissionsResponse_Item_Operation_ExecuteDefaultTypeInternal() {}
  union {
    PolicyPermissionsResponse_Item_Operation_Execute _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyPermissionsResponse_Item_Operation_ExecuteDefaultTypeInternal _PolicyPermissionsResponse_Item_Operation_Execute_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_Operation_Debit::PolicyPermissionsResponse_Item_Operation_Debit(::_pbi::ConstantInitialized) {}
struct PolicyPermissionsResponse_Item_Operation_DebitDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_Operation_DebitDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyPermissionsResponse_Item_Operation_DebitDefaultTypeInternal() {}
  union {
    PolicyPermissionsResponse_Item_Operation_Debit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyPermissionsResponse_Item_Operation_DebitDefaultTypeInternal _PolicyPermissionsResponse_Item_Operation_Debit_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_Operation_Credit::PolicyPermissionsResponse_Item_Operation_Credit(::_pbi::ConstantInitialized) {}
struct PolicyPermissionsResponse_Item_Operation_CreditDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_Operation_CreditDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyPermissionsResponse_Item_Operation_CreditDefaultTypeInternal() {}
  union {
    PolicyPermissionsResponse_Item_Operation_Credit _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyPermissionsResponse_Item_Operation_CreditDefaultTypeInternal _PolicyPermissionsResponse_Item_Operation_Credit_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_Operation_Append::PolicyPermissionsResponse_Item_Operation_Append(::_pbi::ConstantInitialized) {}
struct PolicyPermissionsResponse_Item_Operation_AppendDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_Operation_AppendDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyPermissionsResponse_Item_Operation_AppendDefaultTypeInternal() {}
  union {
    PolicyPermissionsResponse_Item_Operation_Append _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyPermissionsResponse_Item_Operation_AppendDefaultTypeInternal _PolicyPermissionsResponse_Item_Operation_Append_default_instance_;

inline constexpr PolicyUsersResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : items_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyUsersResponse::PolicyUsersResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PolicyUsersResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyUsersResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyUsersResponseDefaultTypeInternal() {}
  union {
    PolicyUsersResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyUsersResponseDefaultTypeInternal _PolicyUsersResponse_default_instance_;

inline constexpr PolicyRolesResponse_Item::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : by_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyRolesResponse_Item::PolicyRolesResponse_Item(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PolicyRolesResponse_ItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyRolesResponse_ItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyRolesResponse_ItemDefaultTypeInternal() {}
  union {
    PolicyRolesResponse_Item _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyRolesResponse_ItemDefaultTypeInternal _PolicyRolesResponse_Item_default_instance_;

inline constexpr PolicyPermissionsResponse_Item_Resource::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        id_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_Resource::PolicyPermissionsResponse_Item_Resource(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PolicyPermissionsResponse_Item_ResourceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_ResourceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyPermissionsResponse_Item_ResourceDefaultTypeInternal() {}
  union {
    PolicyPermissionsResponse_Item_Resource _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyPermissionsResponse_Item_ResourceDefaultTypeInternal _PolicyPermissionsResponse_Item_Resource_default_instance_;

inline constexpr PolicyPermissionsResponse_Item_Operation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : by_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_Operation::PolicyPermissionsResponse_Item_Operation(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PolicyPermissionsResponse_Item_OperationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item_OperationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyPermissionsResponse_Item_OperationDefaultTypeInternal() {}
  union {
    PolicyPermissionsResponse_Item_Operation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyPermissionsResponse_Item_OperationDefaultTypeInternal _PolicyPermissionsResponse_Item_Operation_default_instance_;

inline constexpr PolicyRolesResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : items_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyRolesResponse::PolicyRolesResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PolicyRolesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyRolesResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyRolesResponseDefaultTypeInternal() {}
  union {
    PolicyRolesResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyRolesResponseDefaultTypeInternal _PolicyRolesResponse_default_instance_;

inline constexpr PolicyRolesForUserRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        roles_{},
        user_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyRolesForUserRequest::PolicyRolesForUserRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PolicyRolesForUserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyRolesForUserRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyRolesForUserRequestDefaultTypeInternal() {}
  union {
    PolicyRolesForUserRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyRolesForUserRequestDefaultTypeInternal _PolicyRolesForUserRequest_default_instance_;

inline constexpr PolicyPermissionsResponse_Item::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        resource_{nullptr},
        operation_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyPermissionsResponse_Item::PolicyPermissionsResponse_Item(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PolicyPermissionsResponse_ItemDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyPermissionsResponse_ItemDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyPermissionsResponse_ItemDefaultTypeInternal() {}
  union {
    PolicyPermissionsResponse_Item _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyPermissionsResponse_ItemDefaultTypeInternal _PolicyPermissionsResponse_Item_default_instance_;

inline constexpr PolicyHasRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        user_{nullptr},
        role_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyHasRequest::PolicyHasRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PolicyHasRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyHasRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyHasRequestDefaultTypeInternal() {}
  union {
    PolicyHasRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyHasRequestDefaultTypeInternal _PolicyHasRequest_default_instance_;

inline constexpr PolicyCanRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        user_{nullptr},
        resource_{nullptr},
        operation_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyCanRequest::PolicyCanRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PolicyCanRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyCanRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyCanRequestDefaultTypeInternal() {}
  union {
    PolicyCanRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyCanRequestDefaultTypeInternal _PolicyCanRequest_default_instance_;

inline constexpr PolicyPermissionsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : items_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyPermissionsResponse::PolicyPermissionsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PolicyPermissionsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyPermissionsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyPermissionsResponseDefaultTypeInternal() {}
  union {
    PolicyPermissionsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyPermissionsResponseDefaultTypeInternal _PolicyPermissionsResponse_default_instance_;

inline constexpr PolicyPermissionsForUserRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        permissions_{},
        user_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyPermissionsForUserRequest::PolicyPermissionsForUserRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PolicyPermissionsForUserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyPermissionsForUserRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyPermissionsForUserRequestDefaultTypeInternal() {}
  union {
    PolicyPermissionsForUserRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyPermissionsForUserRequestDefaultTypeInternal _PolicyPermissionsForUserRequest_default_instance_;

inline constexpr PolicyPermissionsForRoleRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        permissions_{},
        role_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PolicyPermissionsForRoleRequest::PolicyPermissionsForRoleRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PolicyPermissionsForRoleRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PolicyPermissionsForRoleRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PolicyPermissionsForRoleRequestDefaultTypeInternal() {}
  union {
    PolicyPermissionsForRoleRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PolicyPermissionsForRoleRequestDefaultTypeInternal _PolicyPermissionsForRoleRequest_default_instance_;
}  // namespace v1
}  // namespace rbac
}  // namespace palm
static ::_pb::Metadata file_level_metadata_rbac_2eproto[23];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_rbac_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_rbac_2eproto = nullptr;
const ::uint32_t TableStruct_rbac_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyHasRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyHasRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyHasRequest, _impl_.user_),
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyHasRequest, _impl_.role_),
    0,
    1,
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyCanRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyCanRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyCanRequest, _impl_.user_),
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyCanRequest, _impl_.resource_),
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyCanRequest, _impl_.operation_),
    0,
    1,
    2,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyUsersResponse_Item, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyUsersResponse_Item, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyUsersResponse_Item, _impl_.id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyUsersResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyUsersResponse, _impl_.items_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyRolesResponse_Item_Administrator, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyRolesResponse_Item_Root, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyRolesResponse_Item, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyRolesResponse_Item, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyRolesResponse_Item, _impl_.by_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyRolesResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyRolesResponse, _impl_.items_),
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyRolesForUserRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyRolesForUserRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyRolesForUserRequest, _impl_.user_),
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyRolesForUserRequest, _impl_.roles_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsForUserRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsForUserRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsForUserRequest, _impl_.user_),
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsForUserRequest, _impl_.permissions_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsForRoleRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsForRoleRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsForRoleRequest, _impl_.role_),
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsForRoleRequest, _impl_.permissions_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource_Id, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource_Id, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource_Id, _impl_.by_),
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource, _impl_.id_),
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Read, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Write, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Append, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Execute, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Credit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Debit, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Inquiry, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation, _impl_.by_),
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item, _impl_.resource_),
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item, _impl_.operation_),
    0,
    1,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse, _impl_.items_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::palm::rbac::v1::PolicyHasRequest)},
        {12, 23, -1, sizeof(::palm::rbac::v1::PolicyCanRequest)},
        {26, -1, -1, sizeof(::palm::rbac::v1::PolicyUsersResponse_Item)},
        {37, -1, -1, sizeof(::palm::rbac::v1::PolicyUsersResponse)},
        {46, -1, -1, sizeof(::palm::rbac::v1::PolicyRolesResponse_Item_Administrator)},
        {54, -1, -1, sizeof(::palm::rbac::v1::PolicyRolesResponse_Item_Root)},
        {62, -1, -1, sizeof(::palm::rbac::v1::PolicyRolesResponse_Item)},
        {74, -1, -1, sizeof(::palm::rbac::v1::PolicyRolesResponse)},
        {83, 93, -1, sizeof(::palm::rbac::v1::PolicyRolesForUserRequest)},
        {95, 105, -1, sizeof(::palm::rbac::v1::PolicyPermissionsForUserRequest)},
        {107, 117, -1, sizeof(::palm::rbac::v1::PolicyPermissionsForRoleRequest)},
        {119, -1, -1, sizeof(::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource_Id)},
        {130, 140, -1, sizeof(::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource)},
        {142, -1, -1, sizeof(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Read)},
        {150, -1, -1, sizeof(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Write)},
        {158, -1, -1, sizeof(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Append)},
        {166, -1, -1, sizeof(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Execute)},
        {174, -1, -1, sizeof(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Credit)},
        {182, -1, -1, sizeof(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Debit)},
        {190, -1, -1, sizeof(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Inquiry)},
        {198, -1, -1, sizeof(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation)},
        {215, 225, -1, sizeof(::palm::rbac::v1::PolicyPermissionsResponse_Item)},
        {227, -1, -1, sizeof(::palm::rbac::v1::PolicyPermissionsResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::palm::rbac::v1::_PolicyHasRequest_default_instance_._instance,
    &::palm::rbac::v1::_PolicyCanRequest_default_instance_._instance,
    &::palm::rbac::v1::_PolicyUsersResponse_Item_default_instance_._instance,
    &::palm::rbac::v1::_PolicyUsersResponse_default_instance_._instance,
    &::palm::rbac::v1::_PolicyRolesResponse_Item_Administrator_default_instance_._instance,
    &::palm::rbac::v1::_PolicyRolesResponse_Item_Root_default_instance_._instance,
    &::palm::rbac::v1::_PolicyRolesResponse_Item_default_instance_._instance,
    &::palm::rbac::v1::_PolicyRolesResponse_default_instance_._instance,
    &::palm::rbac::v1::_PolicyRolesForUserRequest_default_instance_._instance,
    &::palm::rbac::v1::_PolicyPermissionsForUserRequest_default_instance_._instance,
    &::palm::rbac::v1::_PolicyPermissionsForRoleRequest_default_instance_._instance,
    &::palm::rbac::v1::_PolicyPermissionsResponse_Item_Resource_Id_default_instance_._instance,
    &::palm::rbac::v1::_PolicyPermissionsResponse_Item_Resource_default_instance_._instance,
    &::palm::rbac::v1::_PolicyPermissionsResponse_Item_Operation_Read_default_instance_._instance,
    &::palm::rbac::v1::_PolicyPermissionsResponse_Item_Operation_Write_default_instance_._instance,
    &::palm::rbac::v1::_PolicyPermissionsResponse_Item_Operation_Append_default_instance_._instance,
    &::palm::rbac::v1::_PolicyPermissionsResponse_Item_Operation_Execute_default_instance_._instance,
    &::palm::rbac::v1::_PolicyPermissionsResponse_Item_Operation_Credit_default_instance_._instance,
    &::palm::rbac::v1::_PolicyPermissionsResponse_Item_Operation_Debit_default_instance_._instance,
    &::palm::rbac::v1::_PolicyPermissionsResponse_Item_Operation_Inquiry_default_instance_._instance,
    &::palm::rbac::v1::_PolicyPermissionsResponse_Item_Operation_default_instance_._instance,
    &::palm::rbac::v1::_PolicyPermissionsResponse_Item_default_instance_._instance,
    &::palm::rbac::v1::_PolicyPermissionsResponse_default_instance_._instance,
};
const char descriptor_table_protodef_rbac_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\nrbac.proto\022\014palm.rbac.v1\032\033google/proto"
    "buf/empty.proto\"~\n\020PolicyHasRequest\0224\n\004u"
    "ser\030\001 \001(\0132&.palm.rbac.v1.PolicyUsersResp"
    "onse.Item\0224\n\004role\030\002 \001(\0132&.palm.rbac.v1.P"
    "olicyRolesResponse.Item\"\334\001\n\020PolicyCanReq"
    "uest\0224\n\004user\030\001 \001(\0132&.palm.rbac.v1.Policy"
    "UsersResponse.Item\022G\n\010resource\030\002 \001(\01325.p"
    "alm.rbac.v1.PolicyPermissionsResponse.It"
    "em.Resource\022I\n\toperation\030\003 \001(\01326.palm.rb"
    "ac.v1.PolicyPermissionsResponse.Item.Ope"
    "ration\"t\n\023PolicyUsersResponse\0225\n\005items\030\001"
    " \003(\0132&.palm.rbac.v1.PolicyUsersResponse."
    "Item\032&\n\004Item\022\013\n\001i\030\002 \001(\003H\000\022\013\n\001s\030\t \001(\tH\000B\004"
    "\n\002id\"\220\002\n\023PolicyRolesResponse\0225\n\005items\030\001 "
    "\003(\0132&.palm.rbac.v1.PolicyRolesResponse.I"
    "tem\032\301\001\n\004Item\022;\n\004root\030\001 \001(\0132+.palm.rbac.v"
    "1.PolicyRolesResponse.Item.RootH\000\022M\n\radm"
    "inistrator\030\002 \001(\01324.palm.rbac.v1.PolicyRo"
    "lesResponse.Item.AdministratorH\000\022\016\n\004code"
    "\030\t \001(\tH\000\032\017\n\rAdministrator\032\006\n\004RootB\004\n\002by\""
    "\210\001\n\031PolicyRolesForUserRequest\0224\n\004user\030\001 "
    "\001(\0132&.palm.rbac.v1.PolicyUsersResponse.I"
    "tem\0225\n\005roles\030\002 \003(\0132&.palm.rbac.v1.Policy"
    "RolesResponse.Item\"\232\001\n\037PolicyPermissions"
    "ForUserRequest\0224\n\004user\030\001 \001(\0132&.palm.rbac"
    ".v1.PolicyUsersResponse.Item\022A\n\013permissi"
    "ons\030\002 \003(\0132,.palm.rbac.v1.PolicyPermissio"
    "nsResponse.Item\"\232\001\n\037PolicyPermissionsFor"
    "RoleRequest\0224\n\004role\030\001 \001(\0132&.palm.rbac.v1"
    ".PolicyRolesResponse.Item\022A\n\013permissions"
    "\030\002 \003(\0132,.palm.rbac.v1.PolicyPermissionsR"
    "esponse.Item\"\243\010\n\031PolicyPermissionsRespon"
    "se\022;\n\005items\030\001 \003(\0132,.palm.rbac.v1.PolicyP"
    "ermissionsResponse.Item\032\310\007\n\004Item\022G\n\010reso"
    "urce\030\001 \001(\01325.palm.rbac.v1.PolicyPermissi"
    "onsResponse.Item.Resource\022I\n\toperation\030\002"
    " \001(\01326.palm.rbac.v1.PolicyPermissionsRes"
    "ponse.Item.Operation\032\220\001\n\010Resource\022\014\n\004typ"
    "e\030\001 \001(\t\022I\n\002id\030\002 \001(\01328.palm.rbac.v1.Polic"
    "yPermissionsResponse.Item.Resource.IdH\000\210"
    "\001\001\032$\n\002Id\022\013\n\001i\030\013 \001(\003H\000\022\013\n\001s\030\014 \001(\tH\000B\004\n\002by"
    "B\005\n\003_id\032\230\005\n\tOperation\022K\n\004read\030\001 \001(\0132;.pa"
    "lm.rbac.v1.PolicyPermissionsResponse.Ite"
    "m.Operation.ReadH\000\022M\n\005write\030\002 \001(\0132<.palm"
    ".rbac.v1.PolicyPermissionsResponse.Item."
    "Operation.WriteH\000\022O\n\006append\030\003 \001(\0132=.palm"
    ".rbac.v1.PolicyPermissionsResponse.Item."
    "Operation.AppendH\000\022Q\n\007execute\030\004 \001(\0132>.pa"
    "lm.rbac.v1.PolicyPermissionsResponse.Ite"
    "m.Operation.ExecuteH\000\022O\n\006credit\030\005 \001(\0132=."
    "palm.rbac.v1.PolicyPermissionsResponse.I"
    "tem.Operation.CreditH\000\022M\n\005debit\030\006 \001(\0132<."
    "palm.rbac.v1.PolicyPermissionsResponse.I"
    "tem.Operation.DebitH\000\022Q\n\007inquiry\030\007 \001(\0132>"
    ".palm.rbac.v1.PolicyPermissionsResponse."
    "Item.Operation.InquiryH\000\022\016\n\004code\030c \001(\tH\000"
    "\032\006\n\004Read\032\007\n\005Write\032\010\n\006Append\032\t\n\007Execute\032\010"
    "\n\006Credit\032\007\n\005Debit\032\t\n\007InquiryB\004\n\002by2\267\r\n\006P"
    "olicy\022\?\n\003Has\022\036.palm.rbac.v1.PolicyHasReq"
    "uest\032\026.google.protobuf.Empty\"\000\022\?\n\003Can\022\036."
    "palm.rbac.v1.PolicyCanRequest\032\026.google.p"
    "rotobuf.Empty\"\000\022N\n\nDeleteUser\022&.palm.rba"
    "c.v1.PolicyUsersResponse.Item\032\026.google.p"
    "rotobuf.Empty\"\000\022N\n\nDeleteRole\022&.palm.rba"
    "c.v1.PolicyRolesResponse.Item\032\026.google.p"
    "rotobuf.Empty\"\000\022^\n\017GetRolesForUser\022&.pal"
    "m.rbac.v1.PolicyUsersResponse.Item\032!.pal"
    "m.rbac.v1.PolicyRolesResponse\"\000\022f\n\027GetIm"
    "plicitRolesForUser\022&.palm.rbac.v1.Policy"
    "UsersResponse.Item\032!.palm.rbac.v1.Policy"
    "RolesResponse\"\000\022^\n\017GetUsersForRole\022&.pal"
    "m.rbac.v1.PolicyRolesResponse.Item\032!.pal"
    "m.rbac.v1.PolicyUsersResponse\"\000\022f\n\027GetIm"
    "plicitUsersForRole\022&.palm.rbac.v1.Policy"
    "RolesResponse.Item\032!.palm.rbac.v1.Policy"
    "UsersResponse\"\000\022T\n\017AddRolesForUser\022\'.pal"
    "m.rbac.v1.PolicyRolesForUserRequest\032\026.go"
    "ogle.protobuf.Empty\"\000\022W\n\022DeleteRolesForU"
    "ser\022\'.palm.rbac.v1.PolicyRolesForUserReq"
    "uest\032\026.google.protobuf.Empty\"\000\022j\n\025GetPer"
    "missionsForUser\022&.palm.rbac.v1.PolicyUse"
    "rsResponse.Item\032\'.palm.rbac.v1.PolicyPer"
    "missionsResponse\"\000\022r\n\035GetImplicitPermiss"
    "ionsForUser\022&.palm.rbac.v1.PolicyUsersRe"
    "sponse.Item\032\'.palm.rbac.v1.PolicyPermiss"
    "ionsResponse\"\000\022`\n\025AddPermissionsForUser\022"
    "-.palm.rbac.v1.PolicyPermissionsForUserR"
    "equest\032\026.google.protobuf.Empty\"\000\022c\n\030Dele"
    "tePermissionsForUser\022-.palm.rbac.v1.Poli"
    "cyPermissionsForUserRequest\032\026.google.pro"
    "tobuf.Empty\"\000\022j\n\025GetPermissionsForRole\022&"
    ".palm.rbac.v1.PolicyRolesResponse.Item\032\'"
    ".palm.rbac.v1.PolicyPermissionsResponse\""
    "\000\022r\n\035GetImplicitPermissionsForRole\022&.pal"
    "m.rbac.v1.PolicyRolesResponse.Item\032\'.pal"
    "m.rbac.v1.PolicyPermissionsResponse\"\000\022`\n"
    "\025AddPermissionsForRole\022-.palm.rbac.v1.Po"
    "licyPermissionsForRoleRequest\032\026.google.p"
    "rotobuf.Empty\"\000\022c\n\030DeletePermissionsForR"
    "ole\022-.palm.rbac.v1.PolicyPermissionsForR"
    "oleRequest\032\026.google.protobuf.Empty\"\000B[\n*"
    "com.github.saturn_xiv.palm.plugins.rbac."
    "v1P\001Z+github.com/saturn-xiv/palm/rbac/se"
    "rvices/v2b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_rbac_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_rbac_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_rbac_2eproto = {
    false,
    false,
    4137,
    descriptor_table_protodef_rbac_2eproto,
    "rbac.proto",
    &descriptor_table_rbac_2eproto_once,
    descriptor_table_rbac_2eproto_deps,
    1,
    23,
    schemas,
    file_default_instances,
    TableStruct_rbac_2eproto::offsets,
    file_level_metadata_rbac_2eproto,
    file_level_enum_descriptors_rbac_2eproto,
    file_level_service_descriptors_rbac_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_rbac_2eproto_getter() {
  return &descriptor_table_rbac_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_rbac_2eproto(&descriptor_table_rbac_2eproto);
namespace palm {
namespace rbac {
namespace v1 {
// ===================================================================

class PolicyHasRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PolicyHasRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PolicyHasRequest, _impl_._has_bits_);
  static const ::palm::rbac::v1::PolicyUsersResponse_Item& user(const PolicyHasRequest* msg);
  static void set_has_user(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::palm::rbac::v1::PolicyRolesResponse_Item& role(const PolicyHasRequest* msg);
  static void set_has_role(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::palm::rbac::v1::PolicyUsersResponse_Item& PolicyHasRequest::_Internal::user(const PolicyHasRequest* msg) {
  return *msg->_impl_.user_;
}
const ::palm::rbac::v1::PolicyRolesResponse_Item& PolicyHasRequest::_Internal::role(const PolicyHasRequest* msg) {
  return *msg->_impl_.role_;
}
PolicyHasRequest::PolicyHasRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyHasRequest)
}
inline PROTOBUF_NDEBUG_INLINE PolicyHasRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PolicyHasRequest::PolicyHasRequest(
    ::google::protobuf::Arena* arena,
    const PolicyHasRequest& from)
    : ::google::protobuf::Message(arena) {
  PolicyHasRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.user_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::palm::rbac::v1::PolicyUsersResponse_Item>(arena, *from._impl_.user_)
                : nullptr;
  _impl_.role_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::palm::rbac::v1::PolicyRolesResponse_Item>(arena, *from._impl_.role_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyHasRequest)
}
inline PROTOBUF_NDEBUG_INLINE PolicyHasRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PolicyHasRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, user_),
           0,
           offsetof(Impl_, role_) -
               offsetof(Impl_, user_) +
               sizeof(Impl_::role_));
}
PolicyHasRequest::~PolicyHasRequest() {
  // @@protoc_insertion_point(destructor:palm.rbac.v1.PolicyHasRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PolicyHasRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.user_;
  delete _impl_.role_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PolicyHasRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.rbac.v1.PolicyHasRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.user_ != nullptr);
      _impl_.user_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.role_ != nullptr);
      _impl_.role_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PolicyHasRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PolicyHasRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PolicyHasRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PolicyHasRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .palm.rbac.v1.PolicyRolesResponse.Item role = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(PolicyHasRequest, _impl_.role_)}},
    // .palm.rbac.v1.PolicyUsersResponse.Item user = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PolicyHasRequest, _impl_.user_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .palm.rbac.v1.PolicyUsersResponse.Item user = 1;
    {PROTOBUF_FIELD_OFFSET(PolicyHasRequest, _impl_.user_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .palm.rbac.v1.PolicyRolesResponse.Item role = 2;
    {PROTOBUF_FIELD_OFFSET(PolicyHasRequest, _impl_.role_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::PolicyUsersResponse_Item>()},
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::PolicyRolesResponse_Item>()},
  }}, {{
  }},
};

::uint8_t* PolicyHasRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.rbac.v1.PolicyHasRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.rbac.v1.PolicyUsersResponse.Item user = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::user(this),
        _Internal::user(this).GetCachedSize(), target, stream);
  }

  // .palm.rbac.v1.PolicyRolesResponse.Item role = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::role(this),
        _Internal::role(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.rbac.v1.PolicyHasRequest)
  return target;
}

::size_t PolicyHasRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.rbac.v1.PolicyHasRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .palm.rbac.v1.PolicyUsersResponse.Item user = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.user_);
    }

    // .palm.rbac.v1.PolicyRolesResponse.Item role = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.role_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PolicyHasRequest::_class_data_ = {
    PolicyHasRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PolicyHasRequest::GetClassData() const {
  return &_class_data_;
}

void PolicyHasRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PolicyHasRequest*>(&to_msg);
  auto& from = static_cast<const PolicyHasRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.rbac.v1.PolicyHasRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_user()->::palm::rbac::v1::PolicyUsersResponse_Item::MergeFrom(
          from._internal_user());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_role()->::palm::rbac::v1::PolicyRolesResponse_Item::MergeFrom(
          from._internal_role());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyHasRequest::CopyFrom(const PolicyHasRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.rbac.v1.PolicyHasRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PolicyHasRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PolicyHasRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PolicyHasRequest::InternalSwap(PolicyHasRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PolicyHasRequest, _impl_.role_)
      + sizeof(PolicyHasRequest::_impl_.role_)
      - PROTOBUF_FIELD_OFFSET(PolicyHasRequest, _impl_.user_)>(
          reinterpret_cast<char*>(&_impl_.user_),
          reinterpret_cast<char*>(&other->_impl_.user_));
}

::google::protobuf::Metadata PolicyHasRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[0]);
}
// ===================================================================

class PolicyCanRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PolicyCanRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PolicyCanRequest, _impl_._has_bits_);
  static const ::palm::rbac::v1::PolicyUsersResponse_Item& user(const PolicyCanRequest* msg);
  static void set_has_user(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource& resource(const PolicyCanRequest* msg);
  static void set_has_resource(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation& operation(const PolicyCanRequest* msg);
  static void set_has_operation(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::palm::rbac::v1::PolicyUsersResponse_Item& PolicyCanRequest::_Internal::user(const PolicyCanRequest* msg) {
  return *msg->_impl_.user_;
}
const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource& PolicyCanRequest::_Internal::resource(const PolicyCanRequest* msg) {
  return *msg->_impl_.resource_;
}
const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation& PolicyCanRequest::_Internal::operation(const PolicyCanRequest* msg) {
  return *msg->_impl_.operation_;
}
PolicyCanRequest::PolicyCanRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyCanRequest)
}
inline PROTOBUF_NDEBUG_INLINE PolicyCanRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PolicyCanRequest::PolicyCanRequest(
    ::google::protobuf::Arena* arena,
    const PolicyCanRequest& from)
    : ::google::protobuf::Message(arena) {
  PolicyCanRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.user_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::palm::rbac::v1::PolicyUsersResponse_Item>(arena, *from._impl_.user_)
                : nullptr;
  _impl_.resource_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource>(arena, *from._impl_.resource_)
                : nullptr;
  _impl_.operation_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation>(arena, *from._impl_.operation_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyCanRequest)
}
inline PROTOBUF_NDEBUG_INLINE PolicyCanRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PolicyCanRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, user_),
           0,
           offsetof(Impl_, operation_) -
               offsetof(Impl_, user_) +
               sizeof(Impl_::operation_));
}
PolicyCanRequest::~PolicyCanRequest() {
  // @@protoc_insertion_point(destructor:palm.rbac.v1.PolicyCanRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PolicyCanRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.user_;
  delete _impl_.resource_;
  delete _impl_.operation_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PolicyCanRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.rbac.v1.PolicyCanRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.user_ != nullptr);
      _impl_.user_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.resource_ != nullptr);
      _impl_.resource_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      ABSL_DCHECK(_impl_.operation_ != nullptr);
      _impl_.operation_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PolicyCanRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 0, 2> PolicyCanRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PolicyCanRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PolicyCanRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .palm.rbac.v1.PolicyUsersResponse.Item user = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PolicyCanRequest, _impl_.user_)}},
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Resource resource = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(PolicyCanRequest, _impl_.resource_)}},
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation operation = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 2, 2, PROTOBUF_FIELD_OFFSET(PolicyCanRequest, _impl_.operation_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .palm.rbac.v1.PolicyUsersResponse.Item user = 1;
    {PROTOBUF_FIELD_OFFSET(PolicyCanRequest, _impl_.user_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Resource resource = 2;
    {PROTOBUF_FIELD_OFFSET(PolicyCanRequest, _impl_.resource_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation operation = 3;
    {PROTOBUF_FIELD_OFFSET(PolicyCanRequest, _impl_.operation_), _Internal::kHasBitsOffset + 2, 2,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::PolicyUsersResponse_Item>()},
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource>()},
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation>()},
  }}, {{
  }},
};

::uint8_t* PolicyCanRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.rbac.v1.PolicyCanRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.rbac.v1.PolicyUsersResponse.Item user = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::user(this),
        _Internal::user(this).GetCachedSize(), target, stream);
  }

  // .palm.rbac.v1.PolicyPermissionsResponse.Item.Resource resource = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::resource(this),
        _Internal::resource(this).GetCachedSize(), target, stream);
  }

  // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation operation = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::operation(this),
        _Internal::operation(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.rbac.v1.PolicyCanRequest)
  return target;
}

::size_t PolicyCanRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.rbac.v1.PolicyCanRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // .palm.rbac.v1.PolicyUsersResponse.Item user = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.user_);
    }

    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Resource resource = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.resource_);
    }

    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation operation = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.operation_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PolicyCanRequest::_class_data_ = {
    PolicyCanRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PolicyCanRequest::GetClassData() const {
  return &_class_data_;
}

void PolicyCanRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PolicyCanRequest*>(&to_msg);
  auto& from = static_cast<const PolicyCanRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.rbac.v1.PolicyCanRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_user()->::palm::rbac::v1::PolicyUsersResponse_Item::MergeFrom(
          from._internal_user());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_resource()->::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource::MergeFrom(
          from._internal_resource());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_mutable_operation()->::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation::MergeFrom(
          from._internal_operation());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyCanRequest::CopyFrom(const PolicyCanRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.rbac.v1.PolicyCanRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PolicyCanRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PolicyCanRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PolicyCanRequest::InternalSwap(PolicyCanRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PolicyCanRequest, _impl_.operation_)
      + sizeof(PolicyCanRequest::_impl_.operation_)
      - PROTOBUF_FIELD_OFFSET(PolicyCanRequest, _impl_.user_)>(
          reinterpret_cast<char*>(&_impl_.user_),
          reinterpret_cast<char*>(&other->_impl_.user_));
}

::google::protobuf::Metadata PolicyCanRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[1]);
}
// ===================================================================

class PolicyUsersResponse_Item::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyUsersResponse_Item, _impl_._oneof_case_);
};

PolicyUsersResponse_Item::PolicyUsersResponse_Item(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyUsersResponse.Item)
}
inline PROTOBUF_NDEBUG_INLINE PolicyUsersResponse_Item::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : id_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

PolicyUsersResponse_Item::PolicyUsersResponse_Item(
    ::google::protobuf::Arena* arena,
    const PolicyUsersResponse_Item& from)
    : ::google::protobuf::Message(arena) {
  PolicyUsersResponse_Item* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (id_case()) {
    case ID_NOT_SET:
      break;
      case kI:
        _impl_.id_.i_ = from._impl_.id_.i_;
        break;
      case kS:
        new (&_impl_.id_.s_) decltype(_impl_.id_.s_){arena, from._impl_.id_.s_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyUsersResponse.Item)
}
inline PROTOBUF_NDEBUG_INLINE PolicyUsersResponse_Item::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void PolicyUsersResponse_Item::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PolicyUsersResponse_Item::~PolicyUsersResponse_Item() {
  // @@protoc_insertion_point(destructor:palm.rbac.v1.PolicyUsersResponse.Item)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PolicyUsersResponse_Item::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_id()) {
    clear_id();
  }
  _impl_.~Impl_();
}

void PolicyUsersResponse_Item::clear_id() {
// @@protoc_insertion_point(one_of_clear_start:palm.rbac.v1.PolicyUsersResponse.Item)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (id_case()) {
    case kI: {
      // No need to clear
      break;
    }
    case kS: {
      _impl_.id_.s_.Destroy();
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = ID_NOT_SET;
}


PROTOBUF_NOINLINE void PolicyUsersResponse_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.rbac.v1.PolicyUsersResponse.Item)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_id();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PolicyUsersResponse_Item::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 0, 47, 2> PolicyUsersResponse_Item::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967037,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PolicyUsersResponse_Item_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 i = 2;
    {PROTOBUF_FIELD_OFFSET(PolicyUsersResponse_Item, _impl_.id_.i_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // string s = 9;
    {PROTOBUF_FIELD_OFFSET(PolicyUsersResponse_Item, _impl_.id_.s_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\0\1\0\0\0\0\0"
    "palm.rbac.v1.PolicyUsersResponse.Item"
    "s"
  }},
};

::uint8_t* PolicyUsersResponse_Item::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.rbac.v1.PolicyUsersResponse.Item)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (id_case()) {
    case kI: {
      target = ::google::protobuf::internal::WireFormatLite::
          WriteInt64ToArrayWithField<2>(
              stream, this->_internal_i(), target);
      break;
    }
    case kS: {
      const std::string& _s = this->_internal_s();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.rbac.v1.PolicyUsersResponse.Item.s");
      target = stream->WriteStringMaybeAliased(9, _s, target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.rbac.v1.PolicyUsersResponse.Item)
  return target;
}

::size_t PolicyUsersResponse_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.rbac.v1.PolicyUsersResponse.Item)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (id_case()) {
    // int64 i = 2;
    case kI: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_i());
      break;
    }
    // string s = 9;
    case kS: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_s());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PolicyUsersResponse_Item::_class_data_ = {
    PolicyUsersResponse_Item::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PolicyUsersResponse_Item::GetClassData() const {
  return &_class_data_;
}

void PolicyUsersResponse_Item::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PolicyUsersResponse_Item*>(&to_msg);
  auto& from = static_cast<const PolicyUsersResponse_Item&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.rbac.v1.PolicyUsersResponse.Item)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.id_case()) {
    case kI: {
      _this->_internal_set_i(from._internal_i());
      break;
    }
    case kS: {
      _this->_internal_set_s(from._internal_s());
      break;
    }
    case ID_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyUsersResponse_Item::CopyFrom(const PolicyUsersResponse_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.rbac.v1.PolicyUsersResponse.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PolicyUsersResponse_Item::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PolicyUsersResponse_Item::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PolicyUsersResponse_Item::InternalSwap(PolicyUsersResponse_Item* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.id_, other->_impl_.id_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata PolicyUsersResponse_Item::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[2]);
}
// ===================================================================

class PolicyUsersResponse::_Internal {
 public:
};

PolicyUsersResponse::PolicyUsersResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyUsersResponse)
}
inline PROTOBUF_NDEBUG_INLINE PolicyUsersResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : items_{visibility, arena, from.items_},
        _cached_size_{0} {}

PolicyUsersResponse::PolicyUsersResponse(
    ::google::protobuf::Arena* arena,
    const PolicyUsersResponse& from)
    : ::google::protobuf::Message(arena) {
  PolicyUsersResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyUsersResponse)
}
inline PROTOBUF_NDEBUG_INLINE PolicyUsersResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : items_{visibility, arena},
        _cached_size_{0} {}

inline void PolicyUsersResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PolicyUsersResponse::~PolicyUsersResponse() {
  // @@protoc_insertion_point(destructor:palm.rbac.v1.PolicyUsersResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PolicyUsersResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PolicyUsersResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.rbac.v1.PolicyUsersResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PolicyUsersResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PolicyUsersResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PolicyUsersResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .palm.rbac.v1.PolicyUsersResponse.Item items = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PolicyUsersResponse, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .palm.rbac.v1.PolicyUsersResponse.Item items = 1;
    {PROTOBUF_FIELD_OFFSET(PolicyUsersResponse, _impl_.items_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::PolicyUsersResponse_Item>()},
  }}, {{
  }},
};

::uint8_t* PolicyUsersResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.rbac.v1.PolicyUsersResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .palm.rbac.v1.PolicyUsersResponse.Item items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.rbac.v1.PolicyUsersResponse)
  return target;
}

::size_t PolicyUsersResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.rbac.v1.PolicyUsersResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.rbac.v1.PolicyUsersResponse.Item items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_internal_items()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PolicyUsersResponse::_class_data_ = {
    PolicyUsersResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PolicyUsersResponse::GetClassData() const {
  return &_class_data_;
}

void PolicyUsersResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PolicyUsersResponse*>(&to_msg);
  auto& from = static_cast<const PolicyUsersResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.rbac.v1.PolicyUsersResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyUsersResponse::CopyFrom(const PolicyUsersResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.rbac.v1.PolicyUsersResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PolicyUsersResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PolicyUsersResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PolicyUsersResponse::InternalSwap(PolicyUsersResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::google::protobuf::Metadata PolicyUsersResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[3]);
}
// ===================================================================

class PolicyRolesResponse_Item_Administrator::_Internal {
 public:
};

PolicyRolesResponse_Item_Administrator::PolicyRolesResponse_Item_Administrator(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyRolesResponse.Item.Administrator)
}
PolicyRolesResponse_Item_Administrator::PolicyRolesResponse_Item_Administrator(
    ::google::protobuf::Arena* arena,
    const PolicyRolesResponse_Item_Administrator& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  PolicyRolesResponse_Item_Administrator* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyRolesResponse.Item.Administrator)
}









::google::protobuf::Metadata PolicyRolesResponse_Item_Administrator::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[4]);
}
// ===================================================================

class PolicyRolesResponse_Item_Root::_Internal {
 public:
};

PolicyRolesResponse_Item_Root::PolicyRolesResponse_Item_Root(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyRolesResponse.Item.Root)
}
PolicyRolesResponse_Item_Root::PolicyRolesResponse_Item_Root(
    ::google::protobuf::Arena* arena,
    const PolicyRolesResponse_Item_Root& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  PolicyRolesResponse_Item_Root* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyRolesResponse.Item.Root)
}









::google::protobuf::Metadata PolicyRolesResponse_Item_Root::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[5]);
}
// ===================================================================

class PolicyRolesResponse_Item::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyRolesResponse_Item, _impl_._oneof_case_);
  static const ::palm::rbac::v1::PolicyRolesResponse_Item_Root& root(const PolicyRolesResponse_Item* msg);
  static const ::palm::rbac::v1::PolicyRolesResponse_Item_Administrator& administrator(const PolicyRolesResponse_Item* msg);
};

const ::palm::rbac::v1::PolicyRolesResponse_Item_Root& PolicyRolesResponse_Item::_Internal::root(const PolicyRolesResponse_Item* msg) {
  return *msg->_impl_.by_.root_;
}
const ::palm::rbac::v1::PolicyRolesResponse_Item_Administrator& PolicyRolesResponse_Item::_Internal::administrator(const PolicyRolesResponse_Item* msg) {
  return *msg->_impl_.by_.administrator_;
}
void PolicyRolesResponse_Item::set_allocated_root(::palm::rbac::v1::PolicyRolesResponse_Item_Root* root) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_by();
  if (root) {
    ::google::protobuf::Arena* submessage_arena = root->GetArena();
    if (message_arena != submessage_arena) {
      root = ::google::protobuf::internal::GetOwnedMessage(message_arena, root, submessage_arena);
    }
    set_has_root();
    _impl_.by_.root_ = root;
  }
  // @@protoc_insertion_point(field_set_allocated:palm.rbac.v1.PolicyRolesResponse.Item.root)
}
void PolicyRolesResponse_Item::set_allocated_administrator(::palm::rbac::v1::PolicyRolesResponse_Item_Administrator* administrator) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_by();
  if (administrator) {
    ::google::protobuf::Arena* submessage_arena = administrator->GetArena();
    if (message_arena != submessage_arena) {
      administrator = ::google::protobuf::internal::GetOwnedMessage(message_arena, administrator, submessage_arena);
    }
    set_has_administrator();
    _impl_.by_.administrator_ = administrator;
  }
  // @@protoc_insertion_point(field_set_allocated:palm.rbac.v1.PolicyRolesResponse.Item.administrator)
}
PolicyRolesResponse_Item::PolicyRolesResponse_Item(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyRolesResponse.Item)
}
inline PROTOBUF_NDEBUG_INLINE PolicyRolesResponse_Item::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : by_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

PolicyRolesResponse_Item::PolicyRolesResponse_Item(
    ::google::protobuf::Arena* arena,
    const PolicyRolesResponse_Item& from)
    : ::google::protobuf::Message(arena) {
  PolicyRolesResponse_Item* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (by_case()) {
    case BY_NOT_SET:
      break;
      case kRoot:
        _impl_.by_.root_ = CreateMaybeMessage<::palm::rbac::v1::PolicyRolesResponse_Item_Root>(arena, *from._impl_.by_.root_);
        break;
      case kAdministrator:
        _impl_.by_.administrator_ = CreateMaybeMessage<::palm::rbac::v1::PolicyRolesResponse_Item_Administrator>(arena, *from._impl_.by_.administrator_);
        break;
      case kCode:
        new (&_impl_.by_.code_) decltype(_impl_.by_.code_){arena, from._impl_.by_.code_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyRolesResponse.Item)
}
inline PROTOBUF_NDEBUG_INLINE PolicyRolesResponse_Item::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : by_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void PolicyRolesResponse_Item::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PolicyRolesResponse_Item::~PolicyRolesResponse_Item() {
  // @@protoc_insertion_point(destructor:palm.rbac.v1.PolicyRolesResponse.Item)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PolicyRolesResponse_Item::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_by()) {
    clear_by();
  }
  _impl_.~Impl_();
}

void PolicyRolesResponse_Item::clear_by() {
// @@protoc_insertion_point(one_of_clear_start:palm.rbac.v1.PolicyRolesResponse.Item)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (by_case()) {
    case kRoot: {
      if (GetArena() == nullptr) {
        delete _impl_.by_.root_;
      }
      break;
    }
    case kAdministrator: {
      if (GetArena() == nullptr) {
        delete _impl_.by_.administrator_;
      }
      break;
    }
    case kCode: {
      _impl_.by_.code_.Destroy();
      break;
    }
    case BY_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = BY_NOT_SET;
}


PROTOBUF_NOINLINE void PolicyRolesResponse_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.rbac.v1.PolicyRolesResponse.Item)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_by();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PolicyRolesResponse_Item::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 3, 2, 50, 2> PolicyRolesResponse_Item::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967036,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PolicyRolesResponse_Item_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .palm.rbac.v1.PolicyRolesResponse.Item.Root root = 1;
    {PROTOBUF_FIELD_OFFSET(PolicyRolesResponse_Item, _impl_.by_.root_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .palm.rbac.v1.PolicyRolesResponse.Item.Administrator administrator = 2;
    {PROTOBUF_FIELD_OFFSET(PolicyRolesResponse_Item, _impl_.by_.administrator_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // string code = 9;
    {PROTOBUF_FIELD_OFFSET(PolicyRolesResponse_Item, _impl_.by_.code_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::FieldAuxDefaultMessage{}, &::palm::rbac::v1::_PolicyRolesResponse_Item_Root_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::palm::rbac::v1::_PolicyRolesResponse_Item_Administrator_default_instance_},
  }}, {{
    "\45\0\0\4\0\0\0\0"
    "palm.rbac.v1.PolicyRolesResponse.Item"
    "code"
  }},
};

::uint8_t* PolicyRolesResponse_Item::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.rbac.v1.PolicyRolesResponse.Item)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (by_case()) {
    case kRoot: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::root(this),
          _Internal::root(this).GetCachedSize(), target, stream);
      break;
    }
    case kAdministrator: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::administrator(this),
          _Internal::administrator(this).GetCachedSize(), target, stream);
      break;
    }
    case kCode: {
      const std::string& _s = this->_internal_code();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.rbac.v1.PolicyRolesResponse.Item.code");
      target = stream->WriteStringMaybeAliased(9, _s, target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.rbac.v1.PolicyRolesResponse.Item)
  return target;
}

::size_t PolicyRolesResponse_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.rbac.v1.PolicyRolesResponse.Item)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (by_case()) {
    // .palm.rbac.v1.PolicyRolesResponse.Item.Root root = 1;
    case kRoot: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.by_.root_);
      break;
    }
    // .palm.rbac.v1.PolicyRolesResponse.Item.Administrator administrator = 2;
    case kAdministrator: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.by_.administrator_);
      break;
    }
    // string code = 9;
    case kCode: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_code());
      break;
    }
    case BY_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PolicyRolesResponse_Item::_class_data_ = {
    PolicyRolesResponse_Item::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PolicyRolesResponse_Item::GetClassData() const {
  return &_class_data_;
}

void PolicyRolesResponse_Item::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PolicyRolesResponse_Item*>(&to_msg);
  auto& from = static_cast<const PolicyRolesResponse_Item&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.rbac.v1.PolicyRolesResponse.Item)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.by_case()) {
    case kRoot: {
      _this->_internal_mutable_root()->::palm::rbac::v1::PolicyRolesResponse_Item_Root::MergeFrom(
          from._internal_root());
      break;
    }
    case kAdministrator: {
      _this->_internal_mutable_administrator()->::palm::rbac::v1::PolicyRolesResponse_Item_Administrator::MergeFrom(
          from._internal_administrator());
      break;
    }
    case kCode: {
      _this->_internal_set_code(from._internal_code());
      break;
    }
    case BY_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyRolesResponse_Item::CopyFrom(const PolicyRolesResponse_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.rbac.v1.PolicyRolesResponse.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PolicyRolesResponse_Item::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PolicyRolesResponse_Item::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PolicyRolesResponse_Item::InternalSwap(PolicyRolesResponse_Item* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.by_, other->_impl_.by_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata PolicyRolesResponse_Item::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[6]);
}
// ===================================================================

class PolicyRolesResponse::_Internal {
 public:
};

PolicyRolesResponse::PolicyRolesResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyRolesResponse)
}
inline PROTOBUF_NDEBUG_INLINE PolicyRolesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : items_{visibility, arena, from.items_},
        _cached_size_{0} {}

PolicyRolesResponse::PolicyRolesResponse(
    ::google::protobuf::Arena* arena,
    const PolicyRolesResponse& from)
    : ::google::protobuf::Message(arena) {
  PolicyRolesResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyRolesResponse)
}
inline PROTOBUF_NDEBUG_INLINE PolicyRolesResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : items_{visibility, arena},
        _cached_size_{0} {}

inline void PolicyRolesResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PolicyRolesResponse::~PolicyRolesResponse() {
  // @@protoc_insertion_point(destructor:palm.rbac.v1.PolicyRolesResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PolicyRolesResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PolicyRolesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.rbac.v1.PolicyRolesResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PolicyRolesResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PolicyRolesResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PolicyRolesResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .palm.rbac.v1.PolicyRolesResponse.Item items = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PolicyRolesResponse, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .palm.rbac.v1.PolicyRolesResponse.Item items = 1;
    {PROTOBUF_FIELD_OFFSET(PolicyRolesResponse, _impl_.items_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::PolicyRolesResponse_Item>()},
  }}, {{
  }},
};

::uint8_t* PolicyRolesResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.rbac.v1.PolicyRolesResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .palm.rbac.v1.PolicyRolesResponse.Item items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.rbac.v1.PolicyRolesResponse)
  return target;
}

::size_t PolicyRolesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.rbac.v1.PolicyRolesResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.rbac.v1.PolicyRolesResponse.Item items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_internal_items()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PolicyRolesResponse::_class_data_ = {
    PolicyRolesResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PolicyRolesResponse::GetClassData() const {
  return &_class_data_;
}

void PolicyRolesResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PolicyRolesResponse*>(&to_msg);
  auto& from = static_cast<const PolicyRolesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.rbac.v1.PolicyRolesResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyRolesResponse::CopyFrom(const PolicyRolesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.rbac.v1.PolicyRolesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PolicyRolesResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PolicyRolesResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PolicyRolesResponse::InternalSwap(PolicyRolesResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::google::protobuf::Metadata PolicyRolesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[7]);
}
// ===================================================================

class PolicyRolesForUserRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PolicyRolesForUserRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PolicyRolesForUserRequest, _impl_._has_bits_);
  static const ::palm::rbac::v1::PolicyUsersResponse_Item& user(const PolicyRolesForUserRequest* msg);
  static void set_has_user(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::rbac::v1::PolicyUsersResponse_Item& PolicyRolesForUserRequest::_Internal::user(const PolicyRolesForUserRequest* msg) {
  return *msg->_impl_.user_;
}
PolicyRolesForUserRequest::PolicyRolesForUserRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyRolesForUserRequest)
}
inline PROTOBUF_NDEBUG_INLINE PolicyRolesForUserRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        roles_{visibility, arena, from.roles_} {}

PolicyRolesForUserRequest::PolicyRolesForUserRequest(
    ::google::protobuf::Arena* arena,
    const PolicyRolesForUserRequest& from)
    : ::google::protobuf::Message(arena) {
  PolicyRolesForUserRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.user_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::palm::rbac::v1::PolicyUsersResponse_Item>(arena, *from._impl_.user_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyRolesForUserRequest)
}
inline PROTOBUF_NDEBUG_INLINE PolicyRolesForUserRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        roles_{visibility, arena} {}

inline void PolicyRolesForUserRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.user_ = {};
}
PolicyRolesForUserRequest::~PolicyRolesForUserRequest() {
  // @@protoc_insertion_point(destructor:palm.rbac.v1.PolicyRolesForUserRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PolicyRolesForUserRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.user_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PolicyRolesForUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.rbac.v1.PolicyRolesForUserRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.roles_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.user_ != nullptr);
    _impl_.user_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PolicyRolesForUserRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PolicyRolesForUserRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PolicyRolesForUserRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PolicyRolesForUserRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .palm.rbac.v1.PolicyRolesResponse.Item roles = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(PolicyRolesForUserRequest, _impl_.roles_)}},
    // .palm.rbac.v1.PolicyUsersResponse.Item user = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PolicyRolesForUserRequest, _impl_.user_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .palm.rbac.v1.PolicyUsersResponse.Item user = 1;
    {PROTOBUF_FIELD_OFFSET(PolicyRolesForUserRequest, _impl_.user_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .palm.rbac.v1.PolicyRolesResponse.Item roles = 2;
    {PROTOBUF_FIELD_OFFSET(PolicyRolesForUserRequest, _impl_.roles_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::PolicyUsersResponse_Item>()},
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::PolicyRolesResponse_Item>()},
  }}, {{
  }},
};

::uint8_t* PolicyRolesForUserRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.rbac.v1.PolicyRolesForUserRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.rbac.v1.PolicyUsersResponse.Item user = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::user(this),
        _Internal::user(this).GetCachedSize(), target, stream);
  }

  // repeated .palm.rbac.v1.PolicyRolesResponse.Item roles = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_roles_size()); i < n; i++) {
    const auto& repfield = this->_internal_roles().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.rbac.v1.PolicyRolesForUserRequest)
  return target;
}

::size_t PolicyRolesForUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.rbac.v1.PolicyRolesForUserRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.rbac.v1.PolicyRolesResponse.Item roles = 2;
  total_size += 1UL * this->_internal_roles_size();
  for (const auto& msg : this->_internal_roles()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .palm.rbac.v1.PolicyUsersResponse.Item user = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.user_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PolicyRolesForUserRequest::_class_data_ = {
    PolicyRolesForUserRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PolicyRolesForUserRequest::GetClassData() const {
  return &_class_data_;
}

void PolicyRolesForUserRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PolicyRolesForUserRequest*>(&to_msg);
  auto& from = static_cast<const PolicyRolesForUserRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.rbac.v1.PolicyRolesForUserRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_roles()->MergeFrom(
      from._internal_roles());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_user()->::palm::rbac::v1::PolicyUsersResponse_Item::MergeFrom(
        from._internal_user());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyRolesForUserRequest::CopyFrom(const PolicyRolesForUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.rbac.v1.PolicyRolesForUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PolicyRolesForUserRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PolicyRolesForUserRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PolicyRolesForUserRequest::InternalSwap(PolicyRolesForUserRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.roles_.InternalSwap(&other->_impl_.roles_);
  swap(_impl_.user_, other->_impl_.user_);
}

::google::protobuf::Metadata PolicyRolesForUserRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[8]);
}
// ===================================================================

class PolicyPermissionsForUserRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PolicyPermissionsForUserRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PolicyPermissionsForUserRequest, _impl_._has_bits_);
  static const ::palm::rbac::v1::PolicyUsersResponse_Item& user(const PolicyPermissionsForUserRequest* msg);
  static void set_has_user(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::rbac::v1::PolicyUsersResponse_Item& PolicyPermissionsForUserRequest::_Internal::user(const PolicyPermissionsForUserRequest* msg) {
  return *msg->_impl_.user_;
}
PolicyPermissionsForUserRequest::PolicyPermissionsForUserRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyPermissionsForUserRequest)
}
inline PROTOBUF_NDEBUG_INLINE PolicyPermissionsForUserRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        permissions_{visibility, arena, from.permissions_} {}

PolicyPermissionsForUserRequest::PolicyPermissionsForUserRequest(
    ::google::protobuf::Arena* arena,
    const PolicyPermissionsForUserRequest& from)
    : ::google::protobuf::Message(arena) {
  PolicyPermissionsForUserRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.user_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::palm::rbac::v1::PolicyUsersResponse_Item>(arena, *from._impl_.user_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyPermissionsForUserRequest)
}
inline PROTOBUF_NDEBUG_INLINE PolicyPermissionsForUserRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        permissions_{visibility, arena} {}

inline void PolicyPermissionsForUserRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.user_ = {};
}
PolicyPermissionsForUserRequest::~PolicyPermissionsForUserRequest() {
  // @@protoc_insertion_point(destructor:palm.rbac.v1.PolicyPermissionsForUserRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PolicyPermissionsForUserRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.user_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PolicyPermissionsForUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.rbac.v1.PolicyPermissionsForUserRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.permissions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.user_ != nullptr);
    _impl_.user_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PolicyPermissionsForUserRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PolicyPermissionsForUserRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PolicyPermissionsForUserRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PolicyPermissionsForUserRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .palm.rbac.v1.PolicyPermissionsResponse.Item permissions = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(PolicyPermissionsForUserRequest, _impl_.permissions_)}},
    // .palm.rbac.v1.PolicyUsersResponse.Item user = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PolicyPermissionsForUserRequest, _impl_.user_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .palm.rbac.v1.PolicyUsersResponse.Item user = 1;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsForUserRequest, _impl_.user_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .palm.rbac.v1.PolicyPermissionsResponse.Item permissions = 2;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsForUserRequest, _impl_.permissions_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::PolicyUsersResponse_Item>()},
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::PolicyPermissionsResponse_Item>()},
  }}, {{
  }},
};

::uint8_t* PolicyPermissionsForUserRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.rbac.v1.PolicyPermissionsForUserRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.rbac.v1.PolicyUsersResponse.Item user = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::user(this),
        _Internal::user(this).GetCachedSize(), target, stream);
  }

  // repeated .palm.rbac.v1.PolicyPermissionsResponse.Item permissions = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_permissions_size()); i < n; i++) {
    const auto& repfield = this->_internal_permissions().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.rbac.v1.PolicyPermissionsForUserRequest)
  return target;
}

::size_t PolicyPermissionsForUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.rbac.v1.PolicyPermissionsForUserRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.rbac.v1.PolicyPermissionsResponse.Item permissions = 2;
  total_size += 1UL * this->_internal_permissions_size();
  for (const auto& msg : this->_internal_permissions()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .palm.rbac.v1.PolicyUsersResponse.Item user = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.user_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PolicyPermissionsForUserRequest::_class_data_ = {
    PolicyPermissionsForUserRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PolicyPermissionsForUserRequest::GetClassData() const {
  return &_class_data_;
}

void PolicyPermissionsForUserRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PolicyPermissionsForUserRequest*>(&to_msg);
  auto& from = static_cast<const PolicyPermissionsForUserRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.rbac.v1.PolicyPermissionsForUserRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_permissions()->MergeFrom(
      from._internal_permissions());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_user()->::palm::rbac::v1::PolicyUsersResponse_Item::MergeFrom(
        from._internal_user());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyPermissionsForUserRequest::CopyFrom(const PolicyPermissionsForUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.rbac.v1.PolicyPermissionsForUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PolicyPermissionsForUserRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PolicyPermissionsForUserRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PolicyPermissionsForUserRequest::InternalSwap(PolicyPermissionsForUserRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.permissions_.InternalSwap(&other->_impl_.permissions_);
  swap(_impl_.user_, other->_impl_.user_);
}

::google::protobuf::Metadata PolicyPermissionsForUserRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[9]);
}
// ===================================================================

class PolicyPermissionsForRoleRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PolicyPermissionsForRoleRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PolicyPermissionsForRoleRequest, _impl_._has_bits_);
  static const ::palm::rbac::v1::PolicyRolesResponse_Item& role(const PolicyPermissionsForRoleRequest* msg);
  static void set_has_role(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::rbac::v1::PolicyRolesResponse_Item& PolicyPermissionsForRoleRequest::_Internal::role(const PolicyPermissionsForRoleRequest* msg) {
  return *msg->_impl_.role_;
}
PolicyPermissionsForRoleRequest::PolicyPermissionsForRoleRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyPermissionsForRoleRequest)
}
inline PROTOBUF_NDEBUG_INLINE PolicyPermissionsForRoleRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        permissions_{visibility, arena, from.permissions_} {}

PolicyPermissionsForRoleRequest::PolicyPermissionsForRoleRequest(
    ::google::protobuf::Arena* arena,
    const PolicyPermissionsForRoleRequest& from)
    : ::google::protobuf::Message(arena) {
  PolicyPermissionsForRoleRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.role_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::palm::rbac::v1::PolicyRolesResponse_Item>(arena, *from._impl_.role_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyPermissionsForRoleRequest)
}
inline PROTOBUF_NDEBUG_INLINE PolicyPermissionsForRoleRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        permissions_{visibility, arena} {}

inline void PolicyPermissionsForRoleRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.role_ = {};
}
PolicyPermissionsForRoleRequest::~PolicyPermissionsForRoleRequest() {
  // @@protoc_insertion_point(destructor:palm.rbac.v1.PolicyPermissionsForRoleRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PolicyPermissionsForRoleRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.role_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PolicyPermissionsForRoleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.rbac.v1.PolicyPermissionsForRoleRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.permissions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.role_ != nullptr);
    _impl_.role_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PolicyPermissionsForRoleRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PolicyPermissionsForRoleRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PolicyPermissionsForRoleRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PolicyPermissionsForRoleRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .palm.rbac.v1.PolicyPermissionsResponse.Item permissions = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(PolicyPermissionsForRoleRequest, _impl_.permissions_)}},
    // .palm.rbac.v1.PolicyRolesResponse.Item role = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PolicyPermissionsForRoleRequest, _impl_.role_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .palm.rbac.v1.PolicyRolesResponse.Item role = 1;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsForRoleRequest, _impl_.role_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .palm.rbac.v1.PolicyPermissionsResponse.Item permissions = 2;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsForRoleRequest, _impl_.permissions_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::PolicyRolesResponse_Item>()},
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::PolicyPermissionsResponse_Item>()},
  }}, {{
  }},
};

::uint8_t* PolicyPermissionsForRoleRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.rbac.v1.PolicyPermissionsForRoleRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.rbac.v1.PolicyRolesResponse.Item role = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::role(this),
        _Internal::role(this).GetCachedSize(), target, stream);
  }

  // repeated .palm.rbac.v1.PolicyPermissionsResponse.Item permissions = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_permissions_size()); i < n; i++) {
    const auto& repfield = this->_internal_permissions().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.rbac.v1.PolicyPermissionsForRoleRequest)
  return target;
}

::size_t PolicyPermissionsForRoleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.rbac.v1.PolicyPermissionsForRoleRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.rbac.v1.PolicyPermissionsResponse.Item permissions = 2;
  total_size += 1UL * this->_internal_permissions_size();
  for (const auto& msg : this->_internal_permissions()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .palm.rbac.v1.PolicyRolesResponse.Item role = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.role_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PolicyPermissionsForRoleRequest::_class_data_ = {
    PolicyPermissionsForRoleRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PolicyPermissionsForRoleRequest::GetClassData() const {
  return &_class_data_;
}

void PolicyPermissionsForRoleRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PolicyPermissionsForRoleRequest*>(&to_msg);
  auto& from = static_cast<const PolicyPermissionsForRoleRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.rbac.v1.PolicyPermissionsForRoleRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_permissions()->MergeFrom(
      from._internal_permissions());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_role()->::palm::rbac::v1::PolicyRolesResponse_Item::MergeFrom(
        from._internal_role());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyPermissionsForRoleRequest::CopyFrom(const PolicyPermissionsForRoleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.rbac.v1.PolicyPermissionsForRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PolicyPermissionsForRoleRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PolicyPermissionsForRoleRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PolicyPermissionsForRoleRequest::InternalSwap(PolicyPermissionsForRoleRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.permissions_.InternalSwap(&other->_impl_.permissions_);
  swap(_impl_.role_, other->_impl_.role_);
}

::google::protobuf::Metadata PolicyPermissionsForRoleRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[10]);
}
// ===================================================================

class PolicyPermissionsResponse_Item_Resource_Id::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource_Id, _impl_._oneof_case_);
};

PolicyPermissionsResponse_Item_Resource_Id::PolicyPermissionsResponse_Item_Resource_Id(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource.Id)
}
inline PROTOBUF_NDEBUG_INLINE PolicyPermissionsResponse_Item_Resource_Id::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : by_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

PolicyPermissionsResponse_Item_Resource_Id::PolicyPermissionsResponse_Item_Resource_Id(
    ::google::protobuf::Arena* arena,
    const PolicyPermissionsResponse_Item_Resource_Id& from)
    : ::google::protobuf::Message(arena) {
  PolicyPermissionsResponse_Item_Resource_Id* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (by_case()) {
    case BY_NOT_SET:
      break;
      case kI:
        _impl_.by_.i_ = from._impl_.by_.i_;
        break;
      case kS:
        new (&_impl_.by_.s_) decltype(_impl_.by_.s_){arena, from._impl_.by_.s_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource.Id)
}
inline PROTOBUF_NDEBUG_INLINE PolicyPermissionsResponse_Item_Resource_Id::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : by_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void PolicyPermissionsResponse_Item_Resource_Id::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PolicyPermissionsResponse_Item_Resource_Id::~PolicyPermissionsResponse_Item_Resource_Id() {
  // @@protoc_insertion_point(destructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource.Id)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PolicyPermissionsResponse_Item_Resource_Id::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_by()) {
    clear_by();
  }
  _impl_.~Impl_();
}

void PolicyPermissionsResponse_Item_Resource_Id::clear_by() {
// @@protoc_insertion_point(one_of_clear_start:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource.Id)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (by_case()) {
    case kI: {
      // No need to clear
      break;
    }
    case kS: {
      _impl_.by_.s_.Destroy();
      break;
    }
    case BY_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = BY_NOT_SET;
}


PROTOBUF_NOINLINE void PolicyPermissionsResponse_Item_Resource_Id::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource.Id)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_by();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PolicyPermissionsResponse_Item_Resource_Id::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 0, 65, 2> PolicyPermissionsResponse_Item_Resource_Id::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294964223,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PolicyPermissionsResponse_Item_Resource_Id_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 i = 11;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item_Resource_Id, _impl_.by_.i_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kInt64)},
    // string s = 12;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item_Resource_Id, _impl_.by_.s_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\67\0\1\0\0\0\0\0"
    "palm.rbac.v1.PolicyPermissionsResponse.Item.Resource.Id"
    "s"
  }},
};

::uint8_t* PolicyPermissionsResponse_Item_Resource_Id::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource.Id)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (by_case()) {
    case kI: {
      target = ::google::protobuf::internal::WireFormatLite::
          WriteInt64ToArrayWithField<11>(
              stream, this->_internal_i(), target);
      break;
    }
    case kS: {
      const std::string& _s = this->_internal_s();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.rbac.v1.PolicyPermissionsResponse.Item.Resource.Id.s");
      target = stream->WriteStringMaybeAliased(12, _s, target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource.Id)
  return target;
}

::size_t PolicyPermissionsResponse_Item_Resource_Id::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource.Id)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (by_case()) {
    // int64 i = 11;
    case kI: {
      total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
          this->_internal_i());
      break;
    }
    // string s = 12;
    case kS: {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_s());
      break;
    }
    case BY_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PolicyPermissionsResponse_Item_Resource_Id::_class_data_ = {
    PolicyPermissionsResponse_Item_Resource_Id::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PolicyPermissionsResponse_Item_Resource_Id::GetClassData() const {
  return &_class_data_;
}

void PolicyPermissionsResponse_Item_Resource_Id::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PolicyPermissionsResponse_Item_Resource_Id*>(&to_msg);
  auto& from = static_cast<const PolicyPermissionsResponse_Item_Resource_Id&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource.Id)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.by_case()) {
    case kI: {
      _this->_internal_set_i(from._internal_i());
      break;
    }
    case kS: {
      _this->_internal_set_s(from._internal_s());
      break;
    }
    case BY_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyPermissionsResponse_Item_Resource_Id::CopyFrom(const PolicyPermissionsResponse_Item_Resource_Id& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource.Id)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PolicyPermissionsResponse_Item_Resource_Id::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PolicyPermissionsResponse_Item_Resource_Id::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PolicyPermissionsResponse_Item_Resource_Id::InternalSwap(PolicyPermissionsResponse_Item_Resource_Id* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.by_, other->_impl_.by_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata PolicyPermissionsResponse_Item_Resource_Id::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[11]);
}
// ===================================================================

class PolicyPermissionsResponse_Item_Resource::_Internal {
 public:
  using HasBits = decltype(std::declval<PolicyPermissionsResponse_Item_Resource>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item_Resource, _impl_._has_bits_);
  static const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource_Id& id(const PolicyPermissionsResponse_Item_Resource* msg);
  static void set_has_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource_Id& PolicyPermissionsResponse_Item_Resource::_Internal::id(const PolicyPermissionsResponse_Item_Resource* msg) {
  return *msg->_impl_.id_;
}
PolicyPermissionsResponse_Item_Resource::PolicyPermissionsResponse_Item_Resource(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource)
}
inline PROTOBUF_NDEBUG_INLINE PolicyPermissionsResponse_Item_Resource::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        type_(arena, from.type_) {}

PolicyPermissionsResponse_Item_Resource::PolicyPermissionsResponse_Item_Resource(
    ::google::protobuf::Arena* arena,
    const PolicyPermissionsResponse_Item_Resource& from)
    : ::google::protobuf::Message(arena) {
  PolicyPermissionsResponse_Item_Resource* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.id_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource_Id>(arena, *from._impl_.id_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource)
}
inline PROTOBUF_NDEBUG_INLINE PolicyPermissionsResponse_Item_Resource::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        type_(arena) {}

inline void PolicyPermissionsResponse_Item_Resource::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.id_ = {};
}
PolicyPermissionsResponse_Item_Resource::~PolicyPermissionsResponse_Item_Resource() {
  // @@protoc_insertion_point(destructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PolicyPermissionsResponse_Item_Resource::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.type_.Destroy();
  delete _impl_.id_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PolicyPermissionsResponse_Item_Resource::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.type_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.id_ != nullptr);
    _impl_.id_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PolicyPermissionsResponse_Item_Resource::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 65, 2> PolicyPermissionsResponse_Item_Resource::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item_Resource, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PolicyPermissionsResponse_Item_Resource_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional .palm.rbac.v1.PolicyPermissionsResponse.Item.Resource.Id id = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item_Resource, _impl_.id_)}},
    // string type = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item_Resource, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string type = 1;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item_Resource, _impl_.type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional .palm.rbac.v1.PolicyPermissionsResponse.Item.Resource.Id id = 2;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item_Resource, _impl_.id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource_Id>()},
  }}, {{
    "\64\4\0\0\0\0\0\0"
    "palm.rbac.v1.PolicyPermissionsResponse.Item.Resource"
    "type"
  }},
};

::uint8_t* PolicyPermissionsResponse_Item_Resource::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string type = 1;
  if (!this->_internal_type().empty()) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.rbac.v1.PolicyPermissionsResponse.Item.Resource.type");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional .palm.rbac.v1.PolicyPermissionsResponse.Item.Resource.Id id = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::id(this),
        _Internal::id(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource)
  return target;
}

::size_t PolicyPermissionsResponse_Item_Resource::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string type = 1;
  if (!this->_internal_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  // optional .palm.rbac.v1.PolicyPermissionsResponse.Item.Resource.Id id = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.id_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PolicyPermissionsResponse_Item_Resource::_class_data_ = {
    PolicyPermissionsResponse_Item_Resource::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PolicyPermissionsResponse_Item_Resource::GetClassData() const {
  return &_class_data_;
}

void PolicyPermissionsResponse_Item_Resource::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PolicyPermissionsResponse_Item_Resource*>(&to_msg);
  auto& from = static_cast<const PolicyPermissionsResponse_Item_Resource&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_id()->::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource_Id::MergeFrom(
        from._internal_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyPermissionsResponse_Item_Resource::CopyFrom(const PolicyPermissionsResponse_Item_Resource& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.rbac.v1.PolicyPermissionsResponse.Item.Resource)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PolicyPermissionsResponse_Item_Resource::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PolicyPermissionsResponse_Item_Resource::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PolicyPermissionsResponse_Item_Resource::InternalSwap(PolicyPermissionsResponse_Item_Resource* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  swap(_impl_.id_, other->_impl_.id_);
}

::google::protobuf::Metadata PolicyPermissionsResponse_Item_Resource::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[12]);
}
// ===================================================================

class PolicyPermissionsResponse_Item_Operation_Read::_Internal {
 public:
};

PolicyPermissionsResponse_Item_Operation_Read::PolicyPermissionsResponse_Item_Operation_Read(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Read)
}
PolicyPermissionsResponse_Item_Operation_Read::PolicyPermissionsResponse_Item_Operation_Read(
    ::google::protobuf::Arena* arena,
    const PolicyPermissionsResponse_Item_Operation_Read& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  PolicyPermissionsResponse_Item_Operation_Read* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Read)
}









::google::protobuf::Metadata PolicyPermissionsResponse_Item_Operation_Read::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[13]);
}
// ===================================================================

class PolicyPermissionsResponse_Item_Operation_Write::_Internal {
 public:
};

PolicyPermissionsResponse_Item_Operation_Write::PolicyPermissionsResponse_Item_Operation_Write(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Write)
}
PolicyPermissionsResponse_Item_Operation_Write::PolicyPermissionsResponse_Item_Operation_Write(
    ::google::protobuf::Arena* arena,
    const PolicyPermissionsResponse_Item_Operation_Write& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  PolicyPermissionsResponse_Item_Operation_Write* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Write)
}









::google::protobuf::Metadata PolicyPermissionsResponse_Item_Operation_Write::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[14]);
}
// ===================================================================

class PolicyPermissionsResponse_Item_Operation_Append::_Internal {
 public:
};

PolicyPermissionsResponse_Item_Operation_Append::PolicyPermissionsResponse_Item_Operation_Append(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Append)
}
PolicyPermissionsResponse_Item_Operation_Append::PolicyPermissionsResponse_Item_Operation_Append(
    ::google::protobuf::Arena* arena,
    const PolicyPermissionsResponse_Item_Operation_Append& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  PolicyPermissionsResponse_Item_Operation_Append* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Append)
}









::google::protobuf::Metadata PolicyPermissionsResponse_Item_Operation_Append::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[15]);
}
// ===================================================================

class PolicyPermissionsResponse_Item_Operation_Execute::_Internal {
 public:
};

PolicyPermissionsResponse_Item_Operation_Execute::PolicyPermissionsResponse_Item_Operation_Execute(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Execute)
}
PolicyPermissionsResponse_Item_Operation_Execute::PolicyPermissionsResponse_Item_Operation_Execute(
    ::google::protobuf::Arena* arena,
    const PolicyPermissionsResponse_Item_Operation_Execute& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  PolicyPermissionsResponse_Item_Operation_Execute* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Execute)
}









::google::protobuf::Metadata PolicyPermissionsResponse_Item_Operation_Execute::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[16]);
}
// ===================================================================

class PolicyPermissionsResponse_Item_Operation_Credit::_Internal {
 public:
};

PolicyPermissionsResponse_Item_Operation_Credit::PolicyPermissionsResponse_Item_Operation_Credit(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Credit)
}
PolicyPermissionsResponse_Item_Operation_Credit::PolicyPermissionsResponse_Item_Operation_Credit(
    ::google::protobuf::Arena* arena,
    const PolicyPermissionsResponse_Item_Operation_Credit& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  PolicyPermissionsResponse_Item_Operation_Credit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Credit)
}









::google::protobuf::Metadata PolicyPermissionsResponse_Item_Operation_Credit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[17]);
}
// ===================================================================

class PolicyPermissionsResponse_Item_Operation_Debit::_Internal {
 public:
};

PolicyPermissionsResponse_Item_Operation_Debit::PolicyPermissionsResponse_Item_Operation_Debit(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Debit)
}
PolicyPermissionsResponse_Item_Operation_Debit::PolicyPermissionsResponse_Item_Operation_Debit(
    ::google::protobuf::Arena* arena,
    const PolicyPermissionsResponse_Item_Operation_Debit& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  PolicyPermissionsResponse_Item_Operation_Debit* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Debit)
}









::google::protobuf::Metadata PolicyPermissionsResponse_Item_Operation_Debit::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[18]);
}
// ===================================================================

class PolicyPermissionsResponse_Item_Operation_Inquiry::_Internal {
 public:
};

PolicyPermissionsResponse_Item_Operation_Inquiry::PolicyPermissionsResponse_Item_Operation_Inquiry(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Inquiry)
}
PolicyPermissionsResponse_Item_Operation_Inquiry::PolicyPermissionsResponse_Item_Operation_Inquiry(
    ::google::protobuf::Arena* arena,
    const PolicyPermissionsResponse_Item_Operation_Inquiry& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  PolicyPermissionsResponse_Item_Operation_Inquiry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Inquiry)
}









::google::protobuf::Metadata PolicyPermissionsResponse_Item_Operation_Inquiry::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[19]);
}
// ===================================================================

class PolicyPermissionsResponse_Item_Operation::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation, _impl_._oneof_case_);
  static const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Read& read(const PolicyPermissionsResponse_Item_Operation* msg);
  static const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Write& write(const PolicyPermissionsResponse_Item_Operation* msg);
  static const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Append& append(const PolicyPermissionsResponse_Item_Operation* msg);
  static const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Execute& execute(const PolicyPermissionsResponse_Item_Operation* msg);
  static const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Credit& credit(const PolicyPermissionsResponse_Item_Operation* msg);
  static const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Debit& debit(const PolicyPermissionsResponse_Item_Operation* msg);
  static const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Inquiry& inquiry(const PolicyPermissionsResponse_Item_Operation* msg);
};

const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Read& PolicyPermissionsResponse_Item_Operation::_Internal::read(const PolicyPermissionsResponse_Item_Operation* msg) {
  return *msg->_impl_.by_.read_;
}
const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Write& PolicyPermissionsResponse_Item_Operation::_Internal::write(const PolicyPermissionsResponse_Item_Operation* msg) {
  return *msg->_impl_.by_.write_;
}
const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Append& PolicyPermissionsResponse_Item_Operation::_Internal::append(const PolicyPermissionsResponse_Item_Operation* msg) {
  return *msg->_impl_.by_.append_;
}
const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Execute& PolicyPermissionsResponse_Item_Operation::_Internal::execute(const PolicyPermissionsResponse_Item_Operation* msg) {
  return *msg->_impl_.by_.execute_;
}
const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Credit& PolicyPermissionsResponse_Item_Operation::_Internal::credit(const PolicyPermissionsResponse_Item_Operation* msg) {
  return *msg->_impl_.by_.credit_;
}
const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Debit& PolicyPermissionsResponse_Item_Operation::_Internal::debit(const PolicyPermissionsResponse_Item_Operation* msg) {
  return *msg->_impl_.by_.debit_;
}
const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Inquiry& PolicyPermissionsResponse_Item_Operation::_Internal::inquiry(const PolicyPermissionsResponse_Item_Operation* msg) {
  return *msg->_impl_.by_.inquiry_;
}
void PolicyPermissionsResponse_Item_Operation::set_allocated_read(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Read* read) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_by();
  if (read) {
    ::google::protobuf::Arena* submessage_arena = read->GetArena();
    if (message_arena != submessage_arena) {
      read = ::google::protobuf::internal::GetOwnedMessage(message_arena, read, submessage_arena);
    }
    set_has_read();
    _impl_.by_.read_ = read;
  }
  // @@protoc_insertion_point(field_set_allocated:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.read)
}
void PolicyPermissionsResponse_Item_Operation::set_allocated_write(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Write* write) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_by();
  if (write) {
    ::google::protobuf::Arena* submessage_arena = write->GetArena();
    if (message_arena != submessage_arena) {
      write = ::google::protobuf::internal::GetOwnedMessage(message_arena, write, submessage_arena);
    }
    set_has_write();
    _impl_.by_.write_ = write;
  }
  // @@protoc_insertion_point(field_set_allocated:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.write)
}
void PolicyPermissionsResponse_Item_Operation::set_allocated_append(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Append* append) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_by();
  if (append) {
    ::google::protobuf::Arena* submessage_arena = append->GetArena();
    if (message_arena != submessage_arena) {
      append = ::google::protobuf::internal::GetOwnedMessage(message_arena, append, submessage_arena);
    }
    set_has_append();
    _impl_.by_.append_ = append;
  }
  // @@protoc_insertion_point(field_set_allocated:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.append)
}
void PolicyPermissionsResponse_Item_Operation::set_allocated_execute(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Execute* execute) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_by();
  if (execute) {
    ::google::protobuf::Arena* submessage_arena = execute->GetArena();
    if (message_arena != submessage_arena) {
      execute = ::google::protobuf::internal::GetOwnedMessage(message_arena, execute, submessage_arena);
    }
    set_has_execute();
    _impl_.by_.execute_ = execute;
  }
  // @@protoc_insertion_point(field_set_allocated:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.execute)
}
void PolicyPermissionsResponse_Item_Operation::set_allocated_credit(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Credit* credit) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_by();
  if (credit) {
    ::google::protobuf::Arena* submessage_arena = credit->GetArena();
    if (message_arena != submessage_arena) {
      credit = ::google::protobuf::internal::GetOwnedMessage(message_arena, credit, submessage_arena);
    }
    set_has_credit();
    _impl_.by_.credit_ = credit;
  }
  // @@protoc_insertion_point(field_set_allocated:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.credit)
}
void PolicyPermissionsResponse_Item_Operation::set_allocated_debit(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Debit* debit) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_by();
  if (debit) {
    ::google::protobuf::Arena* submessage_arena = debit->GetArena();
    if (message_arena != submessage_arena) {
      debit = ::google::protobuf::internal::GetOwnedMessage(message_arena, debit, submessage_arena);
    }
    set_has_debit();
    _impl_.by_.debit_ = debit;
  }
  // @@protoc_insertion_point(field_set_allocated:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.debit)
}
void PolicyPermissionsResponse_Item_Operation::set_allocated_inquiry(::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Inquiry* inquiry) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_by();
  if (inquiry) {
    ::google::protobuf::Arena* submessage_arena = inquiry->GetArena();
    if (message_arena != submessage_arena) {
      inquiry = ::google::protobuf::internal::GetOwnedMessage(message_arena, inquiry, submessage_arena);
    }
    set_has_inquiry();
    _impl_.by_.inquiry_ = inquiry;
  }
  // @@protoc_insertion_point(field_set_allocated:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.inquiry)
}
PolicyPermissionsResponse_Item_Operation::PolicyPermissionsResponse_Item_Operation(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation)
}
inline PROTOBUF_NDEBUG_INLINE PolicyPermissionsResponse_Item_Operation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : by_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

PolicyPermissionsResponse_Item_Operation::PolicyPermissionsResponse_Item_Operation(
    ::google::protobuf::Arena* arena,
    const PolicyPermissionsResponse_Item_Operation& from)
    : ::google::protobuf::Message(arena) {
  PolicyPermissionsResponse_Item_Operation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (by_case()) {
    case BY_NOT_SET:
      break;
      case kRead:
        _impl_.by_.read_ = CreateMaybeMessage<::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Read>(arena, *from._impl_.by_.read_);
        break;
      case kWrite:
        _impl_.by_.write_ = CreateMaybeMessage<::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Write>(arena, *from._impl_.by_.write_);
        break;
      case kAppend:
        _impl_.by_.append_ = CreateMaybeMessage<::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Append>(arena, *from._impl_.by_.append_);
        break;
      case kExecute:
        _impl_.by_.execute_ = CreateMaybeMessage<::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Execute>(arena, *from._impl_.by_.execute_);
        break;
      case kCredit:
        _impl_.by_.credit_ = CreateMaybeMessage<::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Credit>(arena, *from._impl_.by_.credit_);
        break;
      case kDebit:
        _impl_.by_.debit_ = CreateMaybeMessage<::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Debit>(arena, *from._impl_.by_.debit_);
        break;
      case kInquiry:
        _impl_.by_.inquiry_ = CreateMaybeMessage<::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Inquiry>(arena, *from._impl_.by_.inquiry_);
        break;
      case kCode:
        new (&_impl_.by_.code_) decltype(_impl_.by_.code_){arena, from._impl_.by_.code_};
        break;
  }

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation)
}
inline PROTOBUF_NDEBUG_INLINE PolicyPermissionsResponse_Item_Operation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : by_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void PolicyPermissionsResponse_Item_Operation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PolicyPermissionsResponse_Item_Operation::~PolicyPermissionsResponse_Item_Operation() {
  // @@protoc_insertion_point(destructor:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PolicyPermissionsResponse_Item_Operation::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  if (has_by()) {
    clear_by();
  }
  _impl_.~Impl_();
}

void PolicyPermissionsResponse_Item_Operation::clear_by() {
// @@protoc_insertion_point(one_of_clear_start:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (by_case()) {
    case kRead: {
      if (GetArena() == nullptr) {
        delete _impl_.by_.read_;
      }
      break;
    }
    case kWrite: {
      if (GetArena() == nullptr) {
        delete _impl_.by_.write_;
      }
      break;
    }
    case kAppend: {
      if (GetArena() == nullptr) {
        delete _impl_.by_.append_;
      }
      break;
    }
    case kExecute: {
      if (GetArena() == nullptr) {
        delete _impl_.by_.execute_;
      }
      break;
    }
    case kCredit: {
      if (GetArena() == nullptr) {
        delete _impl_.by_.credit_;
      }
      break;
    }
    case kDebit: {
      if (GetArena() == nullptr) {
        delete _impl_.by_.debit_;
      }
      break;
    }
    case kInquiry: {
      if (GetArena() == nullptr) {
        delete _impl_.by_.inquiry_;
      }
      break;
    }
    case kCode: {
      _impl_.by_.code_.Destroy();
      break;
    }
    case BY_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = BY_NOT_SET;
}


PROTOBUF_NOINLINE void PolicyPermissionsResponse_Item_Operation::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_by();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PolicyPermissionsResponse_Item_Operation::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 8, 7, 74, 7> PolicyPermissionsResponse_Item_Operation::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    99, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    7,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PolicyPermissionsResponse_Item_Operation_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    99, 0, 1,
    65534, 7,
    65535, 65535
  }}, {{
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Read read = 1;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item_Operation, _impl_.by_.read_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Write write = 2;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item_Operation, _impl_.by_.write_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Append append = 3;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item_Operation, _impl_.by_.append_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Execute execute = 4;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item_Operation, _impl_.by_.execute_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Credit credit = 5;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item_Operation, _impl_.by_.credit_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Debit debit = 6;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item_Operation, _impl_.by_.debit_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Inquiry inquiry = 7;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item_Operation, _impl_.by_.inquiry_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvDefault)},
    // string code = 99;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item_Operation, _impl_.by_.code_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::FieldAuxDefaultMessage{}, &::palm::rbac::v1::_PolicyPermissionsResponse_Item_Operation_Read_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::palm::rbac::v1::_PolicyPermissionsResponse_Item_Operation_Write_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::palm::rbac::v1::_PolicyPermissionsResponse_Item_Operation_Append_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::palm::rbac::v1::_PolicyPermissionsResponse_Item_Operation_Execute_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::palm::rbac::v1::_PolicyPermissionsResponse_Item_Operation_Credit_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::palm::rbac::v1::_PolicyPermissionsResponse_Item_Operation_Debit_default_instance_},
    {::_pbi::FieldAuxDefaultMessage{}, &::palm::rbac::v1::_PolicyPermissionsResponse_Item_Operation_Inquiry_default_instance_},
  }}, {{
    "\65\0\0\0\0\0\0\0\4\0\0\0\0\0\0\0"
    "palm.rbac.v1.PolicyPermissionsResponse.Item.Operation"
    "code"
  }},
};

::uint8_t* PolicyPermissionsResponse_Item_Operation::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (by_case()) {
    case kRead: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, _Internal::read(this),
          _Internal::read(this).GetCachedSize(), target, stream);
      break;
    }
    case kWrite: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, _Internal::write(this),
          _Internal::write(this).GetCachedSize(), target, stream);
      break;
    }
    case kAppend: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, _Internal::append(this),
          _Internal::append(this).GetCachedSize(), target, stream);
      break;
    }
    case kExecute: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, _Internal::execute(this),
          _Internal::execute(this).GetCachedSize(), target, stream);
      break;
    }
    case kCredit: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          5, _Internal::credit(this),
          _Internal::credit(this).GetCachedSize(), target, stream);
      break;
    }
    case kDebit: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          6, _Internal::debit(this),
          _Internal::debit(this).GetCachedSize(), target, stream);
      break;
    }
    case kInquiry: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          7, _Internal::inquiry(this),
          _Internal::inquiry(this).GetCachedSize(), target, stream);
      break;
    }
    case kCode: {
      const std::string& _s = this->_internal_code();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.code");
      target = stream->WriteStringMaybeAliased(99, _s, target);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation)
  return target;
}

::size_t PolicyPermissionsResponse_Item_Operation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (by_case()) {
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Read read = 1;
    case kRead: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.by_.read_);
      break;
    }
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Write write = 2;
    case kWrite: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.by_.write_);
      break;
    }
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Append append = 3;
    case kAppend: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.by_.append_);
      break;
    }
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Execute execute = 4;
    case kExecute: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.by_.execute_);
      break;
    }
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Credit credit = 5;
    case kCredit: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.by_.credit_);
      break;
    }
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Debit debit = 6;
    case kDebit: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.by_.debit_);
      break;
    }
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation.Inquiry inquiry = 7;
    case kInquiry: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.by_.inquiry_);
      break;
    }
    // string code = 99;
    case kCode: {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_code());
      break;
    }
    case BY_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PolicyPermissionsResponse_Item_Operation::_class_data_ = {
    PolicyPermissionsResponse_Item_Operation::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PolicyPermissionsResponse_Item_Operation::GetClassData() const {
  return &_class_data_;
}

void PolicyPermissionsResponse_Item_Operation::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PolicyPermissionsResponse_Item_Operation*>(&to_msg);
  auto& from = static_cast<const PolicyPermissionsResponse_Item_Operation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.by_case()) {
    case kRead: {
      _this->_internal_mutable_read()->::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Read::MergeFrom(
          from._internal_read());
      break;
    }
    case kWrite: {
      _this->_internal_mutable_write()->::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Write::MergeFrom(
          from._internal_write());
      break;
    }
    case kAppend: {
      _this->_internal_mutable_append()->::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Append::MergeFrom(
          from._internal_append());
      break;
    }
    case kExecute: {
      _this->_internal_mutable_execute()->::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Execute::MergeFrom(
          from._internal_execute());
      break;
    }
    case kCredit: {
      _this->_internal_mutable_credit()->::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Credit::MergeFrom(
          from._internal_credit());
      break;
    }
    case kDebit: {
      _this->_internal_mutable_debit()->::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Debit::MergeFrom(
          from._internal_debit());
      break;
    }
    case kInquiry: {
      _this->_internal_mutable_inquiry()->::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation_Inquiry::MergeFrom(
          from._internal_inquiry());
      break;
    }
    case kCode: {
      _this->_internal_set_code(from._internal_code());
      break;
    }
    case BY_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyPermissionsResponse_Item_Operation::CopyFrom(const PolicyPermissionsResponse_Item_Operation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.rbac.v1.PolicyPermissionsResponse.Item.Operation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PolicyPermissionsResponse_Item_Operation::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PolicyPermissionsResponse_Item_Operation::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PolicyPermissionsResponse_Item_Operation::InternalSwap(PolicyPermissionsResponse_Item_Operation* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.by_, other->_impl_.by_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata PolicyPermissionsResponse_Item_Operation::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[20]);
}
// ===================================================================

class PolicyPermissionsResponse_Item::_Internal {
 public:
  using HasBits = decltype(std::declval<PolicyPermissionsResponse_Item>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item, _impl_._has_bits_);
  static const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource& resource(const PolicyPermissionsResponse_Item* msg);
  static void set_has_resource(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation& operation(const PolicyPermissionsResponse_Item* msg);
  static void set_has_operation(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource& PolicyPermissionsResponse_Item::_Internal::resource(const PolicyPermissionsResponse_Item* msg) {
  return *msg->_impl_.resource_;
}
const ::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation& PolicyPermissionsResponse_Item::_Internal::operation(const PolicyPermissionsResponse_Item* msg) {
  return *msg->_impl_.operation_;
}
PolicyPermissionsResponse_Item::PolicyPermissionsResponse_Item(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item)
}
inline PROTOBUF_NDEBUG_INLINE PolicyPermissionsResponse_Item::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PolicyPermissionsResponse_Item::PolicyPermissionsResponse_Item(
    ::google::protobuf::Arena* arena,
    const PolicyPermissionsResponse_Item& from)
    : ::google::protobuf::Message(arena) {
  PolicyPermissionsResponse_Item* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.resource_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource>(arena, *from._impl_.resource_)
                : nullptr;
  _impl_.operation_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation>(arena, *from._impl_.operation_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyPermissionsResponse.Item)
}
inline PROTOBUF_NDEBUG_INLINE PolicyPermissionsResponse_Item::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PolicyPermissionsResponse_Item::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, resource_),
           0,
           offsetof(Impl_, operation_) -
               offsetof(Impl_, resource_) +
               sizeof(Impl_::operation_));
}
PolicyPermissionsResponse_Item::~PolicyPermissionsResponse_Item() {
  // @@protoc_insertion_point(destructor:palm.rbac.v1.PolicyPermissionsResponse.Item)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PolicyPermissionsResponse_Item::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.resource_;
  delete _impl_.operation_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PolicyPermissionsResponse_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.rbac.v1.PolicyPermissionsResponse.Item)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ABSL_DCHECK(_impl_.resource_ != nullptr);
      _impl_.resource_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.operation_ != nullptr);
      _impl_.operation_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PolicyPermissionsResponse_Item::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> PolicyPermissionsResponse_Item::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PolicyPermissionsResponse_Item_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation operation = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 1, 1, PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item, _impl_.operation_)}},
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Resource resource = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item, _impl_.resource_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Resource resource = 1;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item, _impl_.resource_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation operation = 2;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item, _impl_.operation_), _Internal::kHasBitsOffset + 1, 1,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource>()},
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation>()},
  }}, {{
  }},
};

::uint8_t* PolicyPermissionsResponse_Item::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.rbac.v1.PolicyPermissionsResponse.Item)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.rbac.v1.PolicyPermissionsResponse.Item.Resource resource = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::resource(this),
        _Internal::resource(this).GetCachedSize(), target, stream);
  }

  // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation operation = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::operation(this),
        _Internal::operation(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.rbac.v1.PolicyPermissionsResponse.Item)
  return target;
}

::size_t PolicyPermissionsResponse_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.rbac.v1.PolicyPermissionsResponse.Item)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Resource resource = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.resource_);
    }

    // .palm.rbac.v1.PolicyPermissionsResponse.Item.Operation operation = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.operation_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PolicyPermissionsResponse_Item::_class_data_ = {
    PolicyPermissionsResponse_Item::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PolicyPermissionsResponse_Item::GetClassData() const {
  return &_class_data_;
}

void PolicyPermissionsResponse_Item::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PolicyPermissionsResponse_Item*>(&to_msg);
  auto& from = static_cast<const PolicyPermissionsResponse_Item&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.rbac.v1.PolicyPermissionsResponse.Item)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_mutable_resource()->::palm::rbac::v1::PolicyPermissionsResponse_Item_Resource::MergeFrom(
          from._internal_resource());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_operation()->::palm::rbac::v1::PolicyPermissionsResponse_Item_Operation::MergeFrom(
          from._internal_operation());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyPermissionsResponse_Item::CopyFrom(const PolicyPermissionsResponse_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.rbac.v1.PolicyPermissionsResponse.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PolicyPermissionsResponse_Item::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PolicyPermissionsResponse_Item::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PolicyPermissionsResponse_Item::InternalSwap(PolicyPermissionsResponse_Item* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item, _impl_.operation_)
      + sizeof(PolicyPermissionsResponse_Item::_impl_.operation_)
      - PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse_Item, _impl_.resource_)>(
          reinterpret_cast<char*>(&_impl_.resource_),
          reinterpret_cast<char*>(&other->_impl_.resource_));
}

::google::protobuf::Metadata PolicyPermissionsResponse_Item::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[21]);
}
// ===================================================================

class PolicyPermissionsResponse::_Internal {
 public:
};

PolicyPermissionsResponse::PolicyPermissionsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.rbac.v1.PolicyPermissionsResponse)
}
inline PROTOBUF_NDEBUG_INLINE PolicyPermissionsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : items_{visibility, arena, from.items_},
        _cached_size_{0} {}

PolicyPermissionsResponse::PolicyPermissionsResponse(
    ::google::protobuf::Arena* arena,
    const PolicyPermissionsResponse& from)
    : ::google::protobuf::Message(arena) {
  PolicyPermissionsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.rbac.v1.PolicyPermissionsResponse)
}
inline PROTOBUF_NDEBUG_INLINE PolicyPermissionsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : items_{visibility, arena},
        _cached_size_{0} {}

inline void PolicyPermissionsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PolicyPermissionsResponse::~PolicyPermissionsResponse() {
  // @@protoc_insertion_point(destructor:palm.rbac.v1.PolicyPermissionsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PolicyPermissionsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PolicyPermissionsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.rbac.v1.PolicyPermissionsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.items_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PolicyPermissionsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> PolicyPermissionsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PolicyPermissionsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .palm.rbac.v1.PolicyPermissionsResponse.Item items = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse, _impl_.items_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .palm.rbac.v1.PolicyPermissionsResponse.Item items = 1;
    {PROTOBUF_FIELD_OFFSET(PolicyPermissionsResponse, _impl_.items_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::rbac::v1::PolicyPermissionsResponse_Item>()},
  }}, {{
  }},
};

::uint8_t* PolicyPermissionsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.rbac.v1.PolicyPermissionsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .palm.rbac.v1.PolicyPermissionsResponse.Item items = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_items_size()); i < n; i++) {
    const auto& repfield = this->_internal_items().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.rbac.v1.PolicyPermissionsResponse)
  return target;
}

::size_t PolicyPermissionsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.rbac.v1.PolicyPermissionsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.rbac.v1.PolicyPermissionsResponse.Item items = 1;
  total_size += 1UL * this->_internal_items_size();
  for (const auto& msg : this->_internal_items()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PolicyPermissionsResponse::_class_data_ = {
    PolicyPermissionsResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PolicyPermissionsResponse::GetClassData() const {
  return &_class_data_;
}

void PolicyPermissionsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PolicyPermissionsResponse*>(&to_msg);
  auto& from = static_cast<const PolicyPermissionsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.rbac.v1.PolicyPermissionsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_items()->MergeFrom(
      from._internal_items());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PolicyPermissionsResponse::CopyFrom(const PolicyPermissionsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.rbac.v1.PolicyPermissionsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PolicyPermissionsResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PolicyPermissionsResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PolicyPermissionsResponse::InternalSwap(PolicyPermissionsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.items_.InternalSwap(&other->_impl_.items_);
}

::google::protobuf::Metadata PolicyPermissionsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_rbac_2eproto_getter, &descriptor_table_rbac_2eproto_once,
      file_level_metadata_rbac_2eproto[22]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace rbac
}  // namespace palm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
