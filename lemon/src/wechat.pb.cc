// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: wechat.proto

#include "wechat.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace palm {
namespace wechat {
namespace v1 {

inline constexpr PayTransferGetReceiptResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayTransferGetReceiptResponse::PayTransferGetReceiptResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayTransferGetReceiptResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayTransferGetReceiptResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayTransferGetReceiptResponseDefaultTypeInternal() {}
  union {
    PayTransferGetReceiptResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayTransferGetReceiptResponseDefaultTypeInternal _PayTransferGetReceiptResponse_default_instance_;

inline constexpr PayTransferGetElectronicReceiptRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        out_batch_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        out_detail_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accept_type_{static_cast< ::palm::wechat::v1::PayTransferGetElectronicReceiptRequest_AcceptType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR PayTransferGetElectronicReceiptRequest::PayTransferGetElectronicReceiptRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayTransferGetElectronicReceiptRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayTransferGetElectronicReceiptRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayTransferGetElectronicReceiptRequestDefaultTypeInternal() {}
  union {
    PayTransferGetElectronicReceiptRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayTransferGetElectronicReceiptRequestDefaultTypeInternal _PayTransferGetElectronicReceiptRequest_default_instance_;

inline constexpr PayTransferGetBillReceiptRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : out_batch_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayTransferGetBillReceiptRequest::PayTransferGetBillReceiptRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayTransferGetBillReceiptRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayTransferGetBillReceiptRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayTransferGetBillReceiptRequestDefaultTypeInternal() {}
  union {
    PayTransferGetBillReceiptRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayTransferGetBillReceiptRequestDefaultTypeInternal _PayTransferGetBillReceiptRequest_default_instance_;

inline constexpr PayTradeResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : trade_state_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        trade_state_desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayTradeResponse::PayTradeResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayTradeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayTradeResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayTradeResponseDefaultTypeInternal() {}
  union {
    PayTradeResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayTradeResponseDefaultTypeInternal _PayTradeResponse_default_instance_;

inline constexpr PayRefundResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : out_refund_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        channel_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_received_account_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        create_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayRefundResponse::PayRefundResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayRefundResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayRefundResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayRefundResponseDefaultTypeInternal() {}
  union {
    PayRefundResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayRefundResponseDefaultTypeInternal _PayRefundResponse_default_instance_;

inline constexpr PayQueryTransferDetailResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        app_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mch_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        open_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        batch_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        out_batch_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        out_detail_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        detail_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        detail_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transfer_remark_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        fail_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        initiate_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        update_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transfer_amount_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR PayQueryTransferDetailResponse::PayQueryTransferDetailResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayQueryTransferDetailResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayQueryTransferDetailResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayQueryTransferDetailResponseDefaultTypeInternal() {}
  union {
    PayQueryTransferDetailResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayQueryTransferDetailResponseDefaultTypeInternal _PayQueryTransferDetailResponse_default_instance_;

inline constexpr PayQueryTransferDetailRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : out_batch_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        out_detail_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayQueryTransferDetailRequest::PayQueryTransferDetailRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayQueryTransferDetailRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayQueryTransferDetailRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayQueryTransferDetailRequestDefaultTypeInternal() {}
  union {
    PayQueryTransferDetailRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayQueryTransferDetailRequestDefaultTypeInternal _PayQueryTransferDetailRequest_default_instance_;

inline constexpr PayQueryRefundRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : out_refund_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayQueryRefundRequest::PayQueryRefundRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayQueryRefundRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayQueryRefundRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayQueryRefundRequestDefaultTypeInternal() {}
  union {
    PayQueryRefundRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayQueryRefundRequestDefaultTypeInternal _PayQueryRefundRequest_default_instance_;

inline constexpr PayQueryOrderByOutTradeNoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : out_trade_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayQueryOrderByOutTradeNoRequest::PayQueryOrderByOutTradeNoRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayQueryOrderByOutTradeNoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayQueryOrderByOutTradeNoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayQueryOrderByOutTradeNoRequestDefaultTypeInternal() {}
  union {
    PayQueryOrderByOutTradeNoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayQueryOrderByOutTradeNoRequestDefaultTypeInternal _PayQueryOrderByOutTradeNoRequest_default_instance_;

inline constexpr PayQueryOrderByIdRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : transaction_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayQueryOrderByIdRequest::PayQueryOrderByIdRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayQueryOrderByIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayQueryOrderByIdRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayQueryOrderByIdRequestDefaultTypeInternal() {}
  union {
    PayQueryOrderByIdRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayQueryOrderByIdRequestDefaultTypeInternal _PayQueryOrderByIdRequest_default_instance_;

inline constexpr PayQueryBatchTransferResponse_Detail::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : detail_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        out_detail_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayQueryBatchTransferResponse_Detail::PayQueryBatchTransferResponse_Detail(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayQueryBatchTransferResponse_DetailDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayQueryBatchTransferResponse_DetailDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayQueryBatchTransferResponse_DetailDefaultTypeInternal() {}
  union {
    PayQueryBatchTransferResponse_Detail _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayQueryBatchTransferResponse_DetailDefaultTypeInternal _PayQueryBatchTransferResponse_Detail_default_instance_;

inline constexpr PayQueryBatchTransferResponse_Batch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        app_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mch_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        transfer_scene_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        batch_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        out_batch_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        batch_status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        batch_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        batch_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        batch_remark_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        close_reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        create_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        update_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        total_amount_{::int64_t{0}},
        total_num_{0},
        success_num_{0},
        success_amount_{::int64_t{0}},
        fail_amount_{::int64_t{0}},
        fail_num_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayQueryBatchTransferResponse_Batch::PayQueryBatchTransferResponse_Batch(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayQueryBatchTransferResponse_BatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayQueryBatchTransferResponse_BatchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayQueryBatchTransferResponse_BatchDefaultTypeInternal() {}
  union {
    PayQueryBatchTransferResponse_Batch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayQueryBatchTransferResponse_BatchDefaultTypeInternal _PayQueryBatchTransferResponse_Batch_default_instance_;

inline constexpr PayQueryBatchTransferRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : out_batch_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        offset_{0},
        limit_{0},
        detail_status_{static_cast< ::palm::wechat::v1::PayQueryBatchTransferRequest_DetailStatus >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayQueryBatchTransferRequest::PayQueryBatchTransferRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayQueryBatchTransferRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayQueryBatchTransferRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayQueryBatchTransferRequestDefaultTypeInternal() {}
  union {
    PayQueryBatchTransferRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayQueryBatchTransferRequestDefaultTypeInternal _PayQueryBatchTransferRequest_default_instance_;

inline constexpr PayPrepayRequest_Amount::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : total_{0},
        currency_{static_cast< ::palm::wechat::v1::PayCurrency >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayPrepayRequest_Amount::PayPrepayRequest_Amount(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayPrepayRequest_AmountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayPrepayRequest_AmountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayPrepayRequest_AmountDefaultTypeInternal() {}
  union {
    PayPrepayRequest_Amount _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayPrepayRequest_AmountDefaultTypeInternal _PayPrepayRequest_Amount_default_instance_;

inline constexpr PayNativeQrCodeUrlResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        out_trade_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayNativeQrCodeUrlResponse::PayNativeQrCodeUrlResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayNativeQrCodeUrlResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayNativeQrCodeUrlResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayNativeQrCodeUrlResponseDefaultTypeInternal() {}
  union {
    PayNativeQrCodeUrlResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayNativeQrCodeUrlResponseDefaultTypeInternal _PayNativeQrCodeUrlResponse_default_instance_;

inline constexpr PayJsapiPrepayIdResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : app_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_stamp_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nonce_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        package_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sign_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        pay_sign_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        out_trade_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayJsapiPrepayIdResponse::PayJsapiPrepayIdResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayJsapiPrepayIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayJsapiPrepayIdResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayJsapiPrepayIdResponseDefaultTypeInternal() {}
  union {
    PayJsapiPrepayIdResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayJsapiPrepayIdResponseDefaultTypeInternal _PayJsapiPrepayIdResponse_default_instance_;

inline constexpr PayExecuteBatchTransferResponse_Succeeded::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : batch_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        create_time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayExecuteBatchTransferResponse_Succeeded::PayExecuteBatchTransferResponse_Succeeded(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayExecuteBatchTransferResponse_SucceededDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayExecuteBatchTransferResponse_SucceededDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayExecuteBatchTransferResponse_SucceededDefaultTypeInternal() {}
  union {
    PayExecuteBatchTransferResponse_Succeeded _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayExecuteBatchTransferResponse_SucceededDefaultTypeInternal _PayExecuteBatchTransferResponse_Succeeded_default_instance_;

inline constexpr PayExecuteBatchTransferResponse_Detail::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : open_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        out_detail_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayExecuteBatchTransferResponse_Detail::PayExecuteBatchTransferResponse_Detail(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayExecuteBatchTransferResponse_DetailDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayExecuteBatchTransferResponse_DetailDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayExecuteBatchTransferResponse_DetailDefaultTypeInternal() {}
  union {
    PayExecuteBatchTransferResponse_Detail _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayExecuteBatchTransferResponse_DetailDefaultTypeInternal _PayExecuteBatchTransferResponse_Detail_default_instance_;

inline constexpr PayExecuteBatchTransferRequest_Detail::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : open_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        remark_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        amount_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayExecuteBatchTransferRequest_Detail::PayExecuteBatchTransferRequest_Detail(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayExecuteBatchTransferRequest_DetailDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayExecuteBatchTransferRequest_DetailDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayExecuteBatchTransferRequest_DetailDefaultTypeInternal() {}
  union {
    PayExecuteBatchTransferRequest_Detail _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayExecuteBatchTransferRequest_DetailDefaultTypeInternal _PayExecuteBatchTransferRequest_Detail_default_instance_;

inline constexpr PayExecuteBatchTransferRequest_Batch::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        remark_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        out_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR PayExecuteBatchTransferRequest_Batch::PayExecuteBatchTransferRequest_Batch(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayExecuteBatchTransferRequest_BatchDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayExecuteBatchTransferRequest_BatchDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayExecuteBatchTransferRequest_BatchDefaultTypeInternal() {}
  union {
    PayExecuteBatchTransferRequest_Batch _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayExecuteBatchTransferRequest_BatchDefaultTypeInternal _PayExecuteBatchTransferRequest_Batch_default_instance_;

inline constexpr PayError::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayError::PayError(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayErrorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayErrorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayErrorDefaultTypeInternal() {}
  union {
    PayError _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayErrorDefaultTypeInternal _PayError_default_instance_;

inline constexpr PayCreateRefundRequest_Amount::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : total_{0},
        refund_{0},
        currency_{static_cast< ::palm::wechat::v1::PayCurrency >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayCreateRefundRequest_Amount::PayCreateRefundRequest_Amount(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayCreateRefundRequest_AmountDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayCreateRefundRequest_AmountDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayCreateRefundRequest_AmountDefaultTypeInternal() {}
  union {
    PayCreateRefundRequest_Amount _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayCreateRefundRequest_AmountDefaultTypeInternal _PayCreateRefundRequest_Amount_default_instance_;

inline constexpr PayCloseOrderRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : out_trade_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayCloseOrderRequest::PayCloseOrderRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayCloseOrderRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayCloseOrderRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayCloseOrderRequestDefaultTypeInternal() {}
  union {
    PayCloseOrderRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayCloseOrderRequestDefaultTypeInternal _PayCloseOrderRequest_default_instance_;

inline constexpr PayBillResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : content_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayBillResponse::PayBillResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayBillResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayBillResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayBillResponseDefaultTypeInternal() {}
  union {
    PayBillResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayBillResponseDefaultTypeInternal _PayBillResponse_default_instance_;

inline constexpr PayBillDate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : year_{0},
        month_{0},
        day_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PayBillDate::PayBillDate(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayBillDateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayBillDateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayBillDateDefaultTypeInternal() {}
  union {
    PayBillDate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayBillDateDefaultTypeInternal _PayBillDate_default_instance_;

inline constexpr Oauth2SignInResponse_UserInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        privilege_{},
        open_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nickname_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        province_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        city_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        country_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        head_img_url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        union_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sex_{0u} {}

template <typename>
PROTOBUF_CONSTEXPR Oauth2SignInResponse_UserInfo::Oauth2SignInResponse_UserInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Oauth2SignInResponse_UserInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Oauth2SignInResponse_UserInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Oauth2SignInResponse_UserInfoDefaultTypeInternal() {}
  union {
    Oauth2SignInResponse_UserInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Oauth2SignInResponse_UserInfoDefaultTypeInternal _Oauth2SignInResponse_UserInfo_default_instance_;

inline constexpr Oauth2SignInRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        state_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        lang_{static_cast< ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Lang >(0)},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Oauth2SignInRequest::Oauth2SignInRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Oauth2SignInRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Oauth2SignInRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Oauth2SignInRequestDefaultTypeInternal() {}
  union {
    Oauth2SignInRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Oauth2SignInRequestDefaultTypeInternal _Oauth2SignInRequest_default_instance_;

inline constexpr Oauth2QrConnectUrlResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : url_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Oauth2QrConnectUrlResponse::Oauth2QrConnectUrlResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Oauth2QrConnectUrlResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Oauth2QrConnectUrlResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Oauth2QrConnectUrlResponseDefaultTypeInternal() {}
  union {
    Oauth2QrConnectUrlResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Oauth2QrConnectUrlResponseDefaultTypeInternal _Oauth2QrConnectUrlResponse_default_instance_;

inline constexpr Oauth2QrConnectUrlRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        subject_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        lang_{static_cast< ::palm::balsam::v1::WechatOauth2UserIndexResponse_Item_Lang >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR Oauth2QrConnectUrlRequest::Oauth2QrConnectUrlRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Oauth2QrConnectUrlRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Oauth2QrConnectUrlRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Oauth2QrConnectUrlRequestDefaultTypeInternal() {}
  union {
    Oauth2QrConnectUrlRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Oauth2QrConnectUrlRequestDefaultTypeInternal _Oauth2QrConnectUrlRequest_default_instance_;

inline constexpr MiniProgramCode2SessionResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        union_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        open_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR MiniProgramCode2SessionResponse::MiniProgramCode2SessionResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MiniProgramCode2SessionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MiniProgramCode2SessionResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MiniProgramCode2SessionResponseDefaultTypeInternal() {}
  union {
    MiniProgramCode2SessionResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MiniProgramCode2SessionResponseDefaultTypeInternal _MiniProgramCode2SessionResponse_default_instance_;

inline constexpr MiniProgramCode2SessionRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR MiniProgramCode2SessionRequest::MiniProgramCode2SessionRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct MiniProgramCode2SessionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MiniProgramCode2SessionRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~MiniProgramCode2SessionRequestDefaultTypeInternal() {}
  union {
    MiniProgramCode2SessionRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MiniProgramCode2SessionRequestDefaultTypeInternal _MiniProgramCode2SessionRequest_default_instance_;

inline constexpr PayTradeBillRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        bill_date_{nullptr},
        bill_type_{static_cast< ::palm::wechat::v1::PayTradeBillRequest_BillType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR PayTradeBillRequest::PayTradeBillRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayTradeBillRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayTradeBillRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayTradeBillRequestDefaultTypeInternal() {}
  union {
    PayTradeBillRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayTradeBillRequestDefaultTypeInternal _PayTradeBillRequest_default_instance_;

inline constexpr PayQueryBatchTransferResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        details_{},
        batch_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PayQueryBatchTransferResponse::PayQueryBatchTransferResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayQueryBatchTransferResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayQueryBatchTransferResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayQueryBatchTransferResponseDefaultTypeInternal() {}
  union {
    PayQueryBatchTransferResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayQueryBatchTransferResponseDefaultTypeInternal _PayQueryBatchTransferResponse_default_instance_;

inline constexpr PayPrepayRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        app_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        out_trade_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        payer_open_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        description_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        notify_host_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        amount_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PayPrepayRequest::PayPrepayRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayPrepayRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayPrepayRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayPrepayRequestDefaultTypeInternal() {}
  union {
    PayPrepayRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayPrepayRequestDefaultTypeInternal _PayPrepayRequest_default_instance_;

inline constexpr PayFundFlowBillRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        bill_date_{nullptr},
        account_type_{static_cast< ::palm::wechat::v1::PayFundFlowBillRequest_AccountType >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR PayFundFlowBillRequest::PayFundFlowBillRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayFundFlowBillRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayFundFlowBillRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayFundFlowBillRequestDefaultTypeInternal() {}
  union {
    PayFundFlowBillRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayFundFlowBillRequestDefaultTypeInternal _PayFundFlowBillRequest_default_instance_;

inline constexpr PayExecuteBatchTransferResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : details_{},
        out_batch_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR PayExecuteBatchTransferResponse::PayExecuteBatchTransferResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayExecuteBatchTransferResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayExecuteBatchTransferResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayExecuteBatchTransferResponseDefaultTypeInternal() {}
  union {
    PayExecuteBatchTransferResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayExecuteBatchTransferResponseDefaultTypeInternal _PayExecuteBatchTransferResponse_default_instance_;

inline constexpr PayExecuteBatchTransferRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        details_{},
        app_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        scene_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        batch_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PayExecuteBatchTransferRequest::PayExecuteBatchTransferRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayExecuteBatchTransferRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayExecuteBatchTransferRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayExecuteBatchTransferRequestDefaultTypeInternal() {}
  union {
    PayExecuteBatchTransferRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayExecuteBatchTransferRequestDefaultTypeInternal _PayExecuteBatchTransferRequest_default_instance_;

inline constexpr PayCreateRefundRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        out_trade_no_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        reason_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        notify_host_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        amount_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR PayCreateRefundRequest::PayCreateRefundRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct PayCreateRefundRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PayCreateRefundRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PayCreateRefundRequestDefaultTypeInternal() {}
  union {
    PayCreateRefundRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PayCreateRefundRequestDefaultTypeInternal _PayCreateRefundRequest_default_instance_;

inline constexpr Oauth2SignInResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        subject_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        user_info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR Oauth2SignInResponse::Oauth2SignInResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct Oauth2SignInResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Oauth2SignInResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~Oauth2SignInResponseDefaultTypeInternal() {}
  union {
    Oauth2SignInResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Oauth2SignInResponseDefaultTypeInternal _Oauth2SignInResponse_default_instance_;
}  // namespace v1
}  // namespace wechat
}  // namespace palm
static ::_pb::Metadata file_level_metadata_wechat_2eproto[39];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_wechat_2eproto[7];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_wechat_2eproto = nullptr;
const ::uint32_t TableStruct_wechat_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2QrConnectUrlRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2QrConnectUrlRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2QrConnectUrlRequest, _impl_.subject_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2QrConnectUrlRequest, _impl_.lang_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2QrConnectUrlResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2QrConnectUrlResponse, _impl_.url_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInRequest, _impl_.code_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInRequest, _impl_.state_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInRequest, _impl_.lang_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInResponse_UserInfo, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInResponse_UserInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInResponse_UserInfo, _impl_.open_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInResponse_UserInfo, _impl_.nickname_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInResponse_UserInfo, _impl_.sex_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInResponse_UserInfo, _impl_.province_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInResponse_UserInfo, _impl_.city_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInResponse_UserInfo, _impl_.country_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInResponse_UserInfo, _impl_.head_img_url_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInResponse_UserInfo, _impl_.privilege_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInResponse_UserInfo, _impl_.union_id_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInResponse, _impl_.user_info_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInResponse, _impl_.token_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::Oauth2SignInResponse, _impl_.subject_),
    1,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::MiniProgramCode2SessionRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::MiniProgramCode2SessionRequest, _impl_.code_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::MiniProgramCode2SessionResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::MiniProgramCode2SessionResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::MiniProgramCode2SessionResponse, _impl_.union_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::MiniProgramCode2SessionResponse, _impl_.open_id_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayPrepayRequest_Amount, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayPrepayRequest_Amount, _impl_.total_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayPrepayRequest_Amount, _impl_.currency_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayPrepayRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayPrepayRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayPrepayRequest, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayPrepayRequest, _impl_.out_trade_no_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayPrepayRequest, _impl_.payer_open_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayPrepayRequest, _impl_.amount_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayPrepayRequest, _impl_.description_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayPrepayRequest, _impl_.notify_host_),
    ~0u,
    0,
    1,
    2,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayCloseOrderRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayCloseOrderRequest, _impl_.out_trade_no_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayCloseOrderRequest, _impl_.reason_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayError, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayError, _impl_.code_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayError, _impl_.message_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayNativeQrCodeUrlResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayNativeQrCodeUrlResponse, _impl_.url_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayNativeQrCodeUrlResponse, _impl_.out_trade_no_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayTradeResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayTradeResponse, _impl_.trade_state_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayTradeResponse, _impl_.trade_state_desc_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryOrderByIdRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryOrderByIdRequest, _impl_.transaction_id_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryOrderByOutTradeNoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryOrderByOutTradeNoRequest, _impl_.out_trade_no_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayJsapiPrepayIdResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayJsapiPrepayIdResponse, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayJsapiPrepayIdResponse, _impl_.time_stamp_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayJsapiPrepayIdResponse, _impl_.nonce_str_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayJsapiPrepayIdResponse, _impl_.package_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayJsapiPrepayIdResponse, _impl_.sign_type_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayJsapiPrepayIdResponse, _impl_.pay_sign_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayJsapiPrepayIdResponse, _impl_.out_trade_no_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayBillDate, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayBillDate, _impl_.year_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayBillDate, _impl_.month_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayBillDate, _impl_.day_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayBillResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayBillResponse, _impl_.content_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayTradeBillRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayTradeBillRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayTradeBillRequest, _impl_.bill_date_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayTradeBillRequest, _impl_.bill_type_),
    0,
    ~0u,
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayFundFlowBillRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayFundFlowBillRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayFundFlowBillRequest, _impl_.bill_date_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayFundFlowBillRequest, _impl_.account_type_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayCreateRefundRequest_Amount, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayCreateRefundRequest_Amount, _impl_.total_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayCreateRefundRequest_Amount, _impl_.refund_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayCreateRefundRequest_Amount, _impl_.currency_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayCreateRefundRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayCreateRefundRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayCreateRefundRequest, _impl_.out_trade_no_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayCreateRefundRequest, _impl_.reason_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayCreateRefundRequest, _impl_.amount_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayCreateRefundRequest, _impl_.notify_host_),
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryRefundRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryRefundRequest, _impl_.out_refund_no_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayRefundResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayRefundResponse, _impl_.out_refund_no_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayRefundResponse, _impl_.channel_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayRefundResponse, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayRefundResponse, _impl_.user_received_account_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayRefundResponse, _impl_.create_time_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayTransferGetElectronicReceiptRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayTransferGetElectronicReceiptRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayTransferGetElectronicReceiptRequest, _impl_.accept_type_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayTransferGetElectronicReceiptRequest, _impl_.out_batch_no_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayTransferGetElectronicReceiptRequest, _impl_.out_detail_no_),
    ~0u,
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayTransferGetReceiptResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayTransferGetReceiptResponse, _impl_.payload_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayTransferGetBillReceiptRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayTransferGetBillReceiptRequest, _impl_.out_batch_no_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferRequest_Batch, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferRequest_Batch, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferRequest_Batch, _impl_.name_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferRequest_Batch, _impl_.remark_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferRequest_Batch, _impl_.out_no_),
    ~0u,
    ~0u,
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferRequest_Detail, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferRequest_Detail, _impl_.open_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferRequest_Detail, _impl_.username_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferRequest_Detail, _impl_.amount_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferRequest_Detail, _impl_.remark_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferRequest, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferRequest, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferRequest, _impl_.batch_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferRequest, _impl_.details_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferRequest, _impl_.scene_id_),
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferResponse_Detail, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferResponse_Detail, _impl_.open_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferResponse_Detail, _impl_.out_detail_no_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferResponse_Succeeded, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferResponse_Succeeded, _impl_.batch_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferResponse_Succeeded, _impl_.create_time_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferResponse, _impl_._oneof_case_[0]),
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferResponse, _impl_.out_batch_no_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferResponse, _impl_.details_),
    ::_pbi::kInvalidFieldOffsetTag,
    ::_pbi::kInvalidFieldOffsetTag,
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferResponse, _impl_.payload_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferRequest, _impl_.out_batch_no_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferRequest, _impl_.offset_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferRequest, _impl_.limit_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferRequest, _impl_.detail_status_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Detail, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Detail, _impl_.detail_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Detail, _impl_.out_detail_no_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Detail, _impl_.status_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_.mch_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_.transfer_scene_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_.batch_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_.out_batch_no_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_.batch_status_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_.batch_type_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_.batch_name_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_.batch_remark_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_.close_reason_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_.total_amount_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_.total_num_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_.create_time_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_.update_time_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_.success_amount_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_.success_num_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_.fail_amount_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch, _impl_.fail_num_),
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    1,
    2,
    4,
    3,
    5,
    6,
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse, _impl_.batch_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryBatchTransferResponse, _impl_.details_),
    0,
    ~0u,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailRequest, _impl_.out_batch_no_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailRequest, _impl_.out_detail_no_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailResponse, _impl_.app_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailResponse, _impl_.mch_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailResponse, _impl_.open_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailResponse, _impl_.user_name_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailResponse, _impl_.batch_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailResponse, _impl_.out_batch_no_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailResponse, _impl_.out_detail_no_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailResponse, _impl_.detail_id_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailResponse, _impl_.detail_status_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailResponse, _impl_.transfer_amount_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailResponse, _impl_.transfer_remark_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailResponse, _impl_.fail_reason_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailResponse, _impl_.initiate_time_),
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayQueryTransferDetailResponse, _impl_.update_time_),
    ~0u,
    ~0u,
    ~0u,
    0,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    ~0u,
    1,
    ~0u,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::palm::wechat::v1::Oauth2QrConnectUrlRequest)},
        {12, -1, -1, sizeof(::palm::wechat::v1::Oauth2QrConnectUrlResponse)},
        {21, -1, -1, sizeof(::palm::wechat::v1::Oauth2SignInRequest)},
        {32, 49, -1, sizeof(::palm::wechat::v1::Oauth2SignInResponse_UserInfo)},
        {58, 69, -1, sizeof(::palm::wechat::v1::Oauth2SignInResponse)},
        {72, -1, -1, sizeof(::palm::wechat::v1::MiniProgramCode2SessionRequest)},
        {81, 91, -1, sizeof(::palm::wechat::v1::MiniProgramCode2SessionResponse)},
        {93, -1, -1, sizeof(::palm::wechat::v1::PayPrepayRequest_Amount)},
        {103, 117, -1, sizeof(::palm::wechat::v1::PayPrepayRequest)},
        {123, -1, -1, sizeof(::palm::wechat::v1::PayCloseOrderRequest)},
        {133, -1, -1, sizeof(::palm::wechat::v1::PayError)},
        {143, -1, -1, sizeof(::palm::wechat::v1::PayNativeQrCodeUrlResponse)},
        {153, -1, -1, sizeof(::palm::wechat::v1::PayTradeResponse)},
        {163, -1, -1, sizeof(::palm::wechat::v1::PayQueryOrderByIdRequest)},
        {172, -1, -1, sizeof(::palm::wechat::v1::PayQueryOrderByOutTradeNoRequest)},
        {181, -1, -1, sizeof(::palm::wechat::v1::PayJsapiPrepayIdResponse)},
        {196, -1, -1, sizeof(::palm::wechat::v1::PayBillDate)},
        {207, -1, -1, sizeof(::palm::wechat::v1::PayBillResponse)},
        {216, 226, -1, sizeof(::palm::wechat::v1::PayTradeBillRequest)},
        {228, 238, -1, sizeof(::palm::wechat::v1::PayFundFlowBillRequest)},
        {240, -1, -1, sizeof(::palm::wechat::v1::PayCreateRefundRequest_Amount)},
        {251, 263, -1, sizeof(::palm::wechat::v1::PayCreateRefundRequest)},
        {267, -1, -1, sizeof(::palm::wechat::v1::PayQueryRefundRequest)},
        {276, -1, -1, sizeof(::palm::wechat::v1::PayRefundResponse)},
        {289, 300, -1, sizeof(::palm::wechat::v1::PayTransferGetElectronicReceiptRequest)},
        {303, -1, -1, sizeof(::palm::wechat::v1::PayTransferGetReceiptResponse)},
        {312, -1, -1, sizeof(::palm::wechat::v1::PayTransferGetBillReceiptRequest)},
        {321, 332, -1, sizeof(::palm::wechat::v1::PayExecuteBatchTransferRequest_Batch)},
        {335, -1, -1, sizeof(::palm::wechat::v1::PayExecuteBatchTransferRequest_Detail)},
        {347, 359, -1, sizeof(::palm::wechat::v1::PayExecuteBatchTransferRequest)},
        {363, -1, -1, sizeof(::palm::wechat::v1::PayExecuteBatchTransferResponse_Detail)},
        {373, -1, -1, sizeof(::palm::wechat::v1::PayExecuteBatchTransferResponse_Succeeded)},
        {383, -1, -1, sizeof(::palm::wechat::v1::PayExecuteBatchTransferResponse)},
        {396, -1, -1, sizeof(::palm::wechat::v1::PayQueryBatchTransferRequest)},
        {408, -1, -1, sizeof(::palm::wechat::v1::PayQueryBatchTransferResponse_Detail)},
        {419, 445, -1, sizeof(::palm::wechat::v1::PayQueryBatchTransferResponse_Batch)},
        {463, 473, -1, sizeof(::palm::wechat::v1::PayQueryBatchTransferResponse)},
        {475, -1, -1, sizeof(::palm::wechat::v1::PayQueryTransferDetailRequest)},
        {485, 507, -1, sizeof(::palm::wechat::v1::PayQueryTransferDetailResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::palm::wechat::v1::_Oauth2QrConnectUrlRequest_default_instance_._instance,
    &::palm::wechat::v1::_Oauth2QrConnectUrlResponse_default_instance_._instance,
    &::palm::wechat::v1::_Oauth2SignInRequest_default_instance_._instance,
    &::palm::wechat::v1::_Oauth2SignInResponse_UserInfo_default_instance_._instance,
    &::palm::wechat::v1::_Oauth2SignInResponse_default_instance_._instance,
    &::palm::wechat::v1::_MiniProgramCode2SessionRequest_default_instance_._instance,
    &::palm::wechat::v1::_MiniProgramCode2SessionResponse_default_instance_._instance,
    &::palm::wechat::v1::_PayPrepayRequest_Amount_default_instance_._instance,
    &::palm::wechat::v1::_PayPrepayRequest_default_instance_._instance,
    &::palm::wechat::v1::_PayCloseOrderRequest_default_instance_._instance,
    &::palm::wechat::v1::_PayError_default_instance_._instance,
    &::palm::wechat::v1::_PayNativeQrCodeUrlResponse_default_instance_._instance,
    &::palm::wechat::v1::_PayTradeResponse_default_instance_._instance,
    &::palm::wechat::v1::_PayQueryOrderByIdRequest_default_instance_._instance,
    &::palm::wechat::v1::_PayQueryOrderByOutTradeNoRequest_default_instance_._instance,
    &::palm::wechat::v1::_PayJsapiPrepayIdResponse_default_instance_._instance,
    &::palm::wechat::v1::_PayBillDate_default_instance_._instance,
    &::palm::wechat::v1::_PayBillResponse_default_instance_._instance,
    &::palm::wechat::v1::_PayTradeBillRequest_default_instance_._instance,
    &::palm::wechat::v1::_PayFundFlowBillRequest_default_instance_._instance,
    &::palm::wechat::v1::_PayCreateRefundRequest_Amount_default_instance_._instance,
    &::palm::wechat::v1::_PayCreateRefundRequest_default_instance_._instance,
    &::palm::wechat::v1::_PayQueryRefundRequest_default_instance_._instance,
    &::palm::wechat::v1::_PayRefundResponse_default_instance_._instance,
    &::palm::wechat::v1::_PayTransferGetElectronicReceiptRequest_default_instance_._instance,
    &::palm::wechat::v1::_PayTransferGetReceiptResponse_default_instance_._instance,
    &::palm::wechat::v1::_PayTransferGetBillReceiptRequest_default_instance_._instance,
    &::palm::wechat::v1::_PayExecuteBatchTransferRequest_Batch_default_instance_._instance,
    &::palm::wechat::v1::_PayExecuteBatchTransferRequest_Detail_default_instance_._instance,
    &::palm::wechat::v1::_PayExecuteBatchTransferRequest_default_instance_._instance,
    &::palm::wechat::v1::_PayExecuteBatchTransferResponse_Detail_default_instance_._instance,
    &::palm::wechat::v1::_PayExecuteBatchTransferResponse_Succeeded_default_instance_._instance,
    &::palm::wechat::v1::_PayExecuteBatchTransferResponse_default_instance_._instance,
    &::palm::wechat::v1::_PayQueryBatchTransferRequest_default_instance_._instance,
    &::palm::wechat::v1::_PayQueryBatchTransferResponse_Detail_default_instance_._instance,
    &::palm::wechat::v1::_PayQueryBatchTransferResponse_Batch_default_instance_._instance,
    &::palm::wechat::v1::_PayQueryBatchTransferResponse_default_instance_._instance,
    &::palm::wechat::v1::_PayQueryTransferDetailRequest_default_instance_._instance,
    &::palm::wechat::v1::_PayQueryTransferDetailResponse_default_instance_._instance,
};
const char descriptor_table_protodef_wechat_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\014wechat.proto\022\016palm.wechat.v1\032\033google/p"
    "rotobuf/empty.proto\032\014balsam.proto\"\204\001\n\031Oa"
    "uth2QrConnectUrlRequest\022\024\n\007subject\030\001 \001(\t"
    "H\000\210\001\001\022E\n\004lang\030\t \001(\01627.palm.balsam.v1.Wec"
    "hatOauth2UserIndexResponse.Item.LangB\n\n\010"
    "_subject\")\n\032Oauth2QrConnectUrlResponse\022\013"
    "\n\003url\030\001 \001(\t\"y\n\023Oauth2SignInRequest\022\014\n\004co"
    "de\030\001 \001(\t\022\r\n\005state\030\002 \001(\t\022E\n\004lang\030\t \001(\01627."
    "palm.balsam.v1.WechatOauth2UserIndexResp"
    "onse.Item.Lang\"\310\002\n\024Oauth2SignInResponse\022"
    "@\n\tuser_info\030\001 \001(\0132-.palm.wechat.v1.Oaut"
    "h2SignInResponse.UserInfo\022\r\n\005token\030\002 \001(\014"
    "\022\024\n\007subject\030\t \001(\tH\000\210\001\001\032\274\001\n\010UserInfo\022\017\n\007o"
    "pen_id\030\001 \001(\t\022\020\n\010nickname\030\002 \001(\t\022\013\n\003sex\030\003 "
    "\001(\r\022\020\n\010province\030\004 \001(\t\022\014\n\004city\030\005 \001(\t\022\017\n\007c"
    "ountry\030\006 \001(\t\022\031\n\014head_img_url\030\007 \001(\tH\000\210\001\001\022"
    "\021\n\tprivilege\030\010 \003(\t\022\020\n\010union_id\030\t \001(\tB\017\n\r"
    "_head_img_urlB\n\n\010_subject\".\n\036MiniProgram"
    "Code2SessionRequest\022\014\n\004code\030\001 \001(\t\"V\n\037Min"
    "iProgramCode2SessionResponse\022\025\n\010union_id"
    "\030\001 \001(\tH\000\210\001\001\022\017\n\007open_id\030\002 \001(\tB\013\n\t_union_i"
    "d\"\247\002\n\020PayPrepayRequest\022\016\n\006app_id\030\001 \001(\t\022\031"
    "\n\014out_trade_no\030\002 \001(\tH\000\210\001\001\022\032\n\rpayer_open_"
    "id\030\013 \001(\tH\001\210\001\001\0227\n\006amount\030\014 \001(\0132\'.palm.wec"
    "hat.v1.PayPrepayRequest.Amount\022\023\n\013descri"
    "ption\030b \001(\t\022\023\n\013notify_host\030c \001(\t\032F\n\006Amou"
    "nt\022\r\n\005total\030\001 \001(\005\022-\n\010currency\030\002 \001(\0162\033.pa"
    "lm.wechat.v1.PayCurrencyB\017\n\r_out_trade_n"
    "oB\020\n\016_payer_open_id\"<\n\024PayCloseOrderRequ"
    "est\022\024\n\014out_trade_no\030\001 \001(\t\022\016\n\006reason\030\002 \001("
    "\t\")\n\010PayError\022\014\n\004code\030\001 \001(\t\022\017\n\007message\030\002"
    " \001(\t\"\?\n\032PayNativeQrCodeUrlResponse\022\013\n\003ur"
    "l\030\001 \001(\t\022\024\n\014out_trade_no\030\002 \001(\t\"A\n\020PayTrad"
    "eResponse\022\023\n\013trade_state\030\001 \001(\t\022\030\n\020trade_"
    "state_desc\030\002 \001(\t\"2\n\030PayQueryOrderByIdReq"
    "uest\022\026\n\016transaction_id\030\001 \001(\t\"8\n PayQuery"
    "OrderByOutTradeNoRequest\022\024\n\014out_trade_no"
    "\030\001 \001(\t\"\235\001\n\030PayJsapiPrepayIdResponse\022\016\n\006a"
    "pp_id\030\001 \001(\t\022\022\n\ntime_stamp\030\002 \001(\t\022\021\n\tnonce"
    "_str\030\003 \001(\t\022\017\n\007package\030\004 \001(\t\022\021\n\tsign_type"
    "\030\005 \001(\t\022\020\n\010pay_sign\030\006 \001(\t\022\024\n\014out_trade_no"
    "\030\013 \001(\t\"7\n\013PayBillDate\022\014\n\004year\030\001 \001(\005\022\r\n\005m"
    "onth\030\002 \001(\005\022\013\n\003day\030\003 \001(\005\"\"\n\017PayBillRespon"
    "se\022\017\n\007content\030\001 \001(\014\"\264\001\n\023PayTradeBillRequ"
    "est\022.\n\tbill_date\030\001 \001(\0132\033.palm.wechat.v1."
    "PayBillDate\022\?\n\tbill_type\030\002 \001(\0162,.palm.we"
    "chat.v1.PayTradeBillRequest.BillType\",\n\010"
    "BillType\022\007\n\003ALL\020\000\022\013\n\007SUCCESS\020\001\022\n\n\006REFUND"
    "\020\002\"\305\001\n\026PayFundFlowBillRequest\022.\n\tbill_da"
    "te\030\001 \001(\0132\033.palm.wechat.v1.PayBillDate\022H\n"
    "\014account_type\030\002 \001(\01622.palm.wechat.v1.Pay"
    "FundFlowBillRequest.AccountType\"1\n\013Accou"
    "ntType\022\t\n\005BASIC\020\000\022\r\n\tOPERATION\020\001\022\010\n\004FEES"
    "\020\002\"\352\001\n\026PayCreateRefundRequest\022\024\n\014out_tra"
    "de_no\030\001 \001(\t\022\016\n\006reason\030\002 \001(\t\022=\n\006amount\030\003 "
    "\001(\0132-.palm.wechat.v1.PayCreateRefundRequ"
    "est.Amount\022\023\n\013notify_host\030\013 \001(\t\032V\n\006Amoun"
    "t\022\r\n\005total\030\001 \001(\005\022\016\n\006refund\030\002 \001(\005\022-\n\010curr"
    "ency\030\003 \001(\0162\033.palm.wechat.v1.PayCurrency\""
    ".\n\025PayQueryRefundRequest\022\025\n\rout_refund_n"
    "o\030\001 \001(\t\"\177\n\021PayRefundResponse\022\025\n\rout_refu"
    "nd_no\030\001 \001(\t\022\017\n\007channel\030\002 \001(\t\022\016\n\006status\030\003"
    " \001(\t\022\035\n\025user_received_account\030\004 \001(\t\022\023\n\013c"
    "reate_time\030c \001(\t\"\223\002\n&PayTransferGetElect"
    "ronicReceiptRequest\022V\n\013accept_type\030\001 \001(\016"
    "2A.palm.wechat.v1.PayTransferGetElectron"
    "icReceiptRequest.AcceptType\022\031\n\014out_batch"
    "_no\030\002 \001(\tH\000\210\001\001\022\025\n\rout_detail_no\030\003 \001(\t\"N\n"
    "\nAcceptType\022\022\n\016BATCH_TRANSFER\020\000\022\026\n\022TRANS"
    "FER_TO_POCKET\020\001\022\024\n\020TRANSFER_TO_BANK\020\002B\017\n"
    "\r_out_batch_no\"0\n\035PayTransferGetReceiptR"
    "esponse\022\017\n\007payload\030\001 \001(\014\"8\n PayTransferG"
    "etBillReceiptRequest\022\024\n\014out_batch_no\030\001 \001"
    "(\t\"\343\002\n\036PayExecuteBatchTransferRequest\022\016\n"
    "\006app_id\030\001 \001(\t\022C\n\005batch\030\002 \001(\01324.palm.wech"
    "at.v1.PayExecuteBatchTransferRequest.Bat"
    "ch\022F\n\007details\030\003 \003(\01325.palm.wechat.v1.Pay"
    "ExecuteBatchTransferRequest.Detail\022\020\n\010sc"
    "ene_id\030\t \001(\t\032E\n\005Batch\022\014\n\004name\030\001 \001(\t\022\016\n\006r"
    "emark\030\002 \001(\t\022\023\n\006out_no\030\003 \001(\tH\000\210\001\001B\t\n\007_out"
    "_no\032K\n\006Detail\022\017\n\007open_id\030\001 \001(\t\022\020\n\010userna"
    "me\030\002 \001(\t\022\016\n\006amount\030\003 \001(\003\022\016\n\006remark\030\004 \001(\t"
    "\"\354\002\n\037PayExecuteBatchTransferResponse\022\024\n\014"
    "out_batch_no\030\001 \001(\t\022G\n\007details\030\002 \003(\01326.pa"
    "lm.wechat.v1.PayExecuteBatchTransferResp"
    "onse.Detail\022N\n\tsucceeded\030\013 \001(\01329.palm.we"
    "chat.v1.PayExecuteBatchTransferResponse."
    "SucceededH\000\022)\n\005error\030\014 \001(\0132\030.palm.wechat"
    ".v1.PayErrorH\000\0320\n\006Detail\022\017\n\007open_id\030\001 \001("
    "\t\022\025\n\rout_detail_no\030\002 \001(\t\0322\n\tSucceeded\022\020\n"
    "\010batch_id\030\001 \001(\t\022\023\n\013create_time\030\002 \001(\tB\t\n\007"
    "payload\"\343\001\n\034PayQueryBatchTransferRequest"
    "\022\024\n\014out_batch_no\030\001 \001(\t\022\016\n\006offset\030\002 \001(\005\022\r"
    "\n\005limit\030\003 \001(\005\022P\n\rdetail_status\030\t \001(\01629.p"
    "alm.wechat.v1.PayQueryBatchTransferReque"
    "st.DetailStatus\"<\n\014DetailStatus\022\007\n\003ALL\020\000"
    "\022\013\n\007SUCCESS\020\001\022\014\n\010WAIT_PAY\020\002\022\010\n\004FAIL\020\t\"\200\006"
    "\n\035PayQueryBatchTransferResponse\022B\n\005batch"
    "\030\001 \001(\01323.palm.wechat.v1.PayQueryBatchTra"
    "nsferResponse.Batch\022E\n\007details\030\t \003(\01324.p"
    "alm.wechat.v1.PayQueryBatchTransferRespo"
    "nse.Detail\032B\n\006Detail\022\021\n\tdetail_id\030\001 \001(\t\022"
    "\025\n\rout_detail_no\030\002 \001(\t\022\016\n\006status\030\003 \001(\t\032\217"
    "\004\n\005Batch\022\016\n\006app_id\030\001 \001(\t\022\016\n\006mch_id\030\002 \001(\t"
    "\022\031\n\021transfer_scene_id\030\t \001(\t\022\020\n\010batch_id\030"
    "\013 \001(\t\022\024\n\014out_batch_no\030\014 \001(\t\022\024\n\014batch_sta"
    "tus\030\r \001(\t\022\022\n\nbatch_type\030\016 \001(\t\022\022\n\nbatch_n"
    "ame\030\017 \001(\t\022\024\n\014batch_remark\030\020 \001(\t\022\031\n\014close"
    "_reason\030\025 \001(\tH\000\210\001\001\022\024\n\014total_amount\030\026 \001(\003"
    "\022\021\n\ttotal_num\030\027 \001(\005\022\030\n\013create_time\030\030 \001(\t"
    "H\001\210\001\001\022\030\n\013update_time\030\031 \001(\tH\002\210\001\001\022\033\n\016succe"
    "ss_amount\030\032 \001(\003H\003\210\001\001\022\030\n\013success_num\030\033 \001("
    "\005H\004\210\001\001\022\030\n\013fail_amount\030\034 \001(\003H\005\210\001\001\022\025\n\010fail"
    "_num\030\035 \001(\005H\006\210\001\001B\017\n\r_close_reasonB\016\n\014_cre"
    "ate_timeB\016\n\014_update_timeB\021\n\017_success_amo"
    "untB\016\n\014_success_numB\016\n\014_fail_amountB\013\n\t_"
    "fail_num\"L\n\035PayQueryTransferDetailReques"
    "t\022\024\n\014out_batch_no\030\001 \001(\t\022\025\n\rout_detail_no"
    "\030\002 \001(\t\"\350\002\n\036PayQueryTransferDetailRespons"
    "e\022\016\n\006app_id\030\001 \001(\t\022\016\n\006mch_id\030\002 \001(\t\022\017\n\007ope"
    "n_id\030\003 \001(\t\022\026\n\tuser_name\030\004 \001(\tH\000\210\001\001\022\020\n\010ba"
    "tch_id\030\013 \001(\t\022\024\n\014out_batch_no\030\014 \001(\t\022\025\n\rou"
    "t_detail_no\030\r \001(\t\022\021\n\tdetail_id\030\016 \001(\t\022\025\n\r"
    "detail_status\030\017 \001(\t\022\027\n\017transfer_amount\030\020"
    " \001(\003\022\027\n\017transfer_remark\030\021 \001(\t\022\030\n\013fail_re"
    "ason\030\022 \001(\tH\001\210\001\001\022\025\n\rinitiate_time\030\023 \001(\t\022\023"
    "\n\013update_time\030\024 \001(\tB\014\n\n_user_nameB\016\n\014_fa"
    "il_reason*\026\n\013PayCurrency\022\007\n\003CNY\020\000*.\n\017Pay"
    "NotifyAction\022\017\n\013TRANSCATION\020\000\022\n\n\006REFUND\020"
    "\001*\026\n\nPayTarType\022\010\n\004GZIP\020\0002\310\001\n\006Oauth2\022g\n\014"
    "QrConnectUrl\022).palm.wechat.v1.Oauth2QrCo"
    "nnectUrlRequest\032*.palm.wechat.v1.Oauth2Q"
    "rConnectUrlResponse\"\000\022U\n\006SignIn\022#.palm.w"
    "echat.v1.Oauth2SignInRequest\032$.palm.wech"
    "at.v1.Oauth2SignInResponse\"\0002\200\001\n\013MiniPro"
    "gram\022q\n\014Code2Session\022..palm.wechat.v1.Mi"
    "niProgramCode2SessionRequest\032/.palm.wech"
    "at.v1.MiniProgramCode2SessionResponse\"\0002"
    "e\n\tPayNative\022X\n\006Prepay\022 .palm.wechat.v1."
    "PayPrepayRequest\032*.palm.wechat.v1.PayNat"
    "iveQrCodeUrlResponse\"\0002\200\003\n\010PayJsapi\022V\n\006P"
    "repay\022 .palm.wechat.v1.PayPrepayRequest\032"
    "(.palm.wechat.v1.PayJsapiPrepayIdRespons"
    "e\"\000\022n\n\026QueryOrderByOutTradeNo\0220.palm.wec"
    "hat.v1.PayQueryOrderByOutTradeNoRequest\032"
    " .palm.wechat.v1.PayTradeResponse\"\000\022^\n\016Q"
    "ueryOrderById\022(.palm.wechat.v1.PayQueryO"
    "rderByIdRequest\032 .palm.wechat.v1.PayTrad"
    "eResponse\"\000\022L\n\nCloseOrder\022$.palm.wechat."
    "v1.PayCloseOrderRequest\032\026.google.protobu"
    "f.Empty\"\0002\261\001\n\007PayBill\022O\n\005Trade\022#.palm.we"
    "chat.v1.PayTradeBillRequest\032\037.palm.wecha"
    "t.v1.PayBillResponse\"\000\022U\n\010FundFlow\022&.pal"
    "m.wechat.v1.PayFundFlowBillRequest\032\037.pal"
    "m.wechat.v1.PayBillResponse\"\0002\267\001\n\tPayRef"
    "und\022U\n\006Create\022&.palm.wechat.v1.PayCreate"
    "RefundRequest\032!.palm.wechat.v1.PayRefund"
    "Response\"\000\022S\n\005Query\022%.palm.wechat.v1.Pay"
    "QueryRefundRequest\032!.palm.wechat.v1.PayR"
    "efundResponse\"\0002\323\004\n\013PayTransfer\022q\n\014Execu"
    "teBatch\022..palm.wechat.v1.PayExecuteBatch"
    "TransferRequest\032/.palm.wechat.v1.PayExec"
    "uteBatchTransferResponse\"\000\022k\n\nQueryBatch"
    "\022,.palm.wechat.v1.PayQueryBatchTransferR"
    "equest\032-.palm.wechat.v1.PayQueryBatchTra"
    "nsferResponse\"\000\022n\n\013QueryDetail\022-.palm.we"
    "chat.v1.PayQueryTransferDetailRequest\032.."
    "palm.wechat.v1.PayQueryTransferDetailRes"
    "ponse\"\000\022s\n\016GetBillReceipt\0220.palm.wechat."
    "v1.PayTransferGetBillReceiptRequest\032-.pa"
    "lm.wechat.v1.PayTransferGetReceiptRespon"
    "se\"\000\022\177\n\024GetElectronicReceipt\0226.palm.wech"
    "at.v1.PayTransferGetElectronicReceiptReq"
    "uest\032-.palm.wechat.v1.PayTransferGetRece"
    "iptResponse\"\000Bf\n,com.github.saturn_xiv.p"
    "alm.plugins.wechat.v1P\001Z4github.com/satu"
    "rn-xiv/palm/atropa/wechat/services/v2b\006p"
    "roto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_wechat_2eproto_deps[2] =
    {
        &::descriptor_table_balsam_2eproto,
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_wechat_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_wechat_2eproto = {
    false,
    false,
    7085,
    descriptor_table_protodef_wechat_2eproto,
    "wechat.proto",
    &descriptor_table_wechat_2eproto_once,
    descriptor_table_wechat_2eproto_deps,
    2,
    39,
    schemas,
    file_default_instances,
    TableStruct_wechat_2eproto::offsets,
    file_level_metadata_wechat_2eproto,
    file_level_enum_descriptors_wechat_2eproto,
    file_level_service_descriptors_wechat_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_wechat_2eproto_getter() {
  return &descriptor_table_wechat_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_wechat_2eproto(&descriptor_table_wechat_2eproto);
namespace palm {
namespace wechat {
namespace v1 {
const ::google::protobuf::EnumDescriptor* PayTradeBillRequest_BillType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_wechat_2eproto);
  return file_level_enum_descriptors_wechat_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t PayTradeBillRequest_BillType_internal_data_[] = {
    196608u, 0u, };
bool PayTradeBillRequest_BillType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr PayTradeBillRequest_BillType PayTradeBillRequest::ALL;
constexpr PayTradeBillRequest_BillType PayTradeBillRequest::SUCCESS;
constexpr PayTradeBillRequest_BillType PayTradeBillRequest::REFUND;
constexpr PayTradeBillRequest_BillType PayTradeBillRequest::BillType_MIN;
constexpr PayTradeBillRequest_BillType PayTradeBillRequest::BillType_MAX;
constexpr int PayTradeBillRequest::BillType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* PayFundFlowBillRequest_AccountType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_wechat_2eproto);
  return file_level_enum_descriptors_wechat_2eproto[1];
}
PROTOBUF_CONSTINIT const uint32_t PayFundFlowBillRequest_AccountType_internal_data_[] = {
    196608u, 0u, };
bool PayFundFlowBillRequest_AccountType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr PayFundFlowBillRequest_AccountType PayFundFlowBillRequest::BASIC;
constexpr PayFundFlowBillRequest_AccountType PayFundFlowBillRequest::OPERATION;
constexpr PayFundFlowBillRequest_AccountType PayFundFlowBillRequest::FEES;
constexpr PayFundFlowBillRequest_AccountType PayFundFlowBillRequest::AccountType_MIN;
constexpr PayFundFlowBillRequest_AccountType PayFundFlowBillRequest::AccountType_MAX;
constexpr int PayFundFlowBillRequest::AccountType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* PayTransferGetElectronicReceiptRequest_AcceptType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_wechat_2eproto);
  return file_level_enum_descriptors_wechat_2eproto[2];
}
PROTOBUF_CONSTINIT const uint32_t PayTransferGetElectronicReceiptRequest_AcceptType_internal_data_[] = {
    196608u, 0u, };
bool PayTransferGetElectronicReceiptRequest_AcceptType_IsValid(int value) {
  return 0 <= value && value <= 2;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr PayTransferGetElectronicReceiptRequest_AcceptType PayTransferGetElectronicReceiptRequest::BATCH_TRANSFER;
constexpr PayTransferGetElectronicReceiptRequest_AcceptType PayTransferGetElectronicReceiptRequest::TRANSFER_TO_POCKET;
constexpr PayTransferGetElectronicReceiptRequest_AcceptType PayTransferGetElectronicReceiptRequest::TRANSFER_TO_BANK;
constexpr PayTransferGetElectronicReceiptRequest_AcceptType PayTransferGetElectronicReceiptRequest::AcceptType_MIN;
constexpr PayTransferGetElectronicReceiptRequest_AcceptType PayTransferGetElectronicReceiptRequest::AcceptType_MAX;
constexpr int PayTransferGetElectronicReceiptRequest::AcceptType_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* PayQueryBatchTransferRequest_DetailStatus_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_wechat_2eproto);
  return file_level_enum_descriptors_wechat_2eproto[3];
}
PROTOBUF_CONSTINIT const uint32_t PayQueryBatchTransferRequest_DetailStatus_internal_data_[] = {
    196608u, 32u, 64u, };
bool PayQueryBatchTransferRequest_DetailStatus_IsValid(int value) {
  return 0 <= value && value <= 9 && ((519u >> value) & 1) != 0;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr PayQueryBatchTransferRequest_DetailStatus PayQueryBatchTransferRequest::ALL;
constexpr PayQueryBatchTransferRequest_DetailStatus PayQueryBatchTransferRequest::SUCCESS;
constexpr PayQueryBatchTransferRequest_DetailStatus PayQueryBatchTransferRequest::WAIT_PAY;
constexpr PayQueryBatchTransferRequest_DetailStatus PayQueryBatchTransferRequest::FAIL;
constexpr PayQueryBatchTransferRequest_DetailStatus PayQueryBatchTransferRequest::DetailStatus_MIN;
constexpr PayQueryBatchTransferRequest_DetailStatus PayQueryBatchTransferRequest::DetailStatus_MAX;
constexpr int PayQueryBatchTransferRequest::DetailStatus_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
const ::google::protobuf::EnumDescriptor* PayCurrency_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_wechat_2eproto);
  return file_level_enum_descriptors_wechat_2eproto[4];
}
PROTOBUF_CONSTINIT const uint32_t PayCurrency_internal_data_[] = {
    65536u, 0u, };
bool PayCurrency_IsValid(int value) {
  return 0 <= value && value <= 0;
}
const ::google::protobuf::EnumDescriptor* PayNotifyAction_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_wechat_2eproto);
  return file_level_enum_descriptors_wechat_2eproto[5];
}
PROTOBUF_CONSTINIT const uint32_t PayNotifyAction_internal_data_[] = {
    131072u, 0u, };
bool PayNotifyAction_IsValid(int value) {
  return 0 <= value && value <= 1;
}
const ::google::protobuf::EnumDescriptor* PayTarType_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_wechat_2eproto);
  return file_level_enum_descriptors_wechat_2eproto[6];
}
PROTOBUF_CONSTINIT const uint32_t PayTarType_internal_data_[] = {
    65536u, 0u, };
bool PayTarType_IsValid(int value) {
  return 0 <= value && value <= 0;
}
// ===================================================================

class Oauth2QrConnectUrlRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<Oauth2QrConnectUrlRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Oauth2QrConnectUrlRequest, _impl_._has_bits_);
  static void set_has_subject(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Oauth2QrConnectUrlRequest::Oauth2QrConnectUrlRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.Oauth2QrConnectUrlRequest)
}
inline PROTOBUF_NDEBUG_INLINE Oauth2QrConnectUrlRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        subject_(arena, from.subject_) {}

Oauth2QrConnectUrlRequest::Oauth2QrConnectUrlRequest(
    ::google::protobuf::Arena* arena,
    const Oauth2QrConnectUrlRequest& from)
    : ::google::protobuf::Message(arena) {
  Oauth2QrConnectUrlRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.lang_ = from._impl_.lang_;

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.Oauth2QrConnectUrlRequest)
}
inline PROTOBUF_NDEBUG_INLINE Oauth2QrConnectUrlRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        subject_(arena) {}

inline void Oauth2QrConnectUrlRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.lang_ = {};
}
Oauth2QrConnectUrlRequest::~Oauth2QrConnectUrlRequest() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.Oauth2QrConnectUrlRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Oauth2QrConnectUrlRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.subject_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Oauth2QrConnectUrlRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.Oauth2QrConnectUrlRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.subject_.ClearNonDefaultToEmpty();
  }
  _impl_.lang_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Oauth2QrConnectUrlRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 0, 56, 2> Oauth2QrConnectUrlRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Oauth2QrConnectUrlRequest, _impl_._has_bits_),
    0, // no _extensions_
    9, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967038,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Oauth2QrConnectUrlRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // optional string subject = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(Oauth2QrConnectUrlRequest, _impl_.subject_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string subject = 1;
    {PROTOBUF_FIELD_OFFSET(Oauth2QrConnectUrlRequest, _impl_.subject_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .palm.balsam.v1.WechatOauth2UserIndexResponse.Item.Lang lang = 9;
    {PROTOBUF_FIELD_OFFSET(Oauth2QrConnectUrlRequest, _impl_.lang_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\50\7\0\0\0\0\0\0"
    "palm.wechat.v1.Oauth2QrConnectUrlRequest"
    "subject"
  }},
};

::uint8_t* Oauth2QrConnectUrlRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.Oauth2QrConnectUrlRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string subject = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_subject();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.Oauth2QrConnectUrlRequest.subject");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // .palm.balsam.v1.WechatOauth2UserIndexResponse.Item.Lang lang = 9;
  if (this->_internal_lang() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        9, this->_internal_lang(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.Oauth2QrConnectUrlRequest)
  return target;
}

::size_t Oauth2QrConnectUrlRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.Oauth2QrConnectUrlRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string subject = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_subject());
  }

  // .palm.balsam.v1.WechatOauth2UserIndexResponse.Item.Lang lang = 9;
  if (this->_internal_lang() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_lang());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Oauth2QrConnectUrlRequest::_class_data_ = {
    Oauth2QrConnectUrlRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Oauth2QrConnectUrlRequest::GetClassData() const {
  return &_class_data_;
}

void Oauth2QrConnectUrlRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Oauth2QrConnectUrlRequest*>(&to_msg);
  auto& from = static_cast<const Oauth2QrConnectUrlRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.Oauth2QrConnectUrlRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_subject(from._internal_subject());
  }
  if (from._internal_lang() != 0) {
    _this->_internal_set_lang(from._internal_lang());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Oauth2QrConnectUrlRequest::CopyFrom(const Oauth2QrConnectUrlRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.Oauth2QrConnectUrlRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Oauth2QrConnectUrlRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Oauth2QrConnectUrlRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Oauth2QrConnectUrlRequest::InternalSwap(Oauth2QrConnectUrlRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_, &other->_impl_.subject_, arena);
  swap(_impl_.lang_, other->_impl_.lang_);
}

::google::protobuf::Metadata Oauth2QrConnectUrlRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[0]);
}
// ===================================================================

class Oauth2QrConnectUrlResponse::_Internal {
 public:
};

Oauth2QrConnectUrlResponse::Oauth2QrConnectUrlResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.Oauth2QrConnectUrlResponse)
}
inline PROTOBUF_NDEBUG_INLINE Oauth2QrConnectUrlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : url_(arena, from.url_),
        _cached_size_{0} {}

Oauth2QrConnectUrlResponse::Oauth2QrConnectUrlResponse(
    ::google::protobuf::Arena* arena,
    const Oauth2QrConnectUrlResponse& from)
    : ::google::protobuf::Message(arena) {
  Oauth2QrConnectUrlResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.Oauth2QrConnectUrlResponse)
}
inline PROTOBUF_NDEBUG_INLINE Oauth2QrConnectUrlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : url_(arena),
        _cached_size_{0} {}

inline void Oauth2QrConnectUrlResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
Oauth2QrConnectUrlResponse::~Oauth2QrConnectUrlResponse() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.Oauth2QrConnectUrlResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Oauth2QrConnectUrlResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.url_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Oauth2QrConnectUrlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.Oauth2QrConnectUrlResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Oauth2QrConnectUrlResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 53, 2> Oauth2QrConnectUrlResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Oauth2QrConnectUrlResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string url = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Oauth2QrConnectUrlResponse, _impl_.url_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string url = 1;
    {PROTOBUF_FIELD_OFFSET(Oauth2QrConnectUrlResponse, _impl_.url_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\3\0\0\0\0\0\0"
    "palm.wechat.v1.Oauth2QrConnectUrlResponse"
    "url"
  }},
};

::uint8_t* Oauth2QrConnectUrlResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.Oauth2QrConnectUrlResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    const std::string& _s = this->_internal_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.Oauth2QrConnectUrlResponse.url");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.Oauth2QrConnectUrlResponse)
  return target;
}

::size_t Oauth2QrConnectUrlResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.Oauth2QrConnectUrlResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Oauth2QrConnectUrlResponse::_class_data_ = {
    Oauth2QrConnectUrlResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Oauth2QrConnectUrlResponse::GetClassData() const {
  return &_class_data_;
}

void Oauth2QrConnectUrlResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Oauth2QrConnectUrlResponse*>(&to_msg);
  auto& from = static_cast<const Oauth2QrConnectUrlResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.Oauth2QrConnectUrlResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Oauth2QrConnectUrlResponse::CopyFrom(const Oauth2QrConnectUrlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.Oauth2QrConnectUrlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Oauth2QrConnectUrlResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Oauth2QrConnectUrlResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Oauth2QrConnectUrlResponse::InternalSwap(Oauth2QrConnectUrlResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, &other->_impl_.url_, arena);
}

::google::protobuf::Metadata Oauth2QrConnectUrlResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[1]);
}
// ===================================================================

class Oauth2SignInRequest::_Internal {
 public:
};

Oauth2SignInRequest::Oauth2SignInRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.Oauth2SignInRequest)
}
inline PROTOBUF_NDEBUG_INLINE Oauth2SignInRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : code_(arena, from.code_),
        state_(arena, from.state_),
        _cached_size_{0} {}

Oauth2SignInRequest::Oauth2SignInRequest(
    ::google::protobuf::Arena* arena,
    const Oauth2SignInRequest& from)
    : ::google::protobuf::Message(arena) {
  Oauth2SignInRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.lang_ = from._impl_.lang_;

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.Oauth2SignInRequest)
}
inline PROTOBUF_NDEBUG_INLINE Oauth2SignInRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : code_(arena),
        state_(arena),
        _cached_size_{0} {}

inline void Oauth2SignInRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.lang_ = {};
}
Oauth2SignInRequest::~Oauth2SignInRequest() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.Oauth2SignInRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Oauth2SignInRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.code_.Destroy();
  _impl_.state_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Oauth2SignInRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.Oauth2SignInRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.code_.ClearToEmpty();
  _impl_.state_.ClearToEmpty();
  _impl_.lang_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Oauth2SignInRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 0, 52, 2> Oauth2SignInRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967036,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Oauth2SignInRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string state = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Oauth2SignInRequest, _impl_.state_)}},
    // string code = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Oauth2SignInRequest, _impl_.code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string code = 1;
    {PROTOBUF_FIELD_OFFSET(Oauth2SignInRequest, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string state = 2;
    {PROTOBUF_FIELD_OFFSET(Oauth2SignInRequest, _impl_.state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .palm.balsam.v1.WechatOauth2UserIndexResponse.Item.Lang lang = 9;
    {PROTOBUF_FIELD_OFFSET(Oauth2SignInRequest, _impl_.lang_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\42\4\5\0\0\0\0\0"
    "palm.wechat.v1.Oauth2SignInRequest"
    "code"
    "state"
  }},
};

::uint8_t* Oauth2SignInRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.Oauth2SignInRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string code = 1;
  if (!this->_internal_code().empty()) {
    const std::string& _s = this->_internal_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.Oauth2SignInRequest.code");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string state = 2;
  if (!this->_internal_state().empty()) {
    const std::string& _s = this->_internal_state();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.Oauth2SignInRequest.state");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // .palm.balsam.v1.WechatOauth2UserIndexResponse.Item.Lang lang = 9;
  if (this->_internal_lang() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        9, this->_internal_lang(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.Oauth2SignInRequest)
  return target;
}

::size_t Oauth2SignInRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.Oauth2SignInRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string code = 1;
  if (!this->_internal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_code());
  }

  // string state = 2;
  if (!this->_internal_state().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_state());
  }

  // .palm.balsam.v1.WechatOauth2UserIndexResponse.Item.Lang lang = 9;
  if (this->_internal_lang() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_lang());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Oauth2SignInRequest::_class_data_ = {
    Oauth2SignInRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Oauth2SignInRequest::GetClassData() const {
  return &_class_data_;
}

void Oauth2SignInRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Oauth2SignInRequest*>(&to_msg);
  auto& from = static_cast<const Oauth2SignInRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.Oauth2SignInRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  if (from._internal_lang() != 0) {
    _this->_internal_set_lang(from._internal_lang());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Oauth2SignInRequest::CopyFrom(const Oauth2SignInRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.Oauth2SignInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Oauth2SignInRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Oauth2SignInRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Oauth2SignInRequest::InternalSwap(Oauth2SignInRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, &other->_impl_.code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.state_, &other->_impl_.state_, arena);
  swap(_impl_.lang_, other->_impl_.lang_);
}

::google::protobuf::Metadata Oauth2SignInRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[2]);
}
// ===================================================================

class Oauth2SignInResponse_UserInfo::_Internal {
 public:
  using HasBits = decltype(std::declval<Oauth2SignInResponse_UserInfo>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_._has_bits_);
  static void set_has_head_img_url(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Oauth2SignInResponse_UserInfo::Oauth2SignInResponse_UserInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.Oauth2SignInResponse.UserInfo)
}
inline PROTOBUF_NDEBUG_INLINE Oauth2SignInResponse_UserInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        privilege_{visibility, arena, from.privilege_},
        open_id_(arena, from.open_id_),
        nickname_(arena, from.nickname_),
        province_(arena, from.province_),
        city_(arena, from.city_),
        country_(arena, from.country_),
        head_img_url_(arena, from.head_img_url_),
        union_id_(arena, from.union_id_) {}

Oauth2SignInResponse_UserInfo::Oauth2SignInResponse_UserInfo(
    ::google::protobuf::Arena* arena,
    const Oauth2SignInResponse_UserInfo& from)
    : ::google::protobuf::Message(arena) {
  Oauth2SignInResponse_UserInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.sex_ = from._impl_.sex_;

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.Oauth2SignInResponse.UserInfo)
}
inline PROTOBUF_NDEBUG_INLINE Oauth2SignInResponse_UserInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        privilege_{visibility, arena},
        open_id_(arena),
        nickname_(arena),
        province_(arena),
        city_(arena),
        country_(arena),
        head_img_url_(arena),
        union_id_(arena) {}

inline void Oauth2SignInResponse_UserInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.sex_ = {};
}
Oauth2SignInResponse_UserInfo::~Oauth2SignInResponse_UserInfo() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.Oauth2SignInResponse.UserInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Oauth2SignInResponse_UserInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.open_id_.Destroy();
  _impl_.nickname_.Destroy();
  _impl_.province_.Destroy();
  _impl_.city_.Destroy();
  _impl_.country_.Destroy();
  _impl_.head_img_url_.Destroy();
  _impl_.union_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Oauth2SignInResponse_UserInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.Oauth2SignInResponse.UserInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.privilege_.Clear();
  _impl_.open_id_.ClearToEmpty();
  _impl_.nickname_.ClearToEmpty();
  _impl_.province_.ClearToEmpty();
  _impl_.city_.ClearToEmpty();
  _impl_.country_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.head_img_url_.ClearNonDefaultToEmpty();
  }
  _impl_.union_id_.ClearToEmpty();
  _impl_.sex_ = 0u;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Oauth2SignInResponse_UserInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 124, 2> Oauth2SignInResponse_UserInfo::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_Oauth2SignInResponse_UserInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string open_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_.open_id_)}},
    // string nickname = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_.nickname_)}},
    // uint32 sex = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Oauth2SignInResponse_UserInfo, _impl_.sex_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_.sex_)}},
    // string province = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_.province_)}},
    // string city = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_.city_)}},
    // string country = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_.country_)}},
    // optional string head_img_url = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 0, 0, PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_.head_img_url_)}},
    // repeated string privilege = 8;
    {::_pbi::TcParser::FastUR1,
     {66, 63, 0, PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_.privilege_)}},
    // string union_id = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_.union_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string open_id = 1;
    {PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_.open_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string nickname = 2;
    {PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_.nickname_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 sex = 3;
    {PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_.sex_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string province = 4;
    {PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_.province_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string city = 5;
    {PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_.city_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string country = 6;
    {PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_.country_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string head_img_url = 7;
    {PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_.head_img_url_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string privilege = 8;
    {PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_.privilege_), -1, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string union_id = 9;
    {PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse_UserInfo, _impl_.union_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\7\10\0\10\4\7\14\11\10\0\0\0\0\0\0"
    "palm.wechat.v1.Oauth2SignInResponse.UserInfo"
    "open_id"
    "nickname"
    "province"
    "city"
    "country"
    "head_img_url"
    "privilege"
    "union_id"
  }},
};

::uint8_t* Oauth2SignInResponse_UserInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.Oauth2SignInResponse.UserInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string open_id = 1;
  if (!this->_internal_open_id().empty()) {
    const std::string& _s = this->_internal_open_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.Oauth2SignInResponse.UserInfo.open_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    const std::string& _s = this->_internal_nickname();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.Oauth2SignInResponse.UserInfo.nickname");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // uint32 sex = 3;
  if (this->_internal_sex() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        3, this->_internal_sex(), target);
  }

  // string province = 4;
  if (!this->_internal_province().empty()) {
    const std::string& _s = this->_internal_province();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.Oauth2SignInResponse.UserInfo.province");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string city = 5;
  if (!this->_internal_city().empty()) {
    const std::string& _s = this->_internal_city();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.Oauth2SignInResponse.UserInfo.city");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string country = 6;
  if (!this->_internal_country().empty()) {
    const std::string& _s = this->_internal_country();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.Oauth2SignInResponse.UserInfo.country");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string head_img_url = 7;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_head_img_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.Oauth2SignInResponse.UserInfo.head_img_url");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // repeated string privilege = 8;
  for (int i = 0, n = this->_internal_privilege_size(); i < n; ++i) {
    const auto& s = this->_internal_privilege().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.Oauth2SignInResponse.UserInfo.privilege");
    target = stream->WriteString(8, s, target);
  }

  // string union_id = 9;
  if (!this->_internal_union_id().empty()) {
    const std::string& _s = this->_internal_union_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.Oauth2SignInResponse.UserInfo.union_id");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.Oauth2SignInResponse.UserInfo)
  return target;
}

::size_t Oauth2SignInResponse_UserInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.Oauth2SignInResponse.UserInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string privilege = 8;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_privilege().size());
  for (int i = 0, n = _internal_privilege().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_privilege().Get(i));
  }
  // string open_id = 1;
  if (!this->_internal_open_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_open_id());
  }

  // string nickname = 2;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_nickname());
  }

  // string province = 4;
  if (!this->_internal_province().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_province());
  }

  // string city = 5;
  if (!this->_internal_city().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_city());
  }

  // string country = 6;
  if (!this->_internal_country().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_country());
  }

  // optional string head_img_url = 7;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_head_img_url());
  }

  // string union_id = 9;
  if (!this->_internal_union_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_union_id());
  }

  // uint32 sex = 3;
  if (this->_internal_sex() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_sex());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Oauth2SignInResponse_UserInfo::_class_data_ = {
    Oauth2SignInResponse_UserInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Oauth2SignInResponse_UserInfo::GetClassData() const {
  return &_class_data_;
}

void Oauth2SignInResponse_UserInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Oauth2SignInResponse_UserInfo*>(&to_msg);
  auto& from = static_cast<const Oauth2SignInResponse_UserInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.Oauth2SignInResponse.UserInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_privilege()->MergeFrom(from._internal_privilege());
  if (!from._internal_open_id().empty()) {
    _this->_internal_set_open_id(from._internal_open_id());
  }
  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_province().empty()) {
    _this->_internal_set_province(from._internal_province());
  }
  if (!from._internal_city().empty()) {
    _this->_internal_set_city(from._internal_city());
  }
  if (!from._internal_country().empty()) {
    _this->_internal_set_country(from._internal_country());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_head_img_url(from._internal_head_img_url());
  }
  if (!from._internal_union_id().empty()) {
    _this->_internal_set_union_id(from._internal_union_id());
  }
  if (from._internal_sex() != 0) {
    _this->_internal_set_sex(from._internal_sex());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Oauth2SignInResponse_UserInfo::CopyFrom(const Oauth2SignInResponse_UserInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.Oauth2SignInResponse.UserInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Oauth2SignInResponse_UserInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Oauth2SignInResponse_UserInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Oauth2SignInResponse_UserInfo::InternalSwap(Oauth2SignInResponse_UserInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.privilege_.InternalSwap(&other->_impl_.privilege_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.open_id_, &other->_impl_.open_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nickname_, &other->_impl_.nickname_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.province_, &other->_impl_.province_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.city_, &other->_impl_.city_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.country_, &other->_impl_.country_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.head_img_url_, &other->_impl_.head_img_url_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.union_id_, &other->_impl_.union_id_, arena);
        swap(_impl_.sex_, other->_impl_.sex_);
}

::google::protobuf::Metadata Oauth2SignInResponse_UserInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[3]);
}
// ===================================================================

class Oauth2SignInResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<Oauth2SignInResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse, _impl_._has_bits_);
  static const ::palm::wechat::v1::Oauth2SignInResponse_UserInfo& user_info(const Oauth2SignInResponse* msg);
  static void set_has_user_info(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_subject(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::wechat::v1::Oauth2SignInResponse_UserInfo& Oauth2SignInResponse::_Internal::user_info(const Oauth2SignInResponse* msg) {
  return *msg->_impl_.user_info_;
}
Oauth2SignInResponse::Oauth2SignInResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.Oauth2SignInResponse)
}
inline PROTOBUF_NDEBUG_INLINE Oauth2SignInResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        token_(arena, from.token_),
        subject_(arena, from.subject_) {}

Oauth2SignInResponse::Oauth2SignInResponse(
    ::google::protobuf::Arena* arena,
    const Oauth2SignInResponse& from)
    : ::google::protobuf::Message(arena) {
  Oauth2SignInResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.user_info_ = (cached_has_bits & 0x00000002u)
                ? CreateMaybeMessage<::palm::wechat::v1::Oauth2SignInResponse_UserInfo>(arena, *from._impl_.user_info_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.Oauth2SignInResponse)
}
inline PROTOBUF_NDEBUG_INLINE Oauth2SignInResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        token_(arena),
        subject_(arena) {}

inline void Oauth2SignInResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.user_info_ = {};
}
Oauth2SignInResponse::~Oauth2SignInResponse() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.Oauth2SignInResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Oauth2SignInResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.token_.Destroy();
  _impl_.subject_.Destroy();
  delete _impl_.user_info_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void Oauth2SignInResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.Oauth2SignInResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.subject_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      ABSL_DCHECK(_impl_.user_info_ != nullptr);
      _impl_.user_info_->Clear();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* Oauth2SignInResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 3, 1, 51, 2> Oauth2SignInResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse, _impl_._has_bits_),
    0, // no _extensions_
    9, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967036,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_Oauth2SignInResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes token = 2;
    {::_pbi::TcParser::FastBS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse, _impl_.token_)}},
    // .palm.wechat.v1.Oauth2SignInResponse.UserInfo user_info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 1, 0, PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse, _impl_.user_info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .palm.wechat.v1.Oauth2SignInResponse.UserInfo user_info = 1;
    {PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse, _impl_.user_info_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // bytes token = 2;
    {PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse, _impl_.token_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // optional string subject = 9;
    {PROTOBUF_FIELD_OFFSET(Oauth2SignInResponse, _impl_.subject_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::wechat::v1::Oauth2SignInResponse_UserInfo>()},
  }}, {{
    "\43\0\0\7\0\0\0\0"
    "palm.wechat.v1.Oauth2SignInResponse"
    "subject"
  }},
};

::uint8_t* Oauth2SignInResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.Oauth2SignInResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.wechat.v1.Oauth2SignInResponse.UserInfo user_info = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::user_info(this),
        _Internal::user_info(this).GetCachedSize(), target, stream);
  }

  // bytes token = 2;
  if (!this->_internal_token().empty()) {
    const std::string& _s = this->_internal_token();
    target = stream->WriteBytesMaybeAliased(2, _s, target);
  }

  // optional string subject = 9;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_subject();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.Oauth2SignInResponse.subject");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.Oauth2SignInResponse)
  return target;
}

::size_t Oauth2SignInResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.Oauth2SignInResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes token = 2;
  if (!this->_internal_token().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_token());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string subject = 9;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_subject());
    }

    // .palm.wechat.v1.Oauth2SignInResponse.UserInfo user_info = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.user_info_);
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData Oauth2SignInResponse::_class_data_ = {
    Oauth2SignInResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* Oauth2SignInResponse::GetClassData() const {
  return &_class_data_;
}

void Oauth2SignInResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<Oauth2SignInResponse*>(&to_msg);
  auto& from = static_cast<const Oauth2SignInResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.Oauth2SignInResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_subject(from._internal_subject());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_mutable_user_info()->::palm::wechat::v1::Oauth2SignInResponse_UserInfo::MergeFrom(
          from._internal_user_info());
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Oauth2SignInResponse::CopyFrom(const Oauth2SignInResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.Oauth2SignInResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool Oauth2SignInResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* Oauth2SignInResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void Oauth2SignInResponse::InternalSwap(Oauth2SignInResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.token_, &other->_impl_.token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.subject_, &other->_impl_.subject_, arena);
  swap(_impl_.user_info_, other->_impl_.user_info_);
}

::google::protobuf::Metadata Oauth2SignInResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[4]);
}
// ===================================================================

class MiniProgramCode2SessionRequest::_Internal {
 public:
};

MiniProgramCode2SessionRequest::MiniProgramCode2SessionRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.MiniProgramCode2SessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE MiniProgramCode2SessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : code_(arena, from.code_),
        _cached_size_{0} {}

MiniProgramCode2SessionRequest::MiniProgramCode2SessionRequest(
    ::google::protobuf::Arena* arena,
    const MiniProgramCode2SessionRequest& from)
    : ::google::protobuf::Message(arena) {
  MiniProgramCode2SessionRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.MiniProgramCode2SessionRequest)
}
inline PROTOBUF_NDEBUG_INLINE MiniProgramCode2SessionRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : code_(arena),
        _cached_size_{0} {}

inline void MiniProgramCode2SessionRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MiniProgramCode2SessionRequest::~MiniProgramCode2SessionRequest() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.MiniProgramCode2SessionRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MiniProgramCode2SessionRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.code_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MiniProgramCode2SessionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.MiniProgramCode2SessionRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.code_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MiniProgramCode2SessionRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 58, 2> MiniProgramCode2SessionRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MiniProgramCode2SessionRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string code = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(MiniProgramCode2SessionRequest, _impl_.code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string code = 1;
    {PROTOBUF_FIELD_OFFSET(MiniProgramCode2SessionRequest, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\4\0\0\0\0\0\0"
    "palm.wechat.v1.MiniProgramCode2SessionRequest"
    "code"
  }},
};

::uint8_t* MiniProgramCode2SessionRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.MiniProgramCode2SessionRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string code = 1;
  if (!this->_internal_code().empty()) {
    const std::string& _s = this->_internal_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.MiniProgramCode2SessionRequest.code");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.MiniProgramCode2SessionRequest)
  return target;
}

::size_t MiniProgramCode2SessionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.MiniProgramCode2SessionRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string code = 1;
  if (!this->_internal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MiniProgramCode2SessionRequest::_class_data_ = {
    MiniProgramCode2SessionRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MiniProgramCode2SessionRequest::GetClassData() const {
  return &_class_data_;
}

void MiniProgramCode2SessionRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MiniProgramCode2SessionRequest*>(&to_msg);
  auto& from = static_cast<const MiniProgramCode2SessionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.MiniProgramCode2SessionRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MiniProgramCode2SessionRequest::CopyFrom(const MiniProgramCode2SessionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.MiniProgramCode2SessionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MiniProgramCode2SessionRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MiniProgramCode2SessionRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MiniProgramCode2SessionRequest::InternalSwap(MiniProgramCode2SessionRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, &other->_impl_.code_, arena);
}

::google::protobuf::Metadata MiniProgramCode2SessionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[5]);
}
// ===================================================================

class MiniProgramCode2SessionResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<MiniProgramCode2SessionResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(MiniProgramCode2SessionResponse, _impl_._has_bits_);
  static void set_has_union_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MiniProgramCode2SessionResponse::MiniProgramCode2SessionResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.MiniProgramCode2SessionResponse)
}
inline PROTOBUF_NDEBUG_INLINE MiniProgramCode2SessionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        union_id_(arena, from.union_id_),
        open_id_(arena, from.open_id_) {}

MiniProgramCode2SessionResponse::MiniProgramCode2SessionResponse(
    ::google::protobuf::Arena* arena,
    const MiniProgramCode2SessionResponse& from)
    : ::google::protobuf::Message(arena) {
  MiniProgramCode2SessionResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.MiniProgramCode2SessionResponse)
}
inline PROTOBUF_NDEBUG_INLINE MiniProgramCode2SessionResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        union_id_(arena),
        open_id_(arena) {}

inline void MiniProgramCode2SessionResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
MiniProgramCode2SessionResponse::~MiniProgramCode2SessionResponse() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.MiniProgramCode2SessionResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void MiniProgramCode2SessionResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.union_id_.Destroy();
  _impl_.open_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void MiniProgramCode2SessionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.MiniProgramCode2SessionResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.union_id_.ClearNonDefaultToEmpty();
  }
  _impl_.open_id_.ClearToEmpty();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* MiniProgramCode2SessionResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 70, 2> MiniProgramCode2SessionResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(MiniProgramCode2SessionResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_MiniProgramCode2SessionResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string open_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(MiniProgramCode2SessionResponse, _impl_.open_id_)}},
    // optional string union_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(MiniProgramCode2SessionResponse, _impl_.union_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string union_id = 1;
    {PROTOBUF_FIELD_OFFSET(MiniProgramCode2SessionResponse, _impl_.union_id_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string open_id = 2;
    {PROTOBUF_FIELD_OFFSET(MiniProgramCode2SessionResponse, _impl_.open_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\56\10\7\0\0\0\0\0"
    "palm.wechat.v1.MiniProgramCode2SessionResponse"
    "union_id"
    "open_id"
  }},
};

::uint8_t* MiniProgramCode2SessionResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.MiniProgramCode2SessionResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // optional string union_id = 1;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_union_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.MiniProgramCode2SessionResponse.union_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string open_id = 2;
  if (!this->_internal_open_id().empty()) {
    const std::string& _s = this->_internal_open_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.MiniProgramCode2SessionResponse.open_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.MiniProgramCode2SessionResponse)
  return target;
}

::size_t MiniProgramCode2SessionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.MiniProgramCode2SessionResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string union_id = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_union_id());
  }

  // string open_id = 2;
  if (!this->_internal_open_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_open_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData MiniProgramCode2SessionResponse::_class_data_ = {
    MiniProgramCode2SessionResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* MiniProgramCode2SessionResponse::GetClassData() const {
  return &_class_data_;
}

void MiniProgramCode2SessionResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<MiniProgramCode2SessionResponse*>(&to_msg);
  auto& from = static_cast<const MiniProgramCode2SessionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.MiniProgramCode2SessionResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_union_id(from._internal_union_id());
  }
  if (!from._internal_open_id().empty()) {
    _this->_internal_set_open_id(from._internal_open_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void MiniProgramCode2SessionResponse::CopyFrom(const MiniProgramCode2SessionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.MiniProgramCode2SessionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool MiniProgramCode2SessionResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* MiniProgramCode2SessionResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void MiniProgramCode2SessionResponse::InternalSwap(MiniProgramCode2SessionResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.union_id_, &other->_impl_.union_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.open_id_, &other->_impl_.open_id_, arena);
}

::google::protobuf::Metadata MiniProgramCode2SessionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[6]);
}
// ===================================================================

class PayPrepayRequest_Amount::_Internal {
 public:
};

PayPrepayRequest_Amount::PayPrepayRequest_Amount(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayPrepayRequest.Amount)
}
PayPrepayRequest_Amount::PayPrepayRequest_Amount(
    ::google::protobuf::Arena* arena, const PayPrepayRequest_Amount& from)
    : PayPrepayRequest_Amount(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PayPrepayRequest_Amount::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PayPrepayRequest_Amount::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_),
           0,
           offsetof(Impl_, currency_) -
               offsetof(Impl_, total_) +
               sizeof(Impl_::currency_));
}
PayPrepayRequest_Amount::~PayPrepayRequest_Amount() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayPrepayRequest.Amount)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayPrepayRequest_Amount::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayPrepayRequest_Amount::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayPrepayRequest.Amount)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.total_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.currency_) -
      reinterpret_cast<char*>(&_impl_.total_)) + sizeof(_impl_.currency_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayPrepayRequest_Amount::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2> PayPrepayRequest_Amount::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayPrepayRequest_Amount_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .palm.wechat.v1.PayCurrency currency = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PayPrepayRequest_Amount, _impl_.currency_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PayPrepayRequest_Amount, _impl_.currency_)}},
    // int32 total = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PayPrepayRequest_Amount, _impl_.total_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PayPrepayRequest_Amount, _impl_.total_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 total = 1;
    {PROTOBUF_FIELD_OFFSET(PayPrepayRequest_Amount, _impl_.total_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .palm.wechat.v1.PayCurrency currency = 2;
    {PROTOBUF_FIELD_OFFSET(PayPrepayRequest_Amount, _impl_.currency_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PayPrepayRequest_Amount::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayPrepayRequest.Amount)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 total = 1;
  if (this->_internal_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_total(), target);
  }

  // .palm.wechat.v1.PayCurrency currency = 2;
  if (this->_internal_currency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_currency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayPrepayRequest.Amount)
  return target;
}

::size_t PayPrepayRequest_Amount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayPrepayRequest.Amount)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 total = 1;
  if (this->_internal_total() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total());
  }

  // .palm.wechat.v1.PayCurrency currency = 2;
  if (this->_internal_currency() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_currency());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayPrepayRequest_Amount::_class_data_ = {
    PayPrepayRequest_Amount::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayPrepayRequest_Amount::GetClassData() const {
  return &_class_data_;
}

void PayPrepayRequest_Amount::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayPrepayRequest_Amount*>(&to_msg);
  auto& from = static_cast<const PayPrepayRequest_Amount&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayPrepayRequest.Amount)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_total() != 0) {
    _this->_internal_set_total(from._internal_total());
  }
  if (from._internal_currency() != 0) {
    _this->_internal_set_currency(from._internal_currency());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayPrepayRequest_Amount::CopyFrom(const PayPrepayRequest_Amount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayPrepayRequest.Amount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayPrepayRequest_Amount::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayPrepayRequest_Amount::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayPrepayRequest_Amount::InternalSwap(PayPrepayRequest_Amount* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PayPrepayRequest_Amount, _impl_.currency_)
      + sizeof(PayPrepayRequest_Amount::_impl_.currency_)
      - PROTOBUF_FIELD_OFFSET(PayPrepayRequest_Amount, _impl_.total_)>(
          reinterpret_cast<char*>(&_impl_.total_),
          reinterpret_cast<char*>(&other->_impl_.total_));
}

::google::protobuf::Metadata PayPrepayRequest_Amount::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[7]);
}
// ===================================================================

class PayPrepayRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PayPrepayRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PayPrepayRequest, _impl_._has_bits_);
  static void set_has_out_trade_no(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_payer_open_id(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::palm::wechat::v1::PayPrepayRequest_Amount& amount(const PayPrepayRequest* msg);
  static void set_has_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::palm::wechat::v1::PayPrepayRequest_Amount& PayPrepayRequest::_Internal::amount(const PayPrepayRequest* msg) {
  return *msg->_impl_.amount_;
}
PayPrepayRequest::PayPrepayRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayPrepayRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayPrepayRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        app_id_(arena, from.app_id_),
        out_trade_no_(arena, from.out_trade_no_),
        payer_open_id_(arena, from.payer_open_id_),
        description_(arena, from.description_),
        notify_host_(arena, from.notify_host_) {}

PayPrepayRequest::PayPrepayRequest(
    ::google::protobuf::Arena* arena,
    const PayPrepayRequest& from)
    : ::google::protobuf::Message(arena) {
  PayPrepayRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.amount_ = (cached_has_bits & 0x00000004u)
                ? CreateMaybeMessage<::palm::wechat::v1::PayPrepayRequest_Amount>(arena, *from._impl_.amount_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayPrepayRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayPrepayRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        app_id_(arena),
        out_trade_no_(arena),
        payer_open_id_(arena),
        description_(arena),
        notify_host_(arena) {}

inline void PayPrepayRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.amount_ = {};
}
PayPrepayRequest::~PayPrepayRequest() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayPrepayRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayPrepayRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.app_id_.Destroy();
  _impl_.out_trade_no_.Destroy();
  _impl_.payer_open_id_.Destroy();
  _impl_.description_.Destroy();
  _impl_.notify_host_.Destroy();
  delete _impl_.amount_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayPrepayRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayPrepayRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.app_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.out_trade_no_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.payer_open_id_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.description_.ClearToEmpty();
  _impl_.notify_host_.ClearToEmpty();
  if (cached_has_bits & 0x00000004u) {
    ABSL_DCHECK(_impl_.amount_ != nullptr);
    _impl_.amount_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayPrepayRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 6, 1, 93, 7> PayPrepayRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PayPrepayRequest, _impl_._has_bits_),
    0, // no _extensions_
    99, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294964220,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PayPrepayRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .palm.wechat.v1.PayPrepayRequest.Amount amount = 12;
    {::_pbi::TcParser::FastMtS1,
     {98, 2, 0, PROTOBUF_FIELD_OFFSET(PayPrepayRequest, _impl_.amount_)}},
    // string app_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayPrepayRequest, _impl_.app_id_)}},
    // optional string out_trade_no = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(PayPrepayRequest, _impl_.out_trade_no_)}},
    // optional string payer_open_id = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 1, 0, PROTOBUF_FIELD_OFFSET(PayPrepayRequest, _impl_.payer_open_id_)}},
  }}, {{
    98, 0, 1,
    65532, 4,
    65535, 65535
  }}, {{
    // string app_id = 1;
    {PROTOBUF_FIELD_OFFSET(PayPrepayRequest, _impl_.app_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string out_trade_no = 2;
    {PROTOBUF_FIELD_OFFSET(PayPrepayRequest, _impl_.out_trade_no_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string payer_open_id = 11;
    {PROTOBUF_FIELD_OFFSET(PayPrepayRequest, _impl_.payer_open_id_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .palm.wechat.v1.PayPrepayRequest.Amount amount = 12;
    {PROTOBUF_FIELD_OFFSET(PayPrepayRequest, _impl_.amount_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string description = 98;
    {PROTOBUF_FIELD_OFFSET(PayPrepayRequest, _impl_.description_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string notify_host = 99;
    {PROTOBUF_FIELD_OFFSET(PayPrepayRequest, _impl_.notify_host_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::wechat::v1::PayPrepayRequest_Amount>()},
  }}, {{
    "\37\6\14\15\0\13\13\0"
    "palm.wechat.v1.PayPrepayRequest"
    "app_id"
    "out_trade_no"
    "payer_open_id"
    "description"
    "notify_host"
  }},
};

::uint8_t* PayPrepayRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayPrepayRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayPrepayRequest.app_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string out_trade_no = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_out_trade_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayPrepayRequest.out_trade_no");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string payer_open_id = 11;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_payer_open_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayPrepayRequest.payer_open_id");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // .palm.wechat.v1.PayPrepayRequest.Amount amount = 12;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        12, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  // string description = 98;
  if (!this->_internal_description().empty()) {
    const std::string& _s = this->_internal_description();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayPrepayRequest.description");
    target = stream->WriteStringMaybeAliased(98, _s, target);
  }

  // string notify_host = 99;
  if (!this->_internal_notify_host().empty()) {
    const std::string& _s = this->_internal_notify_host();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayPrepayRequest.notify_host");
    target = stream->WriteStringMaybeAliased(99, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayPrepayRequest)
  return target;
}

::size_t PayPrepayRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayPrepayRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string out_trade_no = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_out_trade_no());
    }

    // optional string payer_open_id = 11;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_payer_open_id());
    }

  }
  // string description = 98;
  if (!this->_internal_description().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_description());
  }

  // string notify_host = 99;
  if (!this->_internal_notify_host().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_notify_host());
  }

  // .palm.wechat.v1.PayPrepayRequest.Amount amount = 12;
  if (cached_has_bits & 0x00000004u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayPrepayRequest::_class_data_ = {
    PayPrepayRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayPrepayRequest::GetClassData() const {
  return &_class_data_;
}

void PayPrepayRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayPrepayRequest*>(&to_msg);
  auto& from = static_cast<const PayPrepayRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayPrepayRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_out_trade_no(from._internal_out_trade_no());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_payer_open_id(from._internal_payer_open_id());
    }
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_notify_host().empty()) {
    _this->_internal_set_notify_host(from._internal_notify_host());
  }
  if (cached_has_bits & 0x00000004u) {
    _this->_internal_mutable_amount()->::palm::wechat::v1::PayPrepayRequest_Amount::MergeFrom(
        from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayPrepayRequest::CopyFrom(const PayPrepayRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayPrepayRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayPrepayRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayPrepayRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayPrepayRequest::InternalSwap(PayPrepayRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, &other->_impl_.app_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_trade_no_, &other->_impl_.out_trade_no_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payer_open_id_, &other->_impl_.payer_open_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.description_, &other->_impl_.description_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.notify_host_, &other->_impl_.notify_host_, arena);
  swap(_impl_.amount_, other->_impl_.amount_);
}

::google::protobuf::Metadata PayPrepayRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[8]);
}
// ===================================================================

class PayCloseOrderRequest::_Internal {
 public:
};

PayCloseOrderRequest::PayCloseOrderRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayCloseOrderRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayCloseOrderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : out_trade_no_(arena, from.out_trade_no_),
        reason_(arena, from.reason_),
        _cached_size_{0} {}

PayCloseOrderRequest::PayCloseOrderRequest(
    ::google::protobuf::Arena* arena,
    const PayCloseOrderRequest& from)
    : ::google::protobuf::Message(arena) {
  PayCloseOrderRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayCloseOrderRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayCloseOrderRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : out_trade_no_(arena),
        reason_(arena),
        _cached_size_{0} {}

inline void PayCloseOrderRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PayCloseOrderRequest::~PayCloseOrderRequest() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayCloseOrderRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayCloseOrderRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.out_trade_no_.Destroy();
  _impl_.reason_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayCloseOrderRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayCloseOrderRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.out_trade_no_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayCloseOrderRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2> PayCloseOrderRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayCloseOrderRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string reason = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PayCloseOrderRequest, _impl_.reason_)}},
    // string out_trade_no = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayCloseOrderRequest, _impl_.out_trade_no_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string out_trade_no = 1;
    {PROTOBUF_FIELD_OFFSET(PayCloseOrderRequest, _impl_.out_trade_no_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reason = 2;
    {PROTOBUF_FIELD_OFFSET(PayCloseOrderRequest, _impl_.reason_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\43\14\6\0\0\0\0\0"
    "palm.wechat.v1.PayCloseOrderRequest"
    "out_trade_no"
    "reason"
  }},
};

::uint8_t* PayCloseOrderRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayCloseOrderRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string out_trade_no = 1;
  if (!this->_internal_out_trade_no().empty()) {
    const std::string& _s = this->_internal_out_trade_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayCloseOrderRequest.out_trade_no");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string reason = 2;
  if (!this->_internal_reason().empty()) {
    const std::string& _s = this->_internal_reason();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayCloseOrderRequest.reason");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayCloseOrderRequest)
  return target;
}

::size_t PayCloseOrderRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayCloseOrderRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string out_trade_no = 1;
  if (!this->_internal_out_trade_no().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_trade_no());
  }

  // string reason = 2;
  if (!this->_internal_reason().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_reason());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayCloseOrderRequest::_class_data_ = {
    PayCloseOrderRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayCloseOrderRequest::GetClassData() const {
  return &_class_data_;
}

void PayCloseOrderRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayCloseOrderRequest*>(&to_msg);
  auto& from = static_cast<const PayCloseOrderRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayCloseOrderRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_out_trade_no().empty()) {
    _this->_internal_set_out_trade_no(from._internal_out_trade_no());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayCloseOrderRequest::CopyFrom(const PayCloseOrderRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayCloseOrderRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayCloseOrderRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayCloseOrderRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayCloseOrderRequest::InternalSwap(PayCloseOrderRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_trade_no_, &other->_impl_.out_trade_no_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
}

::google::protobuf::Metadata PayCloseOrderRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[9]);
}
// ===================================================================

class PayError::_Internal {
 public:
};

PayError::PayError(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayError)
}
inline PROTOBUF_NDEBUG_INLINE PayError::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : code_(arena, from.code_),
        message_(arena, from.message_),
        _cached_size_{0} {}

PayError::PayError(
    ::google::protobuf::Arena* arena,
    const PayError& from)
    : ::google::protobuf::Message(arena) {
  PayError* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayError)
}
inline PROTOBUF_NDEBUG_INLINE PayError::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : code_(arena),
        message_(arena),
        _cached_size_{0} {}

inline void PayError::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PayError::~PayError() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayError)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayError::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.code_.Destroy();
  _impl_.message_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayError::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayError)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.code_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayError::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 43, 2> PayError::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayError_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PayError, _impl_.message_)}},
    // string code = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayError, _impl_.code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string code = 1;
    {PROTOBUF_FIELD_OFFSET(PayError, _impl_.code_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(PayError, _impl_.message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\27\4\7\0\0\0\0\0"
    "palm.wechat.v1.PayError"
    "code"
    "message"
  }},
};

::uint8_t* PayError::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayError)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string code = 1;
  if (!this->_internal_code().empty()) {
    const std::string& _s = this->_internal_code();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayError.code");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    const std::string& _s = this->_internal_message();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayError.message");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayError)
  return target;
}

::size_t PayError::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayError)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string code = 1;
  if (!this->_internal_code().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_code());
  }

  // string message = 2;
  if (!this->_internal_message().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayError::_class_data_ = {
    PayError::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayError::GetClassData() const {
  return &_class_data_;
}

void PayError::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayError*>(&to_msg);
  auto& from = static_cast<const PayError&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayError)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayError::CopyFrom(const PayError& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayError)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayError::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayError::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayError::InternalSwap(PayError* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.code_, &other->_impl_.code_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
}

::google::protobuf::Metadata PayError::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[10]);
}
// ===================================================================

class PayNativeQrCodeUrlResponse::_Internal {
 public:
};

PayNativeQrCodeUrlResponse::PayNativeQrCodeUrlResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayNativeQrCodeUrlResponse)
}
inline PROTOBUF_NDEBUG_INLINE PayNativeQrCodeUrlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : url_(arena, from.url_),
        out_trade_no_(arena, from.out_trade_no_),
        _cached_size_{0} {}

PayNativeQrCodeUrlResponse::PayNativeQrCodeUrlResponse(
    ::google::protobuf::Arena* arena,
    const PayNativeQrCodeUrlResponse& from)
    : ::google::protobuf::Message(arena) {
  PayNativeQrCodeUrlResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayNativeQrCodeUrlResponse)
}
inline PROTOBUF_NDEBUG_INLINE PayNativeQrCodeUrlResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : url_(arena),
        out_trade_no_(arena),
        _cached_size_{0} {}

inline void PayNativeQrCodeUrlResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PayNativeQrCodeUrlResponse::~PayNativeQrCodeUrlResponse() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayNativeQrCodeUrlResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayNativeQrCodeUrlResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.url_.Destroy();
  _impl_.out_trade_no_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayNativeQrCodeUrlResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayNativeQrCodeUrlResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_.ClearToEmpty();
  _impl_.out_trade_no_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayNativeQrCodeUrlResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 65, 2> PayNativeQrCodeUrlResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayNativeQrCodeUrlResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string out_trade_no = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PayNativeQrCodeUrlResponse, _impl_.out_trade_no_)}},
    // string url = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayNativeQrCodeUrlResponse, _impl_.url_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string url = 1;
    {PROTOBUF_FIELD_OFFSET(PayNativeQrCodeUrlResponse, _impl_.url_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string out_trade_no = 2;
    {PROTOBUF_FIELD_OFFSET(PayNativeQrCodeUrlResponse, _impl_.out_trade_no_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\51\3\14\0\0\0\0\0"
    "palm.wechat.v1.PayNativeQrCodeUrlResponse"
    "url"
    "out_trade_no"
  }},
};

::uint8_t* PayNativeQrCodeUrlResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayNativeQrCodeUrlResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    const std::string& _s = this->_internal_url();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayNativeQrCodeUrlResponse.url");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string out_trade_no = 2;
  if (!this->_internal_out_trade_no().empty()) {
    const std::string& _s = this->_internal_out_trade_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayNativeQrCodeUrlResponse.out_trade_no");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayNativeQrCodeUrlResponse)
  return target;
}

::size_t PayNativeQrCodeUrlResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayNativeQrCodeUrlResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_url());
  }

  // string out_trade_no = 2;
  if (!this->_internal_out_trade_no().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_trade_no());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayNativeQrCodeUrlResponse::_class_data_ = {
    PayNativeQrCodeUrlResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayNativeQrCodeUrlResponse::GetClassData() const {
  return &_class_data_;
}

void PayNativeQrCodeUrlResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayNativeQrCodeUrlResponse*>(&to_msg);
  auto& from = static_cast<const PayNativeQrCodeUrlResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayNativeQrCodeUrlResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  if (!from._internal_out_trade_no().empty()) {
    _this->_internal_set_out_trade_no(from._internal_out_trade_no());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayNativeQrCodeUrlResponse::CopyFrom(const PayNativeQrCodeUrlResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayNativeQrCodeUrlResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayNativeQrCodeUrlResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayNativeQrCodeUrlResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayNativeQrCodeUrlResponse::InternalSwap(PayNativeQrCodeUrlResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.url_, &other->_impl_.url_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_trade_no_, &other->_impl_.out_trade_no_, arena);
}

::google::protobuf::Metadata PayNativeQrCodeUrlResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[11]);
}
// ===================================================================

class PayTradeResponse::_Internal {
 public:
};

PayTradeResponse::PayTradeResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayTradeResponse)
}
inline PROTOBUF_NDEBUG_INLINE PayTradeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : trade_state_(arena, from.trade_state_),
        trade_state_desc_(arena, from.trade_state_desc_),
        _cached_size_{0} {}

PayTradeResponse::PayTradeResponse(
    ::google::protobuf::Arena* arena,
    const PayTradeResponse& from)
    : ::google::protobuf::Message(arena) {
  PayTradeResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayTradeResponse)
}
inline PROTOBUF_NDEBUG_INLINE PayTradeResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : trade_state_(arena),
        trade_state_desc_(arena),
        _cached_size_{0} {}

inline void PayTradeResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PayTradeResponse::~PayTradeResponse() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayTradeResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayTradeResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.trade_state_.Destroy();
  _impl_.trade_state_desc_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayTradeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayTradeResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trade_state_.ClearToEmpty();
  _impl_.trade_state_desc_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayTradeResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 67, 2> PayTradeResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayTradeResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string trade_state_desc = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PayTradeResponse, _impl_.trade_state_desc_)}},
    // string trade_state = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayTradeResponse, _impl_.trade_state_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string trade_state = 1;
    {PROTOBUF_FIELD_OFFSET(PayTradeResponse, _impl_.trade_state_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string trade_state_desc = 2;
    {PROTOBUF_FIELD_OFFSET(PayTradeResponse, _impl_.trade_state_desc_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\13\20\0\0\0\0\0"
    "palm.wechat.v1.PayTradeResponse"
    "trade_state"
    "trade_state_desc"
  }},
};

::uint8_t* PayTradeResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayTradeResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string trade_state = 1;
  if (!this->_internal_trade_state().empty()) {
    const std::string& _s = this->_internal_trade_state();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayTradeResponse.trade_state");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string trade_state_desc = 2;
  if (!this->_internal_trade_state_desc().empty()) {
    const std::string& _s = this->_internal_trade_state_desc();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayTradeResponse.trade_state_desc");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayTradeResponse)
  return target;
}

::size_t PayTradeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayTradeResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string trade_state = 1;
  if (!this->_internal_trade_state().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_trade_state());
  }

  // string trade_state_desc = 2;
  if (!this->_internal_trade_state_desc().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_trade_state_desc());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayTradeResponse::_class_data_ = {
    PayTradeResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayTradeResponse::GetClassData() const {
  return &_class_data_;
}

void PayTradeResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayTradeResponse*>(&to_msg);
  auto& from = static_cast<const PayTradeResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayTradeResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_trade_state().empty()) {
    _this->_internal_set_trade_state(from._internal_trade_state());
  }
  if (!from._internal_trade_state_desc().empty()) {
    _this->_internal_set_trade_state_desc(from._internal_trade_state_desc());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayTradeResponse::CopyFrom(const PayTradeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayTradeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayTradeResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayTradeResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayTradeResponse::InternalSwap(PayTradeResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trade_state_, &other->_impl_.trade_state_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.trade_state_desc_, &other->_impl_.trade_state_desc_, arena);
}

::google::protobuf::Metadata PayTradeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[12]);
}
// ===================================================================

class PayQueryOrderByIdRequest::_Internal {
 public:
};

PayQueryOrderByIdRequest::PayQueryOrderByIdRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayQueryOrderByIdRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayQueryOrderByIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : transaction_id_(arena, from.transaction_id_),
        _cached_size_{0} {}

PayQueryOrderByIdRequest::PayQueryOrderByIdRequest(
    ::google::protobuf::Arena* arena,
    const PayQueryOrderByIdRequest& from)
    : ::google::protobuf::Message(arena) {
  PayQueryOrderByIdRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayQueryOrderByIdRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayQueryOrderByIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : transaction_id_(arena),
        _cached_size_{0} {}

inline void PayQueryOrderByIdRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PayQueryOrderByIdRequest::~PayQueryOrderByIdRequest() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayQueryOrderByIdRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayQueryOrderByIdRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.transaction_id_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayQueryOrderByIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayQueryOrderByIdRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.transaction_id_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayQueryOrderByIdRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 62, 2> PayQueryOrderByIdRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayQueryOrderByIdRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string transaction_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryOrderByIdRequest, _impl_.transaction_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string transaction_id = 1;
    {PROTOBUF_FIELD_OFFSET(PayQueryOrderByIdRequest, _impl_.transaction_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\16\0\0\0\0\0\0"
    "palm.wechat.v1.PayQueryOrderByIdRequest"
    "transaction_id"
  }},
};

::uint8_t* PayQueryOrderByIdRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayQueryOrderByIdRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string transaction_id = 1;
  if (!this->_internal_transaction_id().empty()) {
    const std::string& _s = this->_internal_transaction_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryOrderByIdRequest.transaction_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayQueryOrderByIdRequest)
  return target;
}

::size_t PayQueryOrderByIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayQueryOrderByIdRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string transaction_id = 1;
  if (!this->_internal_transaction_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_transaction_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayQueryOrderByIdRequest::_class_data_ = {
    PayQueryOrderByIdRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayQueryOrderByIdRequest::GetClassData() const {
  return &_class_data_;
}

void PayQueryOrderByIdRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayQueryOrderByIdRequest*>(&to_msg);
  auto& from = static_cast<const PayQueryOrderByIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayQueryOrderByIdRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_transaction_id().empty()) {
    _this->_internal_set_transaction_id(from._internal_transaction_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayQueryOrderByIdRequest::CopyFrom(const PayQueryOrderByIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayQueryOrderByIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayQueryOrderByIdRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayQueryOrderByIdRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayQueryOrderByIdRequest::InternalSwap(PayQueryOrderByIdRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transaction_id_, &other->_impl_.transaction_id_, arena);
}

::google::protobuf::Metadata PayQueryOrderByIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[13]);
}
// ===================================================================

class PayQueryOrderByOutTradeNoRequest::_Internal {
 public:
};

PayQueryOrderByOutTradeNoRequest::PayQueryOrderByOutTradeNoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayQueryOrderByOutTradeNoRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayQueryOrderByOutTradeNoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : out_trade_no_(arena, from.out_trade_no_),
        _cached_size_{0} {}

PayQueryOrderByOutTradeNoRequest::PayQueryOrderByOutTradeNoRequest(
    ::google::protobuf::Arena* arena,
    const PayQueryOrderByOutTradeNoRequest& from)
    : ::google::protobuf::Message(arena) {
  PayQueryOrderByOutTradeNoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayQueryOrderByOutTradeNoRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayQueryOrderByOutTradeNoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : out_trade_no_(arena),
        _cached_size_{0} {}

inline void PayQueryOrderByOutTradeNoRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PayQueryOrderByOutTradeNoRequest::~PayQueryOrderByOutTradeNoRequest() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayQueryOrderByOutTradeNoRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayQueryOrderByOutTradeNoRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.out_trade_no_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayQueryOrderByOutTradeNoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayQueryOrderByOutTradeNoRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.out_trade_no_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayQueryOrderByOutTradeNoRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 68, 2> PayQueryOrderByOutTradeNoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayQueryOrderByOutTradeNoRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string out_trade_no = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryOrderByOutTradeNoRequest, _impl_.out_trade_no_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string out_trade_no = 1;
    {PROTOBUF_FIELD_OFFSET(PayQueryOrderByOutTradeNoRequest, _impl_.out_trade_no_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\14\0\0\0\0\0\0"
    "palm.wechat.v1.PayQueryOrderByOutTradeNoRequest"
    "out_trade_no"
  }},
};

::uint8_t* PayQueryOrderByOutTradeNoRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayQueryOrderByOutTradeNoRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string out_trade_no = 1;
  if (!this->_internal_out_trade_no().empty()) {
    const std::string& _s = this->_internal_out_trade_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryOrderByOutTradeNoRequest.out_trade_no");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayQueryOrderByOutTradeNoRequest)
  return target;
}

::size_t PayQueryOrderByOutTradeNoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayQueryOrderByOutTradeNoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string out_trade_no = 1;
  if (!this->_internal_out_trade_no().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_trade_no());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayQueryOrderByOutTradeNoRequest::_class_data_ = {
    PayQueryOrderByOutTradeNoRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayQueryOrderByOutTradeNoRequest::GetClassData() const {
  return &_class_data_;
}

void PayQueryOrderByOutTradeNoRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayQueryOrderByOutTradeNoRequest*>(&to_msg);
  auto& from = static_cast<const PayQueryOrderByOutTradeNoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayQueryOrderByOutTradeNoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_out_trade_no().empty()) {
    _this->_internal_set_out_trade_no(from._internal_out_trade_no());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayQueryOrderByOutTradeNoRequest::CopyFrom(const PayQueryOrderByOutTradeNoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayQueryOrderByOutTradeNoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayQueryOrderByOutTradeNoRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayQueryOrderByOutTradeNoRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayQueryOrderByOutTradeNoRequest::InternalSwap(PayQueryOrderByOutTradeNoRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_trade_no_, &other->_impl_.out_trade_no_, arena);
}

::google::protobuf::Metadata PayQueryOrderByOutTradeNoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[14]);
}
// ===================================================================

class PayJsapiPrepayIdResponse::_Internal {
 public:
};

PayJsapiPrepayIdResponse::PayJsapiPrepayIdResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayJsapiPrepayIdResponse)
}
inline PROTOBUF_NDEBUG_INLINE PayJsapiPrepayIdResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : app_id_(arena, from.app_id_),
        time_stamp_(arena, from.time_stamp_),
        nonce_str_(arena, from.nonce_str_),
        package_(arena, from.package_),
        sign_type_(arena, from.sign_type_),
        pay_sign_(arena, from.pay_sign_),
        out_trade_no_(arena, from.out_trade_no_),
        _cached_size_{0} {}

PayJsapiPrepayIdResponse::PayJsapiPrepayIdResponse(
    ::google::protobuf::Arena* arena,
    const PayJsapiPrepayIdResponse& from)
    : ::google::protobuf::Message(arena) {
  PayJsapiPrepayIdResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayJsapiPrepayIdResponse)
}
inline PROTOBUF_NDEBUG_INLINE PayJsapiPrepayIdResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : app_id_(arena),
        time_stamp_(arena),
        nonce_str_(arena),
        package_(arena),
        sign_type_(arena),
        pay_sign_(arena),
        out_trade_no_(arena),
        _cached_size_{0} {}

inline void PayJsapiPrepayIdResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PayJsapiPrepayIdResponse::~PayJsapiPrepayIdResponse() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayJsapiPrepayIdResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayJsapiPrepayIdResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.app_id_.Destroy();
  _impl_.time_stamp_.Destroy();
  _impl_.nonce_str_.Destroy();
  _impl_.package_.Destroy();
  _impl_.sign_type_.Destroy();
  _impl_.pay_sign_.Destroy();
  _impl_.out_trade_no_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayJsapiPrepayIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayJsapiPrepayIdResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.app_id_.ClearToEmpty();
  _impl_.time_stamp_.ClearToEmpty();
  _impl_.nonce_str_.ClearToEmpty();
  _impl_.package_.ClearToEmpty();
  _impl_.sign_type_.ClearToEmpty();
  _impl_.pay_sign_.ClearToEmpty();
  _impl_.out_trade_no_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayJsapiPrepayIdResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 109, 2> PayJsapiPrepayIdResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    11, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966208,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayJsapiPrepayIdResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string app_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayJsapiPrepayIdResponse, _impl_.app_id_)}},
    // string time_stamp = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PayJsapiPrepayIdResponse, _impl_.time_stamp_)}},
    // string nonce_str = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PayJsapiPrepayIdResponse, _impl_.nonce_str_)}},
    // string package = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PayJsapiPrepayIdResponse, _impl_.package_)}},
    // string sign_type = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(PayJsapiPrepayIdResponse, _impl_.sign_type_)}},
    // string pay_sign = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(PayJsapiPrepayIdResponse, _impl_.pay_sign_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string app_id = 1;
    {PROTOBUF_FIELD_OFFSET(PayJsapiPrepayIdResponse, _impl_.app_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string time_stamp = 2;
    {PROTOBUF_FIELD_OFFSET(PayJsapiPrepayIdResponse, _impl_.time_stamp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string nonce_str = 3;
    {PROTOBUF_FIELD_OFFSET(PayJsapiPrepayIdResponse, _impl_.nonce_str_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string package = 4;
    {PROTOBUF_FIELD_OFFSET(PayJsapiPrepayIdResponse, _impl_.package_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sign_type = 5;
    {PROTOBUF_FIELD_OFFSET(PayJsapiPrepayIdResponse, _impl_.sign_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string pay_sign = 6;
    {PROTOBUF_FIELD_OFFSET(PayJsapiPrepayIdResponse, _impl_.pay_sign_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string out_trade_no = 11;
    {PROTOBUF_FIELD_OFFSET(PayJsapiPrepayIdResponse, _impl_.out_trade_no_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\47\6\12\11\7\11\10\14"
    "palm.wechat.v1.PayJsapiPrepayIdResponse"
    "app_id"
    "time_stamp"
    "nonce_str"
    "package"
    "sign_type"
    "pay_sign"
    "out_trade_no"
  }},
};

::uint8_t* PayJsapiPrepayIdResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayJsapiPrepayIdResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayJsapiPrepayIdResponse.app_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string time_stamp = 2;
  if (!this->_internal_time_stamp().empty()) {
    const std::string& _s = this->_internal_time_stamp();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayJsapiPrepayIdResponse.time_stamp");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string nonce_str = 3;
  if (!this->_internal_nonce_str().empty()) {
    const std::string& _s = this->_internal_nonce_str();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayJsapiPrepayIdResponse.nonce_str");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string package = 4;
  if (!this->_internal_package().empty()) {
    const std::string& _s = this->_internal_package();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayJsapiPrepayIdResponse.package");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string sign_type = 5;
  if (!this->_internal_sign_type().empty()) {
    const std::string& _s = this->_internal_sign_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayJsapiPrepayIdResponse.sign_type");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string pay_sign = 6;
  if (!this->_internal_pay_sign().empty()) {
    const std::string& _s = this->_internal_pay_sign();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayJsapiPrepayIdResponse.pay_sign");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // string out_trade_no = 11;
  if (!this->_internal_out_trade_no().empty()) {
    const std::string& _s = this->_internal_out_trade_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayJsapiPrepayIdResponse.out_trade_no");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayJsapiPrepayIdResponse)
  return target;
}

::size_t PayJsapiPrepayIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayJsapiPrepayIdResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  // string time_stamp = 2;
  if (!this->_internal_time_stamp().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_time_stamp());
  }

  // string nonce_str = 3;
  if (!this->_internal_nonce_str().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_nonce_str());
  }

  // string package = 4;
  if (!this->_internal_package().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_package());
  }

  // string sign_type = 5;
  if (!this->_internal_sign_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_sign_type());
  }

  // string pay_sign = 6;
  if (!this->_internal_pay_sign().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_pay_sign());
  }

  // string out_trade_no = 11;
  if (!this->_internal_out_trade_no().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_trade_no());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayJsapiPrepayIdResponse::_class_data_ = {
    PayJsapiPrepayIdResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayJsapiPrepayIdResponse::GetClassData() const {
  return &_class_data_;
}

void PayJsapiPrepayIdResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayJsapiPrepayIdResponse*>(&to_msg);
  auto& from = static_cast<const PayJsapiPrepayIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayJsapiPrepayIdResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_time_stamp().empty()) {
    _this->_internal_set_time_stamp(from._internal_time_stamp());
  }
  if (!from._internal_nonce_str().empty()) {
    _this->_internal_set_nonce_str(from._internal_nonce_str());
  }
  if (!from._internal_package().empty()) {
    _this->_internal_set_package(from._internal_package());
  }
  if (!from._internal_sign_type().empty()) {
    _this->_internal_set_sign_type(from._internal_sign_type());
  }
  if (!from._internal_pay_sign().empty()) {
    _this->_internal_set_pay_sign(from._internal_pay_sign());
  }
  if (!from._internal_out_trade_no().empty()) {
    _this->_internal_set_out_trade_no(from._internal_out_trade_no());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayJsapiPrepayIdResponse::CopyFrom(const PayJsapiPrepayIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayJsapiPrepayIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayJsapiPrepayIdResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayJsapiPrepayIdResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayJsapiPrepayIdResponse::InternalSwap(PayJsapiPrepayIdResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, &other->_impl_.app_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.time_stamp_, &other->_impl_.time_stamp_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nonce_str_, &other->_impl_.nonce_str_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.package_, &other->_impl_.package_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sign_type_, &other->_impl_.sign_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.pay_sign_, &other->_impl_.pay_sign_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_trade_no_, &other->_impl_.out_trade_no_, arena);
}

::google::protobuf::Metadata PayJsapiPrepayIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[15]);
}
// ===================================================================

class PayBillDate::_Internal {
 public:
};

PayBillDate::PayBillDate(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayBillDate)
}
PayBillDate::PayBillDate(
    ::google::protobuf::Arena* arena, const PayBillDate& from)
    : PayBillDate(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PayBillDate::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PayBillDate::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, year_),
           0,
           offsetof(Impl_, day_) -
               offsetof(Impl_, year_) +
               sizeof(Impl_::day_));
}
PayBillDate::~PayBillDate() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayBillDate)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayBillDate::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayBillDate::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayBillDate)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.year_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.day_) -
      reinterpret_cast<char*>(&_impl_.year_)) + sizeof(_impl_.day_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayBillDate::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PayBillDate::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayBillDate_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 year = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PayBillDate, _impl_.year_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PayBillDate, _impl_.year_)}},
    // int32 month = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PayBillDate, _impl_.month_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PayBillDate, _impl_.month_)}},
    // int32 day = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PayBillDate, _impl_.day_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PayBillDate, _impl_.day_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 year = 1;
    {PROTOBUF_FIELD_OFFSET(PayBillDate, _impl_.year_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 month = 2;
    {PROTOBUF_FIELD_OFFSET(PayBillDate, _impl_.month_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 day = 3;
    {PROTOBUF_FIELD_OFFSET(PayBillDate, _impl_.day_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PayBillDate::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayBillDate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 year = 1;
  if (this->_internal_year() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_year(), target);
  }

  // int32 month = 2;
  if (this->_internal_month() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_month(), target);
  }

  // int32 day = 3;
  if (this->_internal_day() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_day(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayBillDate)
  return target;
}

::size_t PayBillDate::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayBillDate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 year = 1;
  if (this->_internal_year() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_year());
  }

  // int32 month = 2;
  if (this->_internal_month() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_month());
  }

  // int32 day = 3;
  if (this->_internal_day() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_day());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayBillDate::_class_data_ = {
    PayBillDate::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayBillDate::GetClassData() const {
  return &_class_data_;
}

void PayBillDate::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayBillDate*>(&to_msg);
  auto& from = static_cast<const PayBillDate&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayBillDate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_year() != 0) {
    _this->_internal_set_year(from._internal_year());
  }
  if (from._internal_month() != 0) {
    _this->_internal_set_month(from._internal_month());
  }
  if (from._internal_day() != 0) {
    _this->_internal_set_day(from._internal_day());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayBillDate::CopyFrom(const PayBillDate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayBillDate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayBillDate::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayBillDate::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayBillDate::InternalSwap(PayBillDate* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PayBillDate, _impl_.day_)
      + sizeof(PayBillDate::_impl_.day_)
      - PROTOBUF_FIELD_OFFSET(PayBillDate, _impl_.year_)>(
          reinterpret_cast<char*>(&_impl_.year_),
          reinterpret_cast<char*>(&other->_impl_.year_));
}

::google::protobuf::Metadata PayBillDate::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[16]);
}
// ===================================================================

class PayBillResponse::_Internal {
 public:
};

PayBillResponse::PayBillResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayBillResponse)
}
inline PROTOBUF_NDEBUG_INLINE PayBillResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : content_(arena, from.content_),
        _cached_size_{0} {}

PayBillResponse::PayBillResponse(
    ::google::protobuf::Arena* arena,
    const PayBillResponse& from)
    : ::google::protobuf::Message(arena) {
  PayBillResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayBillResponse)
}
inline PROTOBUF_NDEBUG_INLINE PayBillResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : content_(arena),
        _cached_size_{0} {}

inline void PayBillResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PayBillResponse::~PayBillResponse() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayBillResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayBillResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.content_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayBillResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayBillResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.content_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayBillResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PayBillResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayBillResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes content = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayBillResponse, _impl_.content_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes content = 1;
    {PROTOBUF_FIELD_OFFSET(PayBillResponse, _impl_.content_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PayBillResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayBillResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes content = 1;
  if (!this->_internal_content().empty()) {
    const std::string& _s = this->_internal_content();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayBillResponse)
  return target;
}

::size_t PayBillResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayBillResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes content = 1;
  if (!this->_internal_content().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_content());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayBillResponse::_class_data_ = {
    PayBillResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayBillResponse::GetClassData() const {
  return &_class_data_;
}

void PayBillResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayBillResponse*>(&to_msg);
  auto& from = static_cast<const PayBillResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayBillResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_content().empty()) {
    _this->_internal_set_content(from._internal_content());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayBillResponse::CopyFrom(const PayBillResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayBillResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayBillResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayBillResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayBillResponse::InternalSwap(PayBillResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.content_, &other->_impl_.content_, arena);
}

::google::protobuf::Metadata PayBillResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[17]);
}
// ===================================================================

class PayTradeBillRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PayTradeBillRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PayTradeBillRequest, _impl_._has_bits_);
  static const ::palm::wechat::v1::PayBillDate& bill_date(const PayTradeBillRequest* msg);
  static void set_has_bill_date(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::wechat::v1::PayBillDate& PayTradeBillRequest::_Internal::bill_date(const PayTradeBillRequest* msg) {
  return *msg->_impl_.bill_date_;
}
PayTradeBillRequest::PayTradeBillRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayTradeBillRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayTradeBillRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PayTradeBillRequest::PayTradeBillRequest(
    ::google::protobuf::Arena* arena,
    const PayTradeBillRequest& from)
    : ::google::protobuf::Message(arena) {
  PayTradeBillRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.bill_date_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::palm::wechat::v1::PayBillDate>(arena, *from._impl_.bill_date_)
                : nullptr;
  _impl_.bill_type_ = from._impl_.bill_type_;

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayTradeBillRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayTradeBillRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PayTradeBillRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bill_date_),
           0,
           offsetof(Impl_, bill_type_) -
               offsetof(Impl_, bill_date_) +
               sizeof(Impl_::bill_type_));
}
PayTradeBillRequest::~PayTradeBillRequest() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayTradeBillRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayTradeBillRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.bill_date_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayTradeBillRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayTradeBillRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.bill_date_ != nullptr);
    _impl_.bill_date_->Clear();
  }
  _impl_.bill_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayTradeBillRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> PayTradeBillRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PayTradeBillRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PayTradeBillRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .palm.wechat.v1.PayTradeBillRequest.BillType bill_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PayTradeBillRequest, _impl_.bill_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PayTradeBillRequest, _impl_.bill_type_)}},
    // .palm.wechat.v1.PayBillDate bill_date = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PayTradeBillRequest, _impl_.bill_date_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .palm.wechat.v1.PayBillDate bill_date = 1;
    {PROTOBUF_FIELD_OFFSET(PayTradeBillRequest, _impl_.bill_date_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .palm.wechat.v1.PayTradeBillRequest.BillType bill_type = 2;
    {PROTOBUF_FIELD_OFFSET(PayTradeBillRequest, _impl_.bill_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::wechat::v1::PayBillDate>()},
  }}, {{
  }},
};

::uint8_t* PayTradeBillRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayTradeBillRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.wechat.v1.PayBillDate bill_date = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::bill_date(this),
        _Internal::bill_date(this).GetCachedSize(), target, stream);
  }

  // .palm.wechat.v1.PayTradeBillRequest.BillType bill_type = 2;
  if (this->_internal_bill_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_bill_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayTradeBillRequest)
  return target;
}

::size_t PayTradeBillRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayTradeBillRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .palm.wechat.v1.PayBillDate bill_date = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.bill_date_);
  }

  // .palm.wechat.v1.PayTradeBillRequest.BillType bill_type = 2;
  if (this->_internal_bill_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_bill_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayTradeBillRequest::_class_data_ = {
    PayTradeBillRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayTradeBillRequest::GetClassData() const {
  return &_class_data_;
}

void PayTradeBillRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayTradeBillRequest*>(&to_msg);
  auto& from = static_cast<const PayTradeBillRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayTradeBillRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_bill_date()->::palm::wechat::v1::PayBillDate::MergeFrom(
        from._internal_bill_date());
  }
  if (from._internal_bill_type() != 0) {
    _this->_internal_set_bill_type(from._internal_bill_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayTradeBillRequest::CopyFrom(const PayTradeBillRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayTradeBillRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayTradeBillRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayTradeBillRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayTradeBillRequest::InternalSwap(PayTradeBillRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PayTradeBillRequest, _impl_.bill_type_)
      + sizeof(PayTradeBillRequest::_impl_.bill_type_)
      - PROTOBUF_FIELD_OFFSET(PayTradeBillRequest, _impl_.bill_date_)>(
          reinterpret_cast<char*>(&_impl_.bill_date_),
          reinterpret_cast<char*>(&other->_impl_.bill_date_));
}

::google::protobuf::Metadata PayTradeBillRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[18]);
}
// ===================================================================

class PayFundFlowBillRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PayFundFlowBillRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PayFundFlowBillRequest, _impl_._has_bits_);
  static const ::palm::wechat::v1::PayBillDate& bill_date(const PayFundFlowBillRequest* msg);
  static void set_has_bill_date(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::wechat::v1::PayBillDate& PayFundFlowBillRequest::_Internal::bill_date(const PayFundFlowBillRequest* msg) {
  return *msg->_impl_.bill_date_;
}
PayFundFlowBillRequest::PayFundFlowBillRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayFundFlowBillRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayFundFlowBillRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

PayFundFlowBillRequest::PayFundFlowBillRequest(
    ::google::protobuf::Arena* arena,
    const PayFundFlowBillRequest& from)
    : ::google::protobuf::Message(arena) {
  PayFundFlowBillRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.bill_date_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::palm::wechat::v1::PayBillDate>(arena, *from._impl_.bill_date_)
                : nullptr;
  _impl_.account_type_ = from._impl_.account_type_;

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayFundFlowBillRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayFundFlowBillRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PayFundFlowBillRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, bill_date_),
           0,
           offsetof(Impl_, account_type_) -
               offsetof(Impl_, bill_date_) +
               sizeof(Impl_::account_type_));
}
PayFundFlowBillRequest::~PayFundFlowBillRequest() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayFundFlowBillRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayFundFlowBillRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.bill_date_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayFundFlowBillRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayFundFlowBillRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.bill_date_ != nullptr);
    _impl_.bill_date_->Clear();
  }
  _impl_.account_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayFundFlowBillRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 0, 2> PayFundFlowBillRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PayFundFlowBillRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PayFundFlowBillRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .palm.wechat.v1.PayFundFlowBillRequest.AccountType account_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PayFundFlowBillRequest, _impl_.account_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PayFundFlowBillRequest, _impl_.account_type_)}},
    // .palm.wechat.v1.PayBillDate bill_date = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PayFundFlowBillRequest, _impl_.bill_date_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .palm.wechat.v1.PayBillDate bill_date = 1;
    {PROTOBUF_FIELD_OFFSET(PayFundFlowBillRequest, _impl_.bill_date_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .palm.wechat.v1.PayFundFlowBillRequest.AccountType account_type = 2;
    {PROTOBUF_FIELD_OFFSET(PayFundFlowBillRequest, _impl_.account_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::wechat::v1::PayBillDate>()},
  }}, {{
  }},
};

::uint8_t* PayFundFlowBillRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayFundFlowBillRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.wechat.v1.PayBillDate bill_date = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::bill_date(this),
        _Internal::bill_date(this).GetCachedSize(), target, stream);
  }

  // .palm.wechat.v1.PayFundFlowBillRequest.AccountType account_type = 2;
  if (this->_internal_account_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        2, this->_internal_account_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayFundFlowBillRequest)
  return target;
}

::size_t PayFundFlowBillRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayFundFlowBillRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .palm.wechat.v1.PayBillDate bill_date = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.bill_date_);
  }

  // .palm.wechat.v1.PayFundFlowBillRequest.AccountType account_type = 2;
  if (this->_internal_account_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_account_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayFundFlowBillRequest::_class_data_ = {
    PayFundFlowBillRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayFundFlowBillRequest::GetClassData() const {
  return &_class_data_;
}

void PayFundFlowBillRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayFundFlowBillRequest*>(&to_msg);
  auto& from = static_cast<const PayFundFlowBillRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayFundFlowBillRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_bill_date()->::palm::wechat::v1::PayBillDate::MergeFrom(
        from._internal_bill_date());
  }
  if (from._internal_account_type() != 0) {
    _this->_internal_set_account_type(from._internal_account_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayFundFlowBillRequest::CopyFrom(const PayFundFlowBillRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayFundFlowBillRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayFundFlowBillRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayFundFlowBillRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayFundFlowBillRequest::InternalSwap(PayFundFlowBillRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PayFundFlowBillRequest, _impl_.account_type_)
      + sizeof(PayFundFlowBillRequest::_impl_.account_type_)
      - PROTOBUF_FIELD_OFFSET(PayFundFlowBillRequest, _impl_.bill_date_)>(
          reinterpret_cast<char*>(&_impl_.bill_date_),
          reinterpret_cast<char*>(&other->_impl_.bill_date_));
}

::google::protobuf::Metadata PayFundFlowBillRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[19]);
}
// ===================================================================

class PayCreateRefundRequest_Amount::_Internal {
 public:
};

PayCreateRefundRequest_Amount::PayCreateRefundRequest_Amount(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayCreateRefundRequest.Amount)
}
PayCreateRefundRequest_Amount::PayCreateRefundRequest_Amount(
    ::google::protobuf::Arena* arena, const PayCreateRefundRequest_Amount& from)
    : PayCreateRefundRequest_Amount(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE PayCreateRefundRequest_Amount::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void PayCreateRefundRequest_Amount::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_),
           0,
           offsetof(Impl_, currency_) -
               offsetof(Impl_, total_) +
               sizeof(Impl_::currency_));
}
PayCreateRefundRequest_Amount::~PayCreateRefundRequest_Amount() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayCreateRefundRequest.Amount)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayCreateRefundRequest_Amount::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayCreateRefundRequest_Amount::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayCreateRefundRequest.Amount)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.total_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.currency_) -
      reinterpret_cast<char*>(&_impl_.total_)) + sizeof(_impl_.currency_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayCreateRefundRequest_Amount::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 0, 2> PayCreateRefundRequest_Amount::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayCreateRefundRequest_Amount_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // int32 total = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PayCreateRefundRequest_Amount, _impl_.total_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PayCreateRefundRequest_Amount, _impl_.total_)}},
    // int32 refund = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PayCreateRefundRequest_Amount, _impl_.refund_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PayCreateRefundRequest_Amount, _impl_.refund_)}},
    // .palm.wechat.v1.PayCurrency currency = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PayCreateRefundRequest_Amount, _impl_.currency_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PayCreateRefundRequest_Amount, _impl_.currency_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 total = 1;
    {PROTOBUF_FIELD_OFFSET(PayCreateRefundRequest_Amount, _impl_.total_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 refund = 2;
    {PROTOBUF_FIELD_OFFSET(PayCreateRefundRequest_Amount, _impl_.refund_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .palm.wechat.v1.PayCurrency currency = 3;
    {PROTOBUF_FIELD_OFFSET(PayCreateRefundRequest_Amount, _impl_.currency_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PayCreateRefundRequest_Amount::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayCreateRefundRequest.Amount)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 total = 1;
  if (this->_internal_total() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_total(), target);
  }

  // int32 refund = 2;
  if (this->_internal_refund() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_refund(), target);
  }

  // .palm.wechat.v1.PayCurrency currency = 3;
  if (this->_internal_currency() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        3, this->_internal_currency(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayCreateRefundRequest.Amount)
  return target;
}

::size_t PayCreateRefundRequest_Amount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayCreateRefundRequest.Amount)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 total = 1;
  if (this->_internal_total() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_total());
  }

  // int32 refund = 2;
  if (this->_internal_refund() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_refund());
  }

  // .palm.wechat.v1.PayCurrency currency = 3;
  if (this->_internal_currency() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_currency());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayCreateRefundRequest_Amount::_class_data_ = {
    PayCreateRefundRequest_Amount::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayCreateRefundRequest_Amount::GetClassData() const {
  return &_class_data_;
}

void PayCreateRefundRequest_Amount::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayCreateRefundRequest_Amount*>(&to_msg);
  auto& from = static_cast<const PayCreateRefundRequest_Amount&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayCreateRefundRequest.Amount)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_total() != 0) {
    _this->_internal_set_total(from._internal_total());
  }
  if (from._internal_refund() != 0) {
    _this->_internal_set_refund(from._internal_refund());
  }
  if (from._internal_currency() != 0) {
    _this->_internal_set_currency(from._internal_currency());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayCreateRefundRequest_Amount::CopyFrom(const PayCreateRefundRequest_Amount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayCreateRefundRequest.Amount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayCreateRefundRequest_Amount::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayCreateRefundRequest_Amount::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayCreateRefundRequest_Amount::InternalSwap(PayCreateRefundRequest_Amount* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PayCreateRefundRequest_Amount, _impl_.currency_)
      + sizeof(PayCreateRefundRequest_Amount::_impl_.currency_)
      - PROTOBUF_FIELD_OFFSET(PayCreateRefundRequest_Amount, _impl_.total_)>(
          reinterpret_cast<char*>(&_impl_.total_),
          reinterpret_cast<char*>(&other->_impl_.total_));
}

::google::protobuf::Metadata PayCreateRefundRequest_Amount::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[20]);
}
// ===================================================================

class PayCreateRefundRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PayCreateRefundRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PayCreateRefundRequest, _impl_._has_bits_);
  static const ::palm::wechat::v1::PayCreateRefundRequest_Amount& amount(const PayCreateRefundRequest* msg);
  static void set_has_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::wechat::v1::PayCreateRefundRequest_Amount& PayCreateRefundRequest::_Internal::amount(const PayCreateRefundRequest* msg) {
  return *msg->_impl_.amount_;
}
PayCreateRefundRequest::PayCreateRefundRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayCreateRefundRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayCreateRefundRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        out_trade_no_(arena, from.out_trade_no_),
        reason_(arena, from.reason_),
        notify_host_(arena, from.notify_host_) {}

PayCreateRefundRequest::PayCreateRefundRequest(
    ::google::protobuf::Arena* arena,
    const PayCreateRefundRequest& from)
    : ::google::protobuf::Message(arena) {
  PayCreateRefundRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.amount_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::palm::wechat::v1::PayCreateRefundRequest_Amount>(arena, *from._impl_.amount_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayCreateRefundRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayCreateRefundRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        out_trade_no_(arena),
        reason_(arena),
        notify_host_(arena) {}

inline void PayCreateRefundRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.amount_ = {};
}
PayCreateRefundRequest::~PayCreateRefundRequest() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayCreateRefundRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayCreateRefundRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.out_trade_no_.Destroy();
  _impl_.reason_.Destroy();
  _impl_.notify_host_.Destroy();
  delete _impl_.amount_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayCreateRefundRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayCreateRefundRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.out_trade_no_.ClearToEmpty();
  _impl_.reason_.ClearToEmpty();
  _impl_.notify_host_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.amount_ != nullptr);
    _impl_.amount_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayCreateRefundRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 75, 2> PayCreateRefundRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PayCreateRefundRequest, _impl_._has_bits_),
    0, // no _extensions_
    11, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PayCreateRefundRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string out_trade_no = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayCreateRefundRequest, _impl_.out_trade_no_)}},
    // string reason = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PayCreateRefundRequest, _impl_.reason_)}},
    // .palm.wechat.v1.PayCreateRefundRequest.Amount amount = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PayCreateRefundRequest, _impl_.amount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string out_trade_no = 1;
    {PROTOBUF_FIELD_OFFSET(PayCreateRefundRequest, _impl_.out_trade_no_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string reason = 2;
    {PROTOBUF_FIELD_OFFSET(PayCreateRefundRequest, _impl_.reason_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .palm.wechat.v1.PayCreateRefundRequest.Amount amount = 3;
    {PROTOBUF_FIELD_OFFSET(PayCreateRefundRequest, _impl_.amount_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string notify_host = 11;
    {PROTOBUF_FIELD_OFFSET(PayCreateRefundRequest, _impl_.notify_host_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::wechat::v1::PayCreateRefundRequest_Amount>()},
  }}, {{
    "\45\14\6\0\13\0\0\0"
    "palm.wechat.v1.PayCreateRefundRequest"
    "out_trade_no"
    "reason"
    "notify_host"
  }},
};

::uint8_t* PayCreateRefundRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayCreateRefundRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string out_trade_no = 1;
  if (!this->_internal_out_trade_no().empty()) {
    const std::string& _s = this->_internal_out_trade_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayCreateRefundRequest.out_trade_no");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string reason = 2;
  if (!this->_internal_reason().empty()) {
    const std::string& _s = this->_internal_reason();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayCreateRefundRequest.reason");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.wechat.v1.PayCreateRefundRequest.Amount amount = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, _Internal::amount(this),
        _Internal::amount(this).GetCachedSize(), target, stream);
  }

  // string notify_host = 11;
  if (!this->_internal_notify_host().empty()) {
    const std::string& _s = this->_internal_notify_host();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayCreateRefundRequest.notify_host");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayCreateRefundRequest)
  return target;
}

::size_t PayCreateRefundRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayCreateRefundRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string out_trade_no = 1;
  if (!this->_internal_out_trade_no().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_trade_no());
  }

  // string reason = 2;
  if (!this->_internal_reason().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_reason());
  }

  // string notify_host = 11;
  if (!this->_internal_notify_host().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_notify_host());
  }

  // .palm.wechat.v1.PayCreateRefundRequest.Amount amount = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.amount_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayCreateRefundRequest::_class_data_ = {
    PayCreateRefundRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayCreateRefundRequest::GetClassData() const {
  return &_class_data_;
}

void PayCreateRefundRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayCreateRefundRequest*>(&to_msg);
  auto& from = static_cast<const PayCreateRefundRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayCreateRefundRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_out_trade_no().empty()) {
    _this->_internal_set_out_trade_no(from._internal_out_trade_no());
  }
  if (!from._internal_reason().empty()) {
    _this->_internal_set_reason(from._internal_reason());
  }
  if (!from._internal_notify_host().empty()) {
    _this->_internal_set_notify_host(from._internal_notify_host());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_amount()->::palm::wechat::v1::PayCreateRefundRequest_Amount::MergeFrom(
        from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayCreateRefundRequest::CopyFrom(const PayCreateRefundRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayCreateRefundRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayCreateRefundRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayCreateRefundRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayCreateRefundRequest::InternalSwap(PayCreateRefundRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_trade_no_, &other->_impl_.out_trade_no_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.reason_, &other->_impl_.reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.notify_host_, &other->_impl_.notify_host_, arena);
  swap(_impl_.amount_, other->_impl_.amount_);
}

::google::protobuf::Metadata PayCreateRefundRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[21]);
}
// ===================================================================

class PayQueryRefundRequest::_Internal {
 public:
};

PayQueryRefundRequest::PayQueryRefundRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayQueryRefundRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayQueryRefundRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : out_refund_no_(arena, from.out_refund_no_),
        _cached_size_{0} {}

PayQueryRefundRequest::PayQueryRefundRequest(
    ::google::protobuf::Arena* arena,
    const PayQueryRefundRequest& from)
    : ::google::protobuf::Message(arena) {
  PayQueryRefundRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayQueryRefundRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayQueryRefundRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : out_refund_no_(arena),
        _cached_size_{0} {}

inline void PayQueryRefundRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PayQueryRefundRequest::~PayQueryRefundRequest() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayQueryRefundRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayQueryRefundRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.out_refund_no_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayQueryRefundRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayQueryRefundRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.out_refund_no_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayQueryRefundRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 58, 2> PayQueryRefundRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayQueryRefundRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string out_refund_no = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryRefundRequest, _impl_.out_refund_no_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string out_refund_no = 1;
    {PROTOBUF_FIELD_OFFSET(PayQueryRefundRequest, _impl_.out_refund_no_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\15\0\0\0\0\0\0"
    "palm.wechat.v1.PayQueryRefundRequest"
    "out_refund_no"
  }},
};

::uint8_t* PayQueryRefundRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayQueryRefundRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string out_refund_no = 1;
  if (!this->_internal_out_refund_no().empty()) {
    const std::string& _s = this->_internal_out_refund_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryRefundRequest.out_refund_no");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayQueryRefundRequest)
  return target;
}

::size_t PayQueryRefundRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayQueryRefundRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string out_refund_no = 1;
  if (!this->_internal_out_refund_no().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_refund_no());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayQueryRefundRequest::_class_data_ = {
    PayQueryRefundRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayQueryRefundRequest::GetClassData() const {
  return &_class_data_;
}

void PayQueryRefundRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayQueryRefundRequest*>(&to_msg);
  auto& from = static_cast<const PayQueryRefundRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayQueryRefundRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_out_refund_no().empty()) {
    _this->_internal_set_out_refund_no(from._internal_out_refund_no());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayQueryRefundRequest::CopyFrom(const PayQueryRefundRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayQueryRefundRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayQueryRefundRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayQueryRefundRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayQueryRefundRequest::InternalSwap(PayQueryRefundRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_refund_no_, &other->_impl_.out_refund_no_, arena);
}

::google::protobuf::Metadata PayQueryRefundRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[22]);
}
// ===================================================================

class PayRefundResponse::_Internal {
 public:
};

PayRefundResponse::PayRefundResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayRefundResponse)
}
inline PROTOBUF_NDEBUG_INLINE PayRefundResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : out_refund_no_(arena, from.out_refund_no_),
        channel_(arena, from.channel_),
        status_(arena, from.status_),
        user_received_account_(arena, from.user_received_account_),
        create_time_(arena, from.create_time_),
        _cached_size_{0} {}

PayRefundResponse::PayRefundResponse(
    ::google::protobuf::Arena* arena,
    const PayRefundResponse& from)
    : ::google::protobuf::Message(arena) {
  PayRefundResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayRefundResponse)
}
inline PROTOBUF_NDEBUG_INLINE PayRefundResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : out_refund_no_(arena),
        channel_(arena),
        status_(arena),
        user_received_account_(arena),
        create_time_(arena),
        _cached_size_{0} {}

inline void PayRefundResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PayRefundResponse::~PayRefundResponse() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayRefundResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayRefundResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.out_refund_no_.Destroy();
  _impl_.channel_.Destroy();
  _impl_.status_.Destroy();
  _impl_.user_received_account_.Destroy();
  _impl_.create_time_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayRefundResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayRefundResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.out_refund_no_.ClearToEmpty();
  _impl_.channel_.ClearToEmpty();
  _impl_.status_.ClearToEmpty();
  _impl_.user_received_account_.ClearToEmpty();
  _impl_.create_time_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayRefundResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 5, 0, 99, 7> PayRefundResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    99, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayRefundResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string user_received_account = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PayRefundResponse, _impl_.user_received_account_)}},
    // string out_refund_no = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayRefundResponse, _impl_.out_refund_no_)}},
    // string channel = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PayRefundResponse, _impl_.channel_)}},
    // string status = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PayRefundResponse, _impl_.status_)}},
  }}, {{
    99, 0, 1,
    65534, 4,
    65535, 65535
  }}, {{
    // string out_refund_no = 1;
    {PROTOBUF_FIELD_OFFSET(PayRefundResponse, _impl_.out_refund_no_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string channel = 2;
    {PROTOBUF_FIELD_OFFSET(PayRefundResponse, _impl_.channel_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string status = 3;
    {PROTOBUF_FIELD_OFFSET(PayRefundResponse, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string user_received_account = 4;
    {PROTOBUF_FIELD_OFFSET(PayRefundResponse, _impl_.user_received_account_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string create_time = 99;
    {PROTOBUF_FIELD_OFFSET(PayRefundResponse, _impl_.create_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\15\7\6\25\13\0\0"
    "palm.wechat.v1.PayRefundResponse"
    "out_refund_no"
    "channel"
    "status"
    "user_received_account"
    "create_time"
  }},
};

::uint8_t* PayRefundResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayRefundResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string out_refund_no = 1;
  if (!this->_internal_out_refund_no().empty()) {
    const std::string& _s = this->_internal_out_refund_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayRefundResponse.out_refund_no");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string channel = 2;
  if (!this->_internal_channel().empty()) {
    const std::string& _s = this->_internal_channel();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayRefundResponse.channel");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string status = 3;
  if (!this->_internal_status().empty()) {
    const std::string& _s = this->_internal_status();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayRefundResponse.status");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string user_received_account = 4;
  if (!this->_internal_user_received_account().empty()) {
    const std::string& _s = this->_internal_user_received_account();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayRefundResponse.user_received_account");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string create_time = 99;
  if (!this->_internal_create_time().empty()) {
    const std::string& _s = this->_internal_create_time();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayRefundResponse.create_time");
    target = stream->WriteStringMaybeAliased(99, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayRefundResponse)
  return target;
}

::size_t PayRefundResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayRefundResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string out_refund_no = 1;
  if (!this->_internal_out_refund_no().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_refund_no());
  }

  // string channel = 2;
  if (!this->_internal_channel().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_channel());
  }

  // string status = 3;
  if (!this->_internal_status().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_status());
  }

  // string user_received_account = 4;
  if (!this->_internal_user_received_account().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user_received_account());
  }

  // string create_time = 99;
  if (!this->_internal_create_time().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_create_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayRefundResponse::_class_data_ = {
    PayRefundResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayRefundResponse::GetClassData() const {
  return &_class_data_;
}

void PayRefundResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayRefundResponse*>(&to_msg);
  auto& from = static_cast<const PayRefundResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayRefundResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_out_refund_no().empty()) {
    _this->_internal_set_out_refund_no(from._internal_out_refund_no());
  }
  if (!from._internal_channel().empty()) {
    _this->_internal_set_channel(from._internal_channel());
  }
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  if (!from._internal_user_received_account().empty()) {
    _this->_internal_set_user_received_account(from._internal_user_received_account());
  }
  if (!from._internal_create_time().empty()) {
    _this->_internal_set_create_time(from._internal_create_time());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayRefundResponse::CopyFrom(const PayRefundResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayRefundResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayRefundResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayRefundResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayRefundResponse::InternalSwap(PayRefundResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_refund_no_, &other->_impl_.out_refund_no_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.channel_, &other->_impl_.channel_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_received_account_, &other->_impl_.user_received_account_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.create_time_, &other->_impl_.create_time_, arena);
}

::google::protobuf::Metadata PayRefundResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[23]);
}
// ===================================================================

class PayTransferGetElectronicReceiptRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PayTransferGetElectronicReceiptRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PayTransferGetElectronicReceiptRequest, _impl_._has_bits_);
  static void set_has_out_batch_no(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PayTransferGetElectronicReceiptRequest::PayTransferGetElectronicReceiptRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayTransferGetElectronicReceiptRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayTransferGetElectronicReceiptRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        out_batch_no_(arena, from.out_batch_no_),
        out_detail_no_(arena, from.out_detail_no_) {}

PayTransferGetElectronicReceiptRequest::PayTransferGetElectronicReceiptRequest(
    ::google::protobuf::Arena* arena,
    const PayTransferGetElectronicReceiptRequest& from)
    : ::google::protobuf::Message(arena) {
  PayTransferGetElectronicReceiptRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.accept_type_ = from._impl_.accept_type_;

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayTransferGetElectronicReceiptRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayTransferGetElectronicReceiptRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        out_batch_no_(arena),
        out_detail_no_(arena) {}

inline void PayTransferGetElectronicReceiptRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.accept_type_ = {};
}
PayTransferGetElectronicReceiptRequest::~PayTransferGetElectronicReceiptRequest() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayTransferGetElectronicReceiptRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayTransferGetElectronicReceiptRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.out_batch_no_.Destroy();
  _impl_.out_detail_no_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayTransferGetElectronicReceiptRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayTransferGetElectronicReceiptRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.out_batch_no_.ClearNonDefaultToEmpty();
  }
  _impl_.out_detail_no_.ClearToEmpty();
  _impl_.accept_type_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayTransferGetElectronicReceiptRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 87, 2> PayTransferGetElectronicReceiptRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PayTransferGetElectronicReceiptRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayTransferGetElectronicReceiptRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .palm.wechat.v1.PayTransferGetElectronicReceiptRequest.AcceptType accept_type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PayTransferGetElectronicReceiptRequest, _impl_.accept_type_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(PayTransferGetElectronicReceiptRequest, _impl_.accept_type_)}},
    // optional string out_batch_no = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(PayTransferGetElectronicReceiptRequest, _impl_.out_batch_no_)}},
    // string out_detail_no = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PayTransferGetElectronicReceiptRequest, _impl_.out_detail_no_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .palm.wechat.v1.PayTransferGetElectronicReceiptRequest.AcceptType accept_type = 1;
    {PROTOBUF_FIELD_OFFSET(PayTransferGetElectronicReceiptRequest, _impl_.accept_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // optional string out_batch_no = 2;
    {PROTOBUF_FIELD_OFFSET(PayTransferGetElectronicReceiptRequest, _impl_.out_batch_no_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string out_detail_no = 3;
    {PROTOBUF_FIELD_OFFSET(PayTransferGetElectronicReceiptRequest, _impl_.out_detail_no_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\0\14\15\0\0\0\0"
    "palm.wechat.v1.PayTransferGetElectronicReceiptRequest"
    "out_batch_no"
    "out_detail_no"
  }},
};

::uint8_t* PayTransferGetElectronicReceiptRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayTransferGetElectronicReceiptRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .palm.wechat.v1.PayTransferGetElectronicReceiptRequest.AcceptType accept_type = 1;
  if (this->_internal_accept_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        1, this->_internal_accept_type(), target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string out_batch_no = 2;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_out_batch_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayTransferGetElectronicReceiptRequest.out_batch_no");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string out_detail_no = 3;
  if (!this->_internal_out_detail_no().empty()) {
    const std::string& _s = this->_internal_out_detail_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayTransferGetElectronicReceiptRequest.out_detail_no");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayTransferGetElectronicReceiptRequest)
  return target;
}

::size_t PayTransferGetElectronicReceiptRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayTransferGetElectronicReceiptRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string out_batch_no = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_batch_no());
  }

  // string out_detail_no = 3;
  if (!this->_internal_out_detail_no().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_detail_no());
  }

  // .palm.wechat.v1.PayTransferGetElectronicReceiptRequest.AcceptType accept_type = 1;
  if (this->_internal_accept_type() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_accept_type());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayTransferGetElectronicReceiptRequest::_class_data_ = {
    PayTransferGetElectronicReceiptRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayTransferGetElectronicReceiptRequest::GetClassData() const {
  return &_class_data_;
}

void PayTransferGetElectronicReceiptRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayTransferGetElectronicReceiptRequest*>(&to_msg);
  auto& from = static_cast<const PayTransferGetElectronicReceiptRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayTransferGetElectronicReceiptRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_out_batch_no(from._internal_out_batch_no());
  }
  if (!from._internal_out_detail_no().empty()) {
    _this->_internal_set_out_detail_no(from._internal_out_detail_no());
  }
  if (from._internal_accept_type() != 0) {
    _this->_internal_set_accept_type(from._internal_accept_type());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayTransferGetElectronicReceiptRequest::CopyFrom(const PayTransferGetElectronicReceiptRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayTransferGetElectronicReceiptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayTransferGetElectronicReceiptRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayTransferGetElectronicReceiptRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayTransferGetElectronicReceiptRequest::InternalSwap(PayTransferGetElectronicReceiptRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_batch_no_, &other->_impl_.out_batch_no_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_detail_no_, &other->_impl_.out_detail_no_, arena);
  swap(_impl_.accept_type_, other->_impl_.accept_type_);
}

::google::protobuf::Metadata PayTransferGetElectronicReceiptRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[24]);
}
// ===================================================================

class PayTransferGetReceiptResponse::_Internal {
 public:
};

PayTransferGetReceiptResponse::PayTransferGetReceiptResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayTransferGetReceiptResponse)
}
inline PROTOBUF_NDEBUG_INLINE PayTransferGetReceiptResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : payload_(arena, from.payload_),
        _cached_size_{0} {}

PayTransferGetReceiptResponse::PayTransferGetReceiptResponse(
    ::google::protobuf::Arena* arena,
    const PayTransferGetReceiptResponse& from)
    : ::google::protobuf::Message(arena) {
  PayTransferGetReceiptResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayTransferGetReceiptResponse)
}
inline PROTOBUF_NDEBUG_INLINE PayTransferGetReceiptResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_(arena),
        _cached_size_{0} {}

inline void PayTransferGetReceiptResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PayTransferGetReceiptResponse::~PayTransferGetReceiptResponse() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayTransferGetReceiptResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayTransferGetReceiptResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.payload_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayTransferGetReceiptResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayTransferGetReceiptResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.payload_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayTransferGetReceiptResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> PayTransferGetReceiptResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayTransferGetReceiptResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // bytes payload = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayTransferGetReceiptResponse, _impl_.payload_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes payload = 1;
    {PROTOBUF_FIELD_OFFSET(PayTransferGetReceiptResponse, _impl_.payload_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* PayTransferGetReceiptResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayTransferGetReceiptResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bytes payload = 1;
  if (!this->_internal_payload().empty()) {
    const std::string& _s = this->_internal_payload();
    target = stream->WriteBytesMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayTransferGetReceiptResponse)
  return target;
}

::size_t PayTransferGetReceiptResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayTransferGetReceiptResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes payload = 1;
  if (!this->_internal_payload().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                    this->_internal_payload());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayTransferGetReceiptResponse::_class_data_ = {
    PayTransferGetReceiptResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayTransferGetReceiptResponse::GetClassData() const {
  return &_class_data_;
}

void PayTransferGetReceiptResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayTransferGetReceiptResponse*>(&to_msg);
  auto& from = static_cast<const PayTransferGetReceiptResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayTransferGetReceiptResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_payload().empty()) {
    _this->_internal_set_payload(from._internal_payload());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayTransferGetReceiptResponse::CopyFrom(const PayTransferGetReceiptResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayTransferGetReceiptResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayTransferGetReceiptResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayTransferGetReceiptResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayTransferGetReceiptResponse::InternalSwap(PayTransferGetReceiptResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.payload_, &other->_impl_.payload_, arena);
}

::google::protobuf::Metadata PayTransferGetReceiptResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[25]);
}
// ===================================================================

class PayTransferGetBillReceiptRequest::_Internal {
 public:
};

PayTransferGetBillReceiptRequest::PayTransferGetBillReceiptRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayTransferGetBillReceiptRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayTransferGetBillReceiptRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : out_batch_no_(arena, from.out_batch_no_),
        _cached_size_{0} {}

PayTransferGetBillReceiptRequest::PayTransferGetBillReceiptRequest(
    ::google::protobuf::Arena* arena,
    const PayTransferGetBillReceiptRequest& from)
    : ::google::protobuf::Message(arena) {
  PayTransferGetBillReceiptRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayTransferGetBillReceiptRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayTransferGetBillReceiptRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : out_batch_no_(arena),
        _cached_size_{0} {}

inline void PayTransferGetBillReceiptRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PayTransferGetBillReceiptRequest::~PayTransferGetBillReceiptRequest() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayTransferGetBillReceiptRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayTransferGetBillReceiptRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.out_batch_no_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayTransferGetBillReceiptRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayTransferGetBillReceiptRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.out_batch_no_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayTransferGetBillReceiptRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 68, 2> PayTransferGetBillReceiptRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayTransferGetBillReceiptRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string out_batch_no = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayTransferGetBillReceiptRequest, _impl_.out_batch_no_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string out_batch_no = 1;
    {PROTOBUF_FIELD_OFFSET(PayTransferGetBillReceiptRequest, _impl_.out_batch_no_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\57\14\0\0\0\0\0\0"
    "palm.wechat.v1.PayTransferGetBillReceiptRequest"
    "out_batch_no"
  }},
};

::uint8_t* PayTransferGetBillReceiptRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayTransferGetBillReceiptRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string out_batch_no = 1;
  if (!this->_internal_out_batch_no().empty()) {
    const std::string& _s = this->_internal_out_batch_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayTransferGetBillReceiptRequest.out_batch_no");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayTransferGetBillReceiptRequest)
  return target;
}

::size_t PayTransferGetBillReceiptRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayTransferGetBillReceiptRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string out_batch_no = 1;
  if (!this->_internal_out_batch_no().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_batch_no());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayTransferGetBillReceiptRequest::_class_data_ = {
    PayTransferGetBillReceiptRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayTransferGetBillReceiptRequest::GetClassData() const {
  return &_class_data_;
}

void PayTransferGetBillReceiptRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayTransferGetBillReceiptRequest*>(&to_msg);
  auto& from = static_cast<const PayTransferGetBillReceiptRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayTransferGetBillReceiptRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_out_batch_no().empty()) {
    _this->_internal_set_out_batch_no(from._internal_out_batch_no());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayTransferGetBillReceiptRequest::CopyFrom(const PayTransferGetBillReceiptRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayTransferGetBillReceiptRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayTransferGetBillReceiptRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayTransferGetBillReceiptRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayTransferGetBillReceiptRequest::InternalSwap(PayTransferGetBillReceiptRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_batch_no_, &other->_impl_.out_batch_no_, arena);
}

::google::protobuf::Metadata PayTransferGetBillReceiptRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[26]);
}
// ===================================================================

class PayExecuteBatchTransferRequest_Batch::_Internal {
 public:
  using HasBits = decltype(std::declval<PayExecuteBatchTransferRequest_Batch>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest_Batch, _impl_._has_bits_);
  static void set_has_out_no(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PayExecuteBatchTransferRequest_Batch::PayExecuteBatchTransferRequest_Batch(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayExecuteBatchTransferRequest.Batch)
}
inline PROTOBUF_NDEBUG_INLINE PayExecuteBatchTransferRequest_Batch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        name_(arena, from.name_),
        remark_(arena, from.remark_),
        out_no_(arena, from.out_no_) {}

PayExecuteBatchTransferRequest_Batch::PayExecuteBatchTransferRequest_Batch(
    ::google::protobuf::Arena* arena,
    const PayExecuteBatchTransferRequest_Batch& from)
    : ::google::protobuf::Message(arena) {
  PayExecuteBatchTransferRequest_Batch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayExecuteBatchTransferRequest.Batch)
}
inline PROTOBUF_NDEBUG_INLINE PayExecuteBatchTransferRequest_Batch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        name_(arena),
        remark_(arena),
        out_no_(arena) {}

inline void PayExecuteBatchTransferRequest_Batch::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PayExecuteBatchTransferRequest_Batch::~PayExecuteBatchTransferRequest_Batch() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayExecuteBatchTransferRequest.Batch)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayExecuteBatchTransferRequest_Batch::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.remark_.Destroy();
  _impl_.out_no_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayExecuteBatchTransferRequest_Batch::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayExecuteBatchTransferRequest.Batch)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.remark_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.out_no_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayExecuteBatchTransferRequest_Batch::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 76, 2> PayExecuteBatchTransferRequest_Batch::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest_Batch, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayExecuteBatchTransferRequest_Batch_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest_Batch, _impl_.name_)}},
    // string remark = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest_Batch, _impl_.remark_)}},
    // optional string out_no = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest_Batch, _impl_.out_no_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest_Batch, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string remark = 2;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest_Batch, _impl_.remark_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string out_no = 3;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest_Batch, _impl_.out_no_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\63\4\6\6\0\0\0\0"
    "palm.wechat.v1.PayExecuteBatchTransferRequest.Batch"
    "name"
    "remark"
    "out_no"
  }},
};

::uint8_t* PayExecuteBatchTransferRequest_Batch::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayExecuteBatchTransferRequest.Batch)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    const std::string& _s = this->_internal_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayExecuteBatchTransferRequest.Batch.name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string remark = 2;
  if (!this->_internal_remark().empty()) {
    const std::string& _s = this->_internal_remark();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayExecuteBatchTransferRequest.Batch.remark");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string out_no = 3;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_out_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayExecuteBatchTransferRequest.Batch.out_no");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayExecuteBatchTransferRequest.Batch)
  return target;
}

::size_t PayExecuteBatchTransferRequest_Batch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayExecuteBatchTransferRequest.Batch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (!this->_internal_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_name());
  }

  // string remark = 2;
  if (!this->_internal_remark().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_remark());
  }

  // optional string out_no = 3;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_no());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayExecuteBatchTransferRequest_Batch::_class_data_ = {
    PayExecuteBatchTransferRequest_Batch::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayExecuteBatchTransferRequest_Batch::GetClassData() const {
  return &_class_data_;
}

void PayExecuteBatchTransferRequest_Batch::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayExecuteBatchTransferRequest_Batch*>(&to_msg);
  auto& from = static_cast<const PayExecuteBatchTransferRequest_Batch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayExecuteBatchTransferRequest.Batch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_remark().empty()) {
    _this->_internal_set_remark(from._internal_remark());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_out_no(from._internal_out_no());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayExecuteBatchTransferRequest_Batch::CopyFrom(const PayExecuteBatchTransferRequest_Batch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayExecuteBatchTransferRequest.Batch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayExecuteBatchTransferRequest_Batch::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayExecuteBatchTransferRequest_Batch::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayExecuteBatchTransferRequest_Batch::InternalSwap(PayExecuteBatchTransferRequest_Batch* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remark_, &other->_impl_.remark_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_no_, &other->_impl_.out_no_, arena);
}

::google::protobuf::Metadata PayExecuteBatchTransferRequest_Batch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[27]);
}
// ===================================================================

class PayExecuteBatchTransferRequest_Detail::_Internal {
 public:
};

PayExecuteBatchTransferRequest_Detail::PayExecuteBatchTransferRequest_Detail(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayExecuteBatchTransferRequest.Detail)
}
inline PROTOBUF_NDEBUG_INLINE PayExecuteBatchTransferRequest_Detail::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : open_id_(arena, from.open_id_),
        username_(arena, from.username_),
        remark_(arena, from.remark_),
        _cached_size_{0} {}

PayExecuteBatchTransferRequest_Detail::PayExecuteBatchTransferRequest_Detail(
    ::google::protobuf::Arena* arena,
    const PayExecuteBatchTransferRequest_Detail& from)
    : ::google::protobuf::Message(arena) {
  PayExecuteBatchTransferRequest_Detail* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.amount_ = from._impl_.amount_;

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayExecuteBatchTransferRequest.Detail)
}
inline PROTOBUF_NDEBUG_INLINE PayExecuteBatchTransferRequest_Detail::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : open_id_(arena),
        username_(arena),
        remark_(arena),
        _cached_size_{0} {}

inline void PayExecuteBatchTransferRequest_Detail::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.amount_ = {};
}
PayExecuteBatchTransferRequest_Detail::~PayExecuteBatchTransferRequest_Detail() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayExecuteBatchTransferRequest.Detail)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayExecuteBatchTransferRequest_Detail::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.open_id_.Destroy();
  _impl_.username_.Destroy();
  _impl_.remark_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayExecuteBatchTransferRequest_Detail::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayExecuteBatchTransferRequest.Detail)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.open_id_.ClearToEmpty();
  _impl_.username_.ClearToEmpty();
  _impl_.remark_.ClearToEmpty();
  _impl_.amount_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayExecuteBatchTransferRequest_Detail::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 82, 2> PayExecuteBatchTransferRequest_Detail::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayExecuteBatchTransferRequest_Detail_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string remark = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest_Detail, _impl_.remark_)}},
    // string open_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest_Detail, _impl_.open_id_)}},
    // string username = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest_Detail, _impl_.username_)}},
    // int64 amount = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(PayExecuteBatchTransferRequest_Detail, _impl_.amount_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest_Detail, _impl_.amount_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string open_id = 1;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest_Detail, _impl_.open_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string username = 2;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest_Detail, _impl_.username_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 amount = 3;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest_Detail, _impl_.amount_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string remark = 4;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest_Detail, _impl_.remark_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\64\7\10\0\6\0\0\0"
    "palm.wechat.v1.PayExecuteBatchTransferRequest.Detail"
    "open_id"
    "username"
    "remark"
  }},
};

::uint8_t* PayExecuteBatchTransferRequest_Detail::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayExecuteBatchTransferRequest.Detail)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string open_id = 1;
  if (!this->_internal_open_id().empty()) {
    const std::string& _s = this->_internal_open_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayExecuteBatchTransferRequest.Detail.open_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string username = 2;
  if (!this->_internal_username().empty()) {
    const std::string& _s = this->_internal_username();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayExecuteBatchTransferRequest.Detail.username");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // int64 amount = 3;
  if (this->_internal_amount() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_amount(), target);
  }

  // string remark = 4;
  if (!this->_internal_remark().empty()) {
    const std::string& _s = this->_internal_remark();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayExecuteBatchTransferRequest.Detail.remark");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayExecuteBatchTransferRequest.Detail)
  return target;
}

::size_t PayExecuteBatchTransferRequest_Detail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayExecuteBatchTransferRequest.Detail)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string open_id = 1;
  if (!this->_internal_open_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_open_id());
  }

  // string username = 2;
  if (!this->_internal_username().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_username());
  }

  // string remark = 4;
  if (!this->_internal_remark().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_remark());
  }

  // int64 amount = 3;
  if (this->_internal_amount() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_amount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayExecuteBatchTransferRequest_Detail::_class_data_ = {
    PayExecuteBatchTransferRequest_Detail::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayExecuteBatchTransferRequest_Detail::GetClassData() const {
  return &_class_data_;
}

void PayExecuteBatchTransferRequest_Detail::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayExecuteBatchTransferRequest_Detail*>(&to_msg);
  auto& from = static_cast<const PayExecuteBatchTransferRequest_Detail&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayExecuteBatchTransferRequest.Detail)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_open_id().empty()) {
    _this->_internal_set_open_id(from._internal_open_id());
  }
  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_remark().empty()) {
    _this->_internal_set_remark(from._internal_remark());
  }
  if (from._internal_amount() != 0) {
    _this->_internal_set_amount(from._internal_amount());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayExecuteBatchTransferRequest_Detail::CopyFrom(const PayExecuteBatchTransferRequest_Detail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayExecuteBatchTransferRequest.Detail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayExecuteBatchTransferRequest_Detail::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayExecuteBatchTransferRequest_Detail::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayExecuteBatchTransferRequest_Detail::InternalSwap(PayExecuteBatchTransferRequest_Detail* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.open_id_, &other->_impl_.open_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.remark_, &other->_impl_.remark_, arena);
        swap(_impl_.amount_, other->_impl_.amount_);
}

::google::protobuf::Metadata PayExecuteBatchTransferRequest_Detail::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[28]);
}
// ===================================================================

class PayExecuteBatchTransferRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<PayExecuteBatchTransferRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest, _impl_._has_bits_);
  static const ::palm::wechat::v1::PayExecuteBatchTransferRequest_Batch& batch(const PayExecuteBatchTransferRequest* msg);
  static void set_has_batch(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::wechat::v1::PayExecuteBatchTransferRequest_Batch& PayExecuteBatchTransferRequest::_Internal::batch(const PayExecuteBatchTransferRequest* msg) {
  return *msg->_impl_.batch_;
}
PayExecuteBatchTransferRequest::PayExecuteBatchTransferRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayExecuteBatchTransferRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayExecuteBatchTransferRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        details_{visibility, arena, from.details_},
        app_id_(arena, from.app_id_),
        scene_id_(arena, from.scene_id_) {}

PayExecuteBatchTransferRequest::PayExecuteBatchTransferRequest(
    ::google::protobuf::Arena* arena,
    const PayExecuteBatchTransferRequest& from)
    : ::google::protobuf::Message(arena) {
  PayExecuteBatchTransferRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.batch_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::palm::wechat::v1::PayExecuteBatchTransferRequest_Batch>(arena, *from._impl_.batch_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayExecuteBatchTransferRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayExecuteBatchTransferRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        details_{visibility, arena},
        app_id_(arena),
        scene_id_(arena) {}

inline void PayExecuteBatchTransferRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.batch_ = {};
}
PayExecuteBatchTransferRequest::~PayExecuteBatchTransferRequest() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayExecuteBatchTransferRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayExecuteBatchTransferRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.app_id_.Destroy();
  _impl_.scene_id_.Destroy();
  delete _impl_.batch_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayExecuteBatchTransferRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayExecuteBatchTransferRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.details_.Clear();
  _impl_.app_id_.ClearToEmpty();
  _impl_.scene_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.batch_ != nullptr);
    _impl_.batch_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayExecuteBatchTransferRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 2, 68, 2> PayExecuteBatchTransferRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest, _impl_._has_bits_),
    0, // no _extensions_
    9, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967032,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PayExecuteBatchTransferRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string app_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest, _impl_.app_id_)}},
    // .palm.wechat.v1.PayExecuteBatchTransferRequest.Batch batch = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest, _impl_.batch_)}},
    // repeated .palm.wechat.v1.PayExecuteBatchTransferRequest.Detail details = 3;
    {::_pbi::TcParser::FastMtR1,
     {26, 63, 1, PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest, _impl_.details_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string app_id = 1;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest, _impl_.app_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .palm.wechat.v1.PayExecuteBatchTransferRequest.Batch batch = 2;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest, _impl_.batch_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .palm.wechat.v1.PayExecuteBatchTransferRequest.Detail details = 3;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest, _impl_.details_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string scene_id = 9;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferRequest, _impl_.scene_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::wechat::v1::PayExecuteBatchTransferRequest_Batch>()},
    {::_pbi::TcParser::GetTable<::palm::wechat::v1::PayExecuteBatchTransferRequest_Detail>()},
  }}, {{
    "\55\6\0\0\10\0\0\0"
    "palm.wechat.v1.PayExecuteBatchTransferRequest"
    "app_id"
    "scene_id"
  }},
};

::uint8_t* PayExecuteBatchTransferRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayExecuteBatchTransferRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayExecuteBatchTransferRequest.app_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.wechat.v1.PayExecuteBatchTransferRequest.Batch batch = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        2, _Internal::batch(this),
        _Internal::batch(this).GetCachedSize(), target, stream);
  }

  // repeated .palm.wechat.v1.PayExecuteBatchTransferRequest.Detail details = 3;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_details_size()); i < n; i++) {
    const auto& repfield = this->_internal_details().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(3, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string scene_id = 9;
  if (!this->_internal_scene_id().empty()) {
    const std::string& _s = this->_internal_scene_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayExecuteBatchTransferRequest.scene_id");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayExecuteBatchTransferRequest)
  return target;
}

::size_t PayExecuteBatchTransferRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayExecuteBatchTransferRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.wechat.v1.PayExecuteBatchTransferRequest.Detail details = 3;
  total_size += 1UL * this->_internal_details_size();
  for (const auto& msg : this->_internal_details()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  // string scene_id = 9;
  if (!this->_internal_scene_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_scene_id());
  }

  // .palm.wechat.v1.PayExecuteBatchTransferRequest.Batch batch = 2;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.batch_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayExecuteBatchTransferRequest::_class_data_ = {
    PayExecuteBatchTransferRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayExecuteBatchTransferRequest::GetClassData() const {
  return &_class_data_;
}

void PayExecuteBatchTransferRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayExecuteBatchTransferRequest*>(&to_msg);
  auto& from = static_cast<const PayExecuteBatchTransferRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayExecuteBatchTransferRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_details()->MergeFrom(
      from._internal_details());
  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_scene_id().empty()) {
    _this->_internal_set_scene_id(from._internal_scene_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_batch()->::palm::wechat::v1::PayExecuteBatchTransferRequest_Batch::MergeFrom(
        from._internal_batch());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayExecuteBatchTransferRequest::CopyFrom(const PayExecuteBatchTransferRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayExecuteBatchTransferRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayExecuteBatchTransferRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayExecuteBatchTransferRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayExecuteBatchTransferRequest::InternalSwap(PayExecuteBatchTransferRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.details_.InternalSwap(&other->_impl_.details_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, &other->_impl_.app_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.scene_id_, &other->_impl_.scene_id_, arena);
  swap(_impl_.batch_, other->_impl_.batch_);
}

::google::protobuf::Metadata PayExecuteBatchTransferRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[29]);
}
// ===================================================================

class PayExecuteBatchTransferResponse_Detail::_Internal {
 public:
};

PayExecuteBatchTransferResponse_Detail::PayExecuteBatchTransferResponse_Detail(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayExecuteBatchTransferResponse.Detail)
}
inline PROTOBUF_NDEBUG_INLINE PayExecuteBatchTransferResponse_Detail::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : open_id_(arena, from.open_id_),
        out_detail_no_(arena, from.out_detail_no_),
        _cached_size_{0} {}

PayExecuteBatchTransferResponse_Detail::PayExecuteBatchTransferResponse_Detail(
    ::google::protobuf::Arena* arena,
    const PayExecuteBatchTransferResponse_Detail& from)
    : ::google::protobuf::Message(arena) {
  PayExecuteBatchTransferResponse_Detail* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayExecuteBatchTransferResponse.Detail)
}
inline PROTOBUF_NDEBUG_INLINE PayExecuteBatchTransferResponse_Detail::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : open_id_(arena),
        out_detail_no_(arena),
        _cached_size_{0} {}

inline void PayExecuteBatchTransferResponse_Detail::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PayExecuteBatchTransferResponse_Detail::~PayExecuteBatchTransferResponse_Detail() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayExecuteBatchTransferResponse.Detail)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayExecuteBatchTransferResponse_Detail::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.open_id_.Destroy();
  _impl_.out_detail_no_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayExecuteBatchTransferResponse_Detail::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayExecuteBatchTransferResponse.Detail)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.open_id_.ClearToEmpty();
  _impl_.out_detail_no_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayExecuteBatchTransferResponse_Detail::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 82, 2> PayExecuteBatchTransferResponse_Detail::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayExecuteBatchTransferResponse_Detail_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string out_detail_no = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferResponse_Detail, _impl_.out_detail_no_)}},
    // string open_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferResponse_Detail, _impl_.open_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string open_id = 1;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferResponse_Detail, _impl_.open_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string out_detail_no = 2;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferResponse_Detail, _impl_.out_detail_no_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\65\7\15\0\0\0\0\0"
    "palm.wechat.v1.PayExecuteBatchTransferResponse.Detail"
    "open_id"
    "out_detail_no"
  }},
};

::uint8_t* PayExecuteBatchTransferResponse_Detail::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayExecuteBatchTransferResponse.Detail)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string open_id = 1;
  if (!this->_internal_open_id().empty()) {
    const std::string& _s = this->_internal_open_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayExecuteBatchTransferResponse.Detail.open_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string out_detail_no = 2;
  if (!this->_internal_out_detail_no().empty()) {
    const std::string& _s = this->_internal_out_detail_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayExecuteBatchTransferResponse.Detail.out_detail_no");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayExecuteBatchTransferResponse.Detail)
  return target;
}

::size_t PayExecuteBatchTransferResponse_Detail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayExecuteBatchTransferResponse.Detail)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string open_id = 1;
  if (!this->_internal_open_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_open_id());
  }

  // string out_detail_no = 2;
  if (!this->_internal_out_detail_no().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_detail_no());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayExecuteBatchTransferResponse_Detail::_class_data_ = {
    PayExecuteBatchTransferResponse_Detail::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayExecuteBatchTransferResponse_Detail::GetClassData() const {
  return &_class_data_;
}

void PayExecuteBatchTransferResponse_Detail::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayExecuteBatchTransferResponse_Detail*>(&to_msg);
  auto& from = static_cast<const PayExecuteBatchTransferResponse_Detail&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayExecuteBatchTransferResponse.Detail)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_open_id().empty()) {
    _this->_internal_set_open_id(from._internal_open_id());
  }
  if (!from._internal_out_detail_no().empty()) {
    _this->_internal_set_out_detail_no(from._internal_out_detail_no());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayExecuteBatchTransferResponse_Detail::CopyFrom(const PayExecuteBatchTransferResponse_Detail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayExecuteBatchTransferResponse.Detail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayExecuteBatchTransferResponse_Detail::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayExecuteBatchTransferResponse_Detail::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayExecuteBatchTransferResponse_Detail::InternalSwap(PayExecuteBatchTransferResponse_Detail* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.open_id_, &other->_impl_.open_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_detail_no_, &other->_impl_.out_detail_no_, arena);
}

::google::protobuf::Metadata PayExecuteBatchTransferResponse_Detail::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[30]);
}
// ===================================================================

class PayExecuteBatchTransferResponse_Succeeded::_Internal {
 public:
};

PayExecuteBatchTransferResponse_Succeeded::PayExecuteBatchTransferResponse_Succeeded(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayExecuteBatchTransferResponse.Succeeded)
}
inline PROTOBUF_NDEBUG_INLINE PayExecuteBatchTransferResponse_Succeeded::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : batch_id_(arena, from.batch_id_),
        create_time_(arena, from.create_time_),
        _cached_size_{0} {}

PayExecuteBatchTransferResponse_Succeeded::PayExecuteBatchTransferResponse_Succeeded(
    ::google::protobuf::Arena* arena,
    const PayExecuteBatchTransferResponse_Succeeded& from)
    : ::google::protobuf::Message(arena) {
  PayExecuteBatchTransferResponse_Succeeded* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayExecuteBatchTransferResponse.Succeeded)
}
inline PROTOBUF_NDEBUG_INLINE PayExecuteBatchTransferResponse_Succeeded::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : batch_id_(arena),
        create_time_(arena),
        _cached_size_{0} {}

inline void PayExecuteBatchTransferResponse_Succeeded::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PayExecuteBatchTransferResponse_Succeeded::~PayExecuteBatchTransferResponse_Succeeded() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayExecuteBatchTransferResponse.Succeeded)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayExecuteBatchTransferResponse_Succeeded::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.batch_id_.Destroy();
  _impl_.create_time_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayExecuteBatchTransferResponse_Succeeded::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayExecuteBatchTransferResponse.Succeeded)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.batch_id_.ClearToEmpty();
  _impl_.create_time_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayExecuteBatchTransferResponse_Succeeded::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 84, 2> PayExecuteBatchTransferResponse_Succeeded::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayExecuteBatchTransferResponse_Succeeded_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string create_time = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferResponse_Succeeded, _impl_.create_time_)}},
    // string batch_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferResponse_Succeeded, _impl_.batch_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string batch_id = 1;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferResponse_Succeeded, _impl_.batch_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string create_time = 2;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferResponse_Succeeded, _impl_.create_time_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\70\10\13\0\0\0\0\0"
    "palm.wechat.v1.PayExecuteBatchTransferResponse.Succeeded"
    "batch_id"
    "create_time"
  }},
};

::uint8_t* PayExecuteBatchTransferResponse_Succeeded::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayExecuteBatchTransferResponse.Succeeded)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string batch_id = 1;
  if (!this->_internal_batch_id().empty()) {
    const std::string& _s = this->_internal_batch_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayExecuteBatchTransferResponse.Succeeded.batch_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string create_time = 2;
  if (!this->_internal_create_time().empty()) {
    const std::string& _s = this->_internal_create_time();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayExecuteBatchTransferResponse.Succeeded.create_time");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayExecuteBatchTransferResponse.Succeeded)
  return target;
}

::size_t PayExecuteBatchTransferResponse_Succeeded::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayExecuteBatchTransferResponse.Succeeded)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string batch_id = 1;
  if (!this->_internal_batch_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_batch_id());
  }

  // string create_time = 2;
  if (!this->_internal_create_time().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_create_time());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayExecuteBatchTransferResponse_Succeeded::_class_data_ = {
    PayExecuteBatchTransferResponse_Succeeded::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayExecuteBatchTransferResponse_Succeeded::GetClassData() const {
  return &_class_data_;
}

void PayExecuteBatchTransferResponse_Succeeded::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayExecuteBatchTransferResponse_Succeeded*>(&to_msg);
  auto& from = static_cast<const PayExecuteBatchTransferResponse_Succeeded&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayExecuteBatchTransferResponse.Succeeded)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_batch_id().empty()) {
    _this->_internal_set_batch_id(from._internal_batch_id());
  }
  if (!from._internal_create_time().empty()) {
    _this->_internal_set_create_time(from._internal_create_time());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayExecuteBatchTransferResponse_Succeeded::CopyFrom(const PayExecuteBatchTransferResponse_Succeeded& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayExecuteBatchTransferResponse.Succeeded)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayExecuteBatchTransferResponse_Succeeded::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayExecuteBatchTransferResponse_Succeeded::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayExecuteBatchTransferResponse_Succeeded::InternalSwap(PayExecuteBatchTransferResponse_Succeeded* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.batch_id_, &other->_impl_.batch_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.create_time_, &other->_impl_.create_time_, arena);
}

::google::protobuf::Metadata PayExecuteBatchTransferResponse_Succeeded::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[31]);
}
// ===================================================================

class PayExecuteBatchTransferResponse::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
    PROTOBUF_FIELD_OFFSET(::palm::wechat::v1::PayExecuteBatchTransferResponse, _impl_._oneof_case_);
  static const ::palm::wechat::v1::PayExecuteBatchTransferResponse_Succeeded& succeeded(const PayExecuteBatchTransferResponse* msg);
  static const ::palm::wechat::v1::PayError& error(const PayExecuteBatchTransferResponse* msg);
};

const ::palm::wechat::v1::PayExecuteBatchTransferResponse_Succeeded& PayExecuteBatchTransferResponse::_Internal::succeeded(const PayExecuteBatchTransferResponse* msg) {
  return *msg->_impl_.payload_.succeeded_;
}
const ::palm::wechat::v1::PayError& PayExecuteBatchTransferResponse::_Internal::error(const PayExecuteBatchTransferResponse* msg) {
  return *msg->_impl_.payload_.error_;
}
void PayExecuteBatchTransferResponse::set_allocated_succeeded(::palm::wechat::v1::PayExecuteBatchTransferResponse_Succeeded* succeeded) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (succeeded) {
    ::google::protobuf::Arena* submessage_arena = succeeded->GetArena();
    if (message_arena != submessage_arena) {
      succeeded = ::google::protobuf::internal::GetOwnedMessage(message_arena, succeeded, submessage_arena);
    }
    set_has_succeeded();
    _impl_.payload_.succeeded_ = succeeded;
  }
  // @@protoc_insertion_point(field_set_allocated:palm.wechat.v1.PayExecuteBatchTransferResponse.succeeded)
}
void PayExecuteBatchTransferResponse::set_allocated_error(::palm::wechat::v1::PayError* error) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (error) {
    ::google::protobuf::Arena* submessage_arena = error->GetArena();
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(message_arena, error, submessage_arena);
    }
    set_has_error();
    _impl_.payload_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:palm.wechat.v1.PayExecuteBatchTransferResponse.error)
}
PayExecuteBatchTransferResponse::PayExecuteBatchTransferResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayExecuteBatchTransferResponse)
}
inline PROTOBUF_NDEBUG_INLINE PayExecuteBatchTransferResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : details_{visibility, arena, from.details_},
        out_batch_no_(arena, from.out_batch_no_),
        payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

PayExecuteBatchTransferResponse::PayExecuteBatchTransferResponse(
    ::google::protobuf::Arena* arena,
    const PayExecuteBatchTransferResponse& from)
    : ::google::protobuf::Message(arena) {
  PayExecuteBatchTransferResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kSucceeded:
        _impl_.payload_.succeeded_ = CreateMaybeMessage<::palm::wechat::v1::PayExecuteBatchTransferResponse_Succeeded>(arena, *from._impl_.payload_.succeeded_);
        break;
      case kError:
        _impl_.payload_.error_ = CreateMaybeMessage<::palm::wechat::v1::PayError>(arena, *from._impl_.payload_.error_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayExecuteBatchTransferResponse)
}
inline PROTOBUF_NDEBUG_INLINE PayExecuteBatchTransferResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : details_{visibility, arena},
        out_batch_no_(arena),
        payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void PayExecuteBatchTransferResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PayExecuteBatchTransferResponse::~PayExecuteBatchTransferResponse() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayExecuteBatchTransferResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayExecuteBatchTransferResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.out_batch_no_.Destroy();
  if (has_payload()) {
    clear_payload();
  }
  _impl_.~Impl_();
}

void PayExecuteBatchTransferResponse::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:palm.wechat.v1.PayExecuteBatchTransferResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  switch (payload_case()) {
    case kSucceeded: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.succeeded_;
      }
      break;
    }
    case kError: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.error_;
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


PROTOBUF_NOINLINE void PayExecuteBatchTransferResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayExecuteBatchTransferResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.details_.Clear();
  _impl_.out_batch_no_.ClearToEmpty();
  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayExecuteBatchTransferResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 4, 3, 67, 2> PayExecuteBatchTransferResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    12, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294964220,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PayExecuteBatchTransferResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .palm.wechat.v1.PayExecuteBatchTransferResponse.Detail details = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferResponse, _impl_.details_)}},
    // string out_batch_no = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferResponse, _impl_.out_batch_no_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string out_batch_no = 1;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferResponse, _impl_.out_batch_no_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated .palm.wechat.v1.PayExecuteBatchTransferResponse.Detail details = 2;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferResponse, _impl_.details_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // .palm.wechat.v1.PayExecuteBatchTransferResponse.Succeeded succeeded = 11;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferResponse, _impl_.payload_.succeeded_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .palm.wechat.v1.PayError error = 12;
    {PROTOBUF_FIELD_OFFSET(PayExecuteBatchTransferResponse, _impl_.payload_.error_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::wechat::v1::PayExecuteBatchTransferResponse_Detail>()},
    {::_pbi::TcParser::GetTable<::palm::wechat::v1::PayExecuteBatchTransferResponse_Succeeded>()},
    {::_pbi::TcParser::GetTable<::palm::wechat::v1::PayError>()},
  }}, {{
    "\56\14\0\0\0\0\0\0"
    "palm.wechat.v1.PayExecuteBatchTransferResponse"
    "out_batch_no"
  }},
};

::uint8_t* PayExecuteBatchTransferResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayExecuteBatchTransferResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string out_batch_no = 1;
  if (!this->_internal_out_batch_no().empty()) {
    const std::string& _s = this->_internal_out_batch_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayExecuteBatchTransferResponse.out_batch_no");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // repeated .palm.wechat.v1.PayExecuteBatchTransferResponse.Detail details = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_details_size()); i < n; i++) {
    const auto& repfield = this->_internal_details().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  switch (payload_case()) {
    case kSucceeded: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          11, _Internal::succeeded(this),
          _Internal::succeeded(this).GetCachedSize(), target, stream);
      break;
    }
    case kError: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          12, _Internal::error(this),
          _Internal::error(this).GetCachedSize(), target, stream);
      break;
    }
    default:
      break;
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayExecuteBatchTransferResponse)
  return target;
}

::size_t PayExecuteBatchTransferResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayExecuteBatchTransferResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.wechat.v1.PayExecuteBatchTransferResponse.Detail details = 2;
  total_size += 1UL * this->_internal_details_size();
  for (const auto& msg : this->_internal_details()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // string out_batch_no = 1;
  if (!this->_internal_out_batch_no().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_batch_no());
  }

  switch (payload_case()) {
    // .palm.wechat.v1.PayExecuteBatchTransferResponse.Succeeded succeeded = 11;
    case kSucceeded: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.succeeded_);
      break;
    }
    // .palm.wechat.v1.PayError error = 12;
    case kError: {
      total_size +=
          1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.payload_.error_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayExecuteBatchTransferResponse::_class_data_ = {
    PayExecuteBatchTransferResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayExecuteBatchTransferResponse::GetClassData() const {
  return &_class_data_;
}

void PayExecuteBatchTransferResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayExecuteBatchTransferResponse*>(&to_msg);
  auto& from = static_cast<const PayExecuteBatchTransferResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayExecuteBatchTransferResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_details()->MergeFrom(
      from._internal_details());
  if (!from._internal_out_batch_no().empty()) {
    _this->_internal_set_out_batch_no(from._internal_out_batch_no());
  }
  switch (from.payload_case()) {
    case kSucceeded: {
      _this->_internal_mutable_succeeded()->::palm::wechat::v1::PayExecuteBatchTransferResponse_Succeeded::MergeFrom(
          from._internal_succeeded());
      break;
    }
    case kError: {
      _this->_internal_mutable_error()->::palm::wechat::v1::PayError::MergeFrom(
          from._internal_error());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayExecuteBatchTransferResponse::CopyFrom(const PayExecuteBatchTransferResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayExecuteBatchTransferResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayExecuteBatchTransferResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayExecuteBatchTransferResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayExecuteBatchTransferResponse::InternalSwap(PayExecuteBatchTransferResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.details_.InternalSwap(&other->_impl_.details_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_batch_no_, &other->_impl_.out_batch_no_, arena);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata PayExecuteBatchTransferResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[32]);
}
// ===================================================================

class PayQueryBatchTransferRequest::_Internal {
 public:
};

PayQueryBatchTransferRequest::PayQueryBatchTransferRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayQueryBatchTransferRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayQueryBatchTransferRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : out_batch_no_(arena, from.out_batch_no_),
        _cached_size_{0} {}

PayQueryBatchTransferRequest::PayQueryBatchTransferRequest(
    ::google::protobuf::Arena* arena,
    const PayQueryBatchTransferRequest& from)
    : ::google::protobuf::Message(arena) {
  PayQueryBatchTransferRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, offset_),
           offsetof(Impl_, detail_status_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::detail_status_));

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayQueryBatchTransferRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayQueryBatchTransferRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : out_batch_no_(arena),
        _cached_size_{0} {}

inline void PayQueryBatchTransferRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, offset_),
           0,
           offsetof(Impl_, detail_status_) -
               offsetof(Impl_, offset_) +
               sizeof(Impl_::detail_status_));
}
PayQueryBatchTransferRequest::~PayQueryBatchTransferRequest() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayQueryBatchTransferRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayQueryBatchTransferRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.out_batch_no_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayQueryBatchTransferRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayQueryBatchTransferRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.out_batch_no_.ClearToEmpty();
  ::memset(&_impl_.offset_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.detail_status_) -
      reinterpret_cast<char*>(&_impl_.offset_)) + sizeof(_impl_.detail_status_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayQueryBatchTransferRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 64, 2> PayQueryBatchTransferRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    9, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967032,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayQueryBatchTransferRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string out_batch_no = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferRequest, _impl_.out_batch_no_)}},
    // int32 offset = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PayQueryBatchTransferRequest, _impl_.offset_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferRequest, _impl_.offset_)}},
    // int32 limit = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(PayQueryBatchTransferRequest, _impl_.limit_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferRequest, _impl_.limit_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string out_batch_no = 1;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferRequest, _impl_.out_batch_no_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 offset = 2;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferRequest, _impl_.offset_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // int32 limit = 3;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferRequest, _impl_.limit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // .palm.wechat.v1.PayQueryBatchTransferRequest.DetailStatus detail_status = 9;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferRequest, _impl_.detail_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
  }},
  // no aux_entries
  {{
    "\53\14\0\0\0\0\0\0"
    "palm.wechat.v1.PayQueryBatchTransferRequest"
    "out_batch_no"
  }},
};

::uint8_t* PayQueryBatchTransferRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayQueryBatchTransferRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string out_batch_no = 1;
  if (!this->_internal_out_batch_no().empty()) {
    const std::string& _s = this->_internal_out_batch_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryBatchTransferRequest.out_batch_no");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 offset = 2;
  if (this->_internal_offset() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_offset(), target);
  }

  // int32 limit = 3;
  if (this->_internal_limit() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<3>(
            stream, this->_internal_limit(), target);
  }

  // .palm.wechat.v1.PayQueryBatchTransferRequest.DetailStatus detail_status = 9;
  if (this->_internal_detail_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
        9, this->_internal_detail_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayQueryBatchTransferRequest)
  return target;
}

::size_t PayQueryBatchTransferRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayQueryBatchTransferRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string out_batch_no = 1;
  if (!this->_internal_out_batch_no().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_batch_no());
  }

  // int32 offset = 2;
  if (this->_internal_offset() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_offset());
  }

  // int32 limit = 3;
  if (this->_internal_limit() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_limit());
  }

  // .palm.wechat.v1.PayQueryBatchTransferRequest.DetailStatus detail_status = 9;
  if (this->_internal_detail_status() != 0) {
    total_size += 1 +
                  ::_pbi::WireFormatLite::EnumSize(this->_internal_detail_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayQueryBatchTransferRequest::_class_data_ = {
    PayQueryBatchTransferRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayQueryBatchTransferRequest::GetClassData() const {
  return &_class_data_;
}

void PayQueryBatchTransferRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayQueryBatchTransferRequest*>(&to_msg);
  auto& from = static_cast<const PayQueryBatchTransferRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayQueryBatchTransferRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_out_batch_no().empty()) {
    _this->_internal_set_out_batch_no(from._internal_out_batch_no());
  }
  if (from._internal_offset() != 0) {
    _this->_internal_set_offset(from._internal_offset());
  }
  if (from._internal_limit() != 0) {
    _this->_internal_set_limit(from._internal_limit());
  }
  if (from._internal_detail_status() != 0) {
    _this->_internal_set_detail_status(from._internal_detail_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayQueryBatchTransferRequest::CopyFrom(const PayQueryBatchTransferRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayQueryBatchTransferRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayQueryBatchTransferRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayQueryBatchTransferRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayQueryBatchTransferRequest::InternalSwap(PayQueryBatchTransferRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_batch_no_, &other->_impl_.out_batch_no_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferRequest, _impl_.detail_status_)
      + sizeof(PayQueryBatchTransferRequest::_impl_.detail_status_)
      - PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferRequest, _impl_.offset_)>(
          reinterpret_cast<char*>(&_impl_.offset_),
          reinterpret_cast<char*>(&other->_impl_.offset_));
}

::google::protobuf::Metadata PayQueryBatchTransferRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[33]);
}
// ===================================================================

class PayQueryBatchTransferResponse_Detail::_Internal {
 public:
};

PayQueryBatchTransferResponse_Detail::PayQueryBatchTransferResponse_Detail(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayQueryBatchTransferResponse.Detail)
}
inline PROTOBUF_NDEBUG_INLINE PayQueryBatchTransferResponse_Detail::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : detail_id_(arena, from.detail_id_),
        out_detail_no_(arena, from.out_detail_no_),
        status_(arena, from.status_),
        _cached_size_{0} {}

PayQueryBatchTransferResponse_Detail::PayQueryBatchTransferResponse_Detail(
    ::google::protobuf::Arena* arena,
    const PayQueryBatchTransferResponse_Detail& from)
    : ::google::protobuf::Message(arena) {
  PayQueryBatchTransferResponse_Detail* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayQueryBatchTransferResponse.Detail)
}
inline PROTOBUF_NDEBUG_INLINE PayQueryBatchTransferResponse_Detail::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : detail_id_(arena),
        out_detail_no_(arena),
        status_(arena),
        _cached_size_{0} {}

inline void PayQueryBatchTransferResponse_Detail::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PayQueryBatchTransferResponse_Detail::~PayQueryBatchTransferResponse_Detail() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayQueryBatchTransferResponse.Detail)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayQueryBatchTransferResponse_Detail::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.detail_id_.Destroy();
  _impl_.out_detail_no_.Destroy();
  _impl_.status_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayQueryBatchTransferResponse_Detail::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayQueryBatchTransferResponse.Detail)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.detail_id_.ClearToEmpty();
  _impl_.out_detail_no_.ClearToEmpty();
  _impl_.status_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayQueryBatchTransferResponse_Detail::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 88, 2> PayQueryBatchTransferResponse_Detail::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayQueryBatchTransferResponse_Detail_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string detail_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Detail, _impl_.detail_id_)}},
    // string out_detail_no = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Detail, _impl_.out_detail_no_)}},
    // string status = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Detail, _impl_.status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string detail_id = 1;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Detail, _impl_.detail_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string out_detail_no = 2;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Detail, _impl_.out_detail_no_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string status = 3;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Detail, _impl_.status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\63\11\15\6\0\0\0\0"
    "palm.wechat.v1.PayQueryBatchTransferResponse.Detail"
    "detail_id"
    "out_detail_no"
    "status"
  }},
};

::uint8_t* PayQueryBatchTransferResponse_Detail::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayQueryBatchTransferResponse.Detail)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string detail_id = 1;
  if (!this->_internal_detail_id().empty()) {
    const std::string& _s = this->_internal_detail_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryBatchTransferResponse.Detail.detail_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string out_detail_no = 2;
  if (!this->_internal_out_detail_no().empty()) {
    const std::string& _s = this->_internal_out_detail_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryBatchTransferResponse.Detail.out_detail_no");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string status = 3;
  if (!this->_internal_status().empty()) {
    const std::string& _s = this->_internal_status();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryBatchTransferResponse.Detail.status");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayQueryBatchTransferResponse.Detail)
  return target;
}

::size_t PayQueryBatchTransferResponse_Detail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayQueryBatchTransferResponse.Detail)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string detail_id = 1;
  if (!this->_internal_detail_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_detail_id());
  }

  // string out_detail_no = 2;
  if (!this->_internal_out_detail_no().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_detail_no());
  }

  // string status = 3;
  if (!this->_internal_status().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_status());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayQueryBatchTransferResponse_Detail::_class_data_ = {
    PayQueryBatchTransferResponse_Detail::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayQueryBatchTransferResponse_Detail::GetClassData() const {
  return &_class_data_;
}

void PayQueryBatchTransferResponse_Detail::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayQueryBatchTransferResponse_Detail*>(&to_msg);
  auto& from = static_cast<const PayQueryBatchTransferResponse_Detail&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayQueryBatchTransferResponse.Detail)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_detail_id().empty()) {
    _this->_internal_set_detail_id(from._internal_detail_id());
  }
  if (!from._internal_out_detail_no().empty()) {
    _this->_internal_set_out_detail_no(from._internal_out_detail_no());
  }
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayQueryBatchTransferResponse_Detail::CopyFrom(const PayQueryBatchTransferResponse_Detail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayQueryBatchTransferResponse.Detail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayQueryBatchTransferResponse_Detail::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayQueryBatchTransferResponse_Detail::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayQueryBatchTransferResponse_Detail::InternalSwap(PayQueryBatchTransferResponse_Detail* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.detail_id_, &other->_impl_.detail_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_detail_no_, &other->_impl_.out_detail_no_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
}

::google::protobuf::Metadata PayQueryBatchTransferResponse_Detail::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[34]);
}
// ===================================================================

class PayQueryBatchTransferResponse_Batch::_Internal {
 public:
  using HasBits = decltype(std::declval<PayQueryBatchTransferResponse_Batch>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_._has_bits_);
  static void set_has_close_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_create_time(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_update_time(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_success_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_success_num(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_fail_amount(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_fail_num(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

PayQueryBatchTransferResponse_Batch::PayQueryBatchTransferResponse_Batch(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayQueryBatchTransferResponse.Batch)
}
inline PROTOBUF_NDEBUG_INLINE PayQueryBatchTransferResponse_Batch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        app_id_(arena, from.app_id_),
        mch_id_(arena, from.mch_id_),
        transfer_scene_id_(arena, from.transfer_scene_id_),
        batch_id_(arena, from.batch_id_),
        out_batch_no_(arena, from.out_batch_no_),
        batch_status_(arena, from.batch_status_),
        batch_type_(arena, from.batch_type_),
        batch_name_(arena, from.batch_name_),
        batch_remark_(arena, from.batch_remark_),
        close_reason_(arena, from.close_reason_),
        create_time_(arena, from.create_time_),
        update_time_(arena, from.update_time_) {}

PayQueryBatchTransferResponse_Batch::PayQueryBatchTransferResponse_Batch(
    ::google::protobuf::Arena* arena,
    const PayQueryBatchTransferResponse_Batch& from)
    : ::google::protobuf::Message(arena) {
  PayQueryBatchTransferResponse_Batch* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_amount_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, total_amount_),
           offsetof(Impl_, fail_num_) -
               offsetof(Impl_, total_amount_) +
               sizeof(Impl_::fail_num_));

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayQueryBatchTransferResponse.Batch)
}
inline PROTOBUF_NDEBUG_INLINE PayQueryBatchTransferResponse_Batch::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        app_id_(arena),
        mch_id_(arena),
        transfer_scene_id_(arena),
        batch_id_(arena),
        out_batch_no_(arena),
        batch_status_(arena),
        batch_type_(arena),
        batch_name_(arena),
        batch_remark_(arena),
        close_reason_(arena),
        create_time_(arena),
        update_time_(arena) {}

inline void PayQueryBatchTransferResponse_Batch::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, total_amount_),
           0,
           offsetof(Impl_, fail_num_) -
               offsetof(Impl_, total_amount_) +
               sizeof(Impl_::fail_num_));
}
PayQueryBatchTransferResponse_Batch::~PayQueryBatchTransferResponse_Batch() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayQueryBatchTransferResponse.Batch)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayQueryBatchTransferResponse_Batch::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.app_id_.Destroy();
  _impl_.mch_id_.Destroy();
  _impl_.transfer_scene_id_.Destroy();
  _impl_.batch_id_.Destroy();
  _impl_.out_batch_no_.Destroy();
  _impl_.batch_status_.Destroy();
  _impl_.batch_type_.Destroy();
  _impl_.batch_name_.Destroy();
  _impl_.batch_remark_.Destroy();
  _impl_.close_reason_.Destroy();
  _impl_.create_time_.Destroy();
  _impl_.update_time_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayQueryBatchTransferResponse_Batch::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayQueryBatchTransferResponse.Batch)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.app_id_.ClearToEmpty();
  _impl_.mch_id_.ClearToEmpty();
  _impl_.transfer_scene_id_.ClearToEmpty();
  _impl_.batch_id_.ClearToEmpty();
  _impl_.out_batch_no_.ClearToEmpty();
  _impl_.batch_status_.ClearToEmpty();
  _impl_.batch_type_.ClearToEmpty();
  _impl_.batch_name_.ClearToEmpty();
  _impl_.batch_remark_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.close_reason_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.create_time_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.update_time_.ClearNonDefaultToEmpty();
    }
  }
  ::memset(&_impl_.total_amount_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.total_num_) -
      reinterpret_cast<char*>(&_impl_.total_amount_)) + sizeof(_impl_.total_num_));
  if (cached_has_bits & 0x00000078u) {
    ::memset(&_impl_.success_num_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.fail_num_) -
        reinterpret_cast<char*>(&_impl_.success_num_)) + sizeof(_impl_.fail_num_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayQueryBatchTransferResponse_Batch::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<5, 18, 0, 202, 2> PayQueryBatchTransferResponse_Batch::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_._has_bits_),
    0, // no _extensions_
    29, 248,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    3759080188,  // skipmap
    offsetof(decltype(_table_), field_entries),
    18,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayQueryBatchTransferResponse_Batch_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string app_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.app_id_)}},
    // string mch_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.mch_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string transfer_scene_id = 9;
    {::_pbi::TcParser::FastUS1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.transfer_scene_id_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string batch_id = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.batch_id_)}},
    // string out_batch_no = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.out_batch_no_)}},
    // string batch_status = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.batch_status_)}},
    // string batch_type = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.batch_type_)}},
    // string batch_name = 15;
    {::_pbi::TcParser::FastUS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.batch_name_)}},
    // string batch_remark = 16;
    {::_pbi::TcParser::FastUS2,
     {386, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.batch_remark_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // optional string close_reason = 21;
    {::_pbi::TcParser::FastUS2,
     {426, 0, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.close_reason_)}},
    // int64 total_amount = 22;
    {::_pbi::TcParser::FastV64S2,
     {432, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.total_amount_)}},
    // int32 total_num = 23;
    {::_pbi::TcParser::FastV32S2,
     {440, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.total_num_)}},
    // optional string create_time = 24;
    {::_pbi::TcParser::FastUS2,
     {450, 1, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.create_time_)}},
    // optional string update_time = 25;
    {::_pbi::TcParser::FastUS2,
     {458, 2, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.update_time_)}},
    // optional int64 success_amount = 26;
    {::_pbi::TcParser::FastV64S2,
     {464, 4, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.success_amount_)}},
    // optional int32 success_num = 27;
    {::_pbi::TcParser::FastV32S2,
     {472, 3, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.success_num_)}},
    // optional int64 fail_amount = 28;
    {::_pbi::TcParser::FastV64S2,
     {480, 5, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.fail_amount_)}},
    // optional int32 fail_num = 29;
    {::_pbi::TcParser::FastV32S2,
     {488, 6, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.fail_num_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string app_id = 1;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.app_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string mch_id = 2;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.mch_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string transfer_scene_id = 9;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.transfer_scene_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string batch_id = 11;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.batch_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string out_batch_no = 12;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.out_batch_no_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string batch_status = 13;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.batch_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string batch_type = 14;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.batch_type_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string batch_name = 15;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.batch_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string batch_remark = 16;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.batch_remark_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string close_reason = 21;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.close_reason_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 total_amount = 22;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.total_amount_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int32 total_num = 23;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.total_num_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // optional string create_time = 24;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.create_time_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string update_time = 25;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.update_time_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int64 success_amount = 26;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.success_amount_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 success_num = 27;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.success_num_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int64 fail_amount = 28;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.fail_amount_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // optional int32 fail_num = 29;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.fail_num_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\62\6\6\21\10\14\14\12\12\14\14\0\0\13\13\0\0\0\0\0\0\0\0\0"
    "palm.wechat.v1.PayQueryBatchTransferResponse.Batch"
    "app_id"
    "mch_id"
    "transfer_scene_id"
    "batch_id"
    "out_batch_no"
    "batch_status"
    "batch_type"
    "batch_name"
    "batch_remark"
    "close_reason"
    "create_time"
    "update_time"
  }},
};

::uint8_t* PayQueryBatchTransferResponse_Batch::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayQueryBatchTransferResponse.Batch)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryBatchTransferResponse.Batch.app_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string mch_id = 2;
  if (!this->_internal_mch_id().empty()) {
    const std::string& _s = this->_internal_mch_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryBatchTransferResponse.Batch.mch_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string transfer_scene_id = 9;
  if (!this->_internal_transfer_scene_id().empty()) {
    const std::string& _s = this->_internal_transfer_scene_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryBatchTransferResponse.Batch.transfer_scene_id");
    target = stream->WriteStringMaybeAliased(9, _s, target);
  }

  // string batch_id = 11;
  if (!this->_internal_batch_id().empty()) {
    const std::string& _s = this->_internal_batch_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryBatchTransferResponse.Batch.batch_id");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // string out_batch_no = 12;
  if (!this->_internal_out_batch_no().empty()) {
    const std::string& _s = this->_internal_out_batch_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryBatchTransferResponse.Batch.out_batch_no");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // string batch_status = 13;
  if (!this->_internal_batch_status().empty()) {
    const std::string& _s = this->_internal_batch_status();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryBatchTransferResponse.Batch.batch_status");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  // string batch_type = 14;
  if (!this->_internal_batch_type().empty()) {
    const std::string& _s = this->_internal_batch_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryBatchTransferResponse.Batch.batch_type");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // string batch_name = 15;
  if (!this->_internal_batch_name().empty()) {
    const std::string& _s = this->_internal_batch_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryBatchTransferResponse.Batch.batch_name");
    target = stream->WriteStringMaybeAliased(15, _s, target);
  }

  // string batch_remark = 16;
  if (!this->_internal_batch_remark().empty()) {
    const std::string& _s = this->_internal_batch_remark();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryBatchTransferResponse.Batch.batch_remark");
    target = stream->WriteStringMaybeAliased(16, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string close_reason = 21;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_close_reason();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryBatchTransferResponse.Batch.close_reason");
    target = stream->WriteStringMaybeAliased(21, _s, target);
  }

  // int64 total_amount = 22;
  if (this->_internal_total_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        22, this->_internal_total_amount(), target);
  }

  // int32 total_num = 23;
  if (this->_internal_total_num() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        23, this->_internal_total_num(), target);
  }

  // optional string create_time = 24;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_create_time();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryBatchTransferResponse.Batch.create_time");
    target = stream->WriteStringMaybeAliased(24, _s, target);
  }

  // optional string update_time = 25;
  if (cached_has_bits & 0x00000004u) {
    const std::string& _s = this->_internal_update_time();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryBatchTransferResponse.Batch.update_time");
    target = stream->WriteStringMaybeAliased(25, _s, target);
  }

  // optional int64 success_amount = 26;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        26, this->_internal_success_amount(), target);
  }

  // optional int32 success_num = 27;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        27, this->_internal_success_num(), target);
  }

  // optional int64 fail_amount = 28;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        28, this->_internal_fail_amount(), target);
  }

  // optional int32 fail_num = 29;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(
        29, this->_internal_fail_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayQueryBatchTransferResponse.Batch)
  return target;
}

::size_t PayQueryBatchTransferResponse_Batch::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayQueryBatchTransferResponse.Batch)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  // string mch_id = 2;
  if (!this->_internal_mch_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_mch_id());
  }

  // string transfer_scene_id = 9;
  if (!this->_internal_transfer_scene_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_transfer_scene_id());
  }

  // string batch_id = 11;
  if (!this->_internal_batch_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_batch_id());
  }

  // string out_batch_no = 12;
  if (!this->_internal_out_batch_no().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_batch_no());
  }

  // string batch_status = 13;
  if (!this->_internal_batch_status().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_batch_status());
  }

  // string batch_type = 14;
  if (!this->_internal_batch_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_batch_type());
  }

  // string batch_name = 15;
  if (!this->_internal_batch_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_batch_name());
  }

  // string batch_remark = 16;
  if (!this->_internal_batch_remark().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_batch_remark());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string close_reason = 21;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_close_reason());
    }

    // optional string create_time = 24;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_create_time());
    }

    // optional string update_time = 25;
    if (cached_has_bits & 0x00000004u) {
      total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this->_internal_update_time());
    }

  }
  // int64 total_amount = 22;
  if (this->_internal_total_amount() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                    this->_internal_total_amount());
  }

  // int32 total_num = 23;
  if (this->_internal_total_num() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                    this->_internal_total_num());
  }

  if (cached_has_bits & 0x00000078u) {
    // optional int32 success_num = 27;
    if (cached_has_bits & 0x00000008u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_success_num());
    }

    // optional int64 success_amount = 26;
    if (cached_has_bits & 0x00000010u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_success_amount());
    }

    // optional int64 fail_amount = 28;
    if (cached_has_bits & 0x00000020u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                      this->_internal_fail_amount());
    }

    // optional int32 fail_num = 29;
    if (cached_has_bits & 0x00000040u) {
      total_size += 2 + ::_pbi::WireFormatLite::Int32Size(
                                      this->_internal_fail_num());
    }

  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayQueryBatchTransferResponse_Batch::_class_data_ = {
    PayQueryBatchTransferResponse_Batch::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayQueryBatchTransferResponse_Batch::GetClassData() const {
  return &_class_data_;
}

void PayQueryBatchTransferResponse_Batch::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayQueryBatchTransferResponse_Batch*>(&to_msg);
  auto& from = static_cast<const PayQueryBatchTransferResponse_Batch&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayQueryBatchTransferResponse.Batch)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_mch_id().empty()) {
    _this->_internal_set_mch_id(from._internal_mch_id());
  }
  if (!from._internal_transfer_scene_id().empty()) {
    _this->_internal_set_transfer_scene_id(from._internal_transfer_scene_id());
  }
  if (!from._internal_batch_id().empty()) {
    _this->_internal_set_batch_id(from._internal_batch_id());
  }
  if (!from._internal_out_batch_no().empty()) {
    _this->_internal_set_out_batch_no(from._internal_out_batch_no());
  }
  if (!from._internal_batch_status().empty()) {
    _this->_internal_set_batch_status(from._internal_batch_status());
  }
  if (!from._internal_batch_type().empty()) {
    _this->_internal_set_batch_type(from._internal_batch_type());
  }
  if (!from._internal_batch_name().empty()) {
    _this->_internal_set_batch_name(from._internal_batch_name());
  }
  if (!from._internal_batch_remark().empty()) {
    _this->_internal_set_batch_remark(from._internal_batch_remark());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_close_reason(from._internal_close_reason());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_create_time(from._internal_create_time());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_update_time(from._internal_update_time());
    }
  }
  if (from._internal_total_amount() != 0) {
    _this->_internal_set_total_amount(from._internal_total_amount());
  }
  if (from._internal_total_num() != 0) {
    _this->_internal_set_total_num(from._internal_total_num());
  }
  if (cached_has_bits & 0x00000078u) {
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.success_num_ = from._impl_.success_num_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.success_amount_ = from._impl_.success_amount_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.fail_amount_ = from._impl_.fail_amount_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.fail_num_ = from._impl_.fail_num_;
    }
    _this->_impl_._has_bits_[0] |= cached_has_bits;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayQueryBatchTransferResponse_Batch::CopyFrom(const PayQueryBatchTransferResponse_Batch& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayQueryBatchTransferResponse.Batch)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayQueryBatchTransferResponse_Batch::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayQueryBatchTransferResponse_Batch::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayQueryBatchTransferResponse_Batch::InternalSwap(PayQueryBatchTransferResponse_Batch* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, &other->_impl_.app_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mch_id_, &other->_impl_.mch_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transfer_scene_id_, &other->_impl_.transfer_scene_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.batch_id_, &other->_impl_.batch_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_batch_no_, &other->_impl_.out_batch_no_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.batch_status_, &other->_impl_.batch_status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.batch_type_, &other->_impl_.batch_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.batch_name_, &other->_impl_.batch_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.batch_remark_, &other->_impl_.batch_remark_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.close_reason_, &other->_impl_.close_reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.create_time_, &other->_impl_.create_time_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.update_time_, &other->_impl_.update_time_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.fail_num_)
      + sizeof(PayQueryBatchTransferResponse_Batch::_impl_.fail_num_)
      - PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse_Batch, _impl_.total_amount_)>(
          reinterpret_cast<char*>(&_impl_.total_amount_),
          reinterpret_cast<char*>(&other->_impl_.total_amount_));
}

::google::protobuf::Metadata PayQueryBatchTransferResponse_Batch::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[35]);
}
// ===================================================================

class PayQueryBatchTransferResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<PayQueryBatchTransferResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse, _impl_._has_bits_);
  static const ::palm::wechat::v1::PayQueryBatchTransferResponse_Batch& batch(const PayQueryBatchTransferResponse* msg);
  static void set_has_batch(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::wechat::v1::PayQueryBatchTransferResponse_Batch& PayQueryBatchTransferResponse::_Internal::batch(const PayQueryBatchTransferResponse* msg) {
  return *msg->_impl_.batch_;
}
PayQueryBatchTransferResponse::PayQueryBatchTransferResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayQueryBatchTransferResponse)
}
inline PROTOBUF_NDEBUG_INLINE PayQueryBatchTransferResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        details_{visibility, arena, from.details_} {}

PayQueryBatchTransferResponse::PayQueryBatchTransferResponse(
    ::google::protobuf::Arena* arena,
    const PayQueryBatchTransferResponse& from)
    : ::google::protobuf::Message(arena) {
  PayQueryBatchTransferResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.batch_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::palm::wechat::v1::PayQueryBatchTransferResponse_Batch>(arena, *from._impl_.batch_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayQueryBatchTransferResponse)
}
inline PROTOBUF_NDEBUG_INLINE PayQueryBatchTransferResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        details_{visibility, arena} {}

inline void PayQueryBatchTransferResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.batch_ = {};
}
PayQueryBatchTransferResponse::~PayQueryBatchTransferResponse() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayQueryBatchTransferResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayQueryBatchTransferResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.batch_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayQueryBatchTransferResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayQueryBatchTransferResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.details_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.batch_ != nullptr);
    _impl_.batch_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayQueryBatchTransferResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2> PayQueryBatchTransferResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse, _impl_._has_bits_),
    0, // no _extensions_
    9, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967038,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_PayQueryBatchTransferResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .palm.wechat.v1.PayQueryBatchTransferResponse.Batch batch = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse, _impl_.batch_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .palm.wechat.v1.PayQueryBatchTransferResponse.Batch batch = 1;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse, _impl_.batch_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .palm.wechat.v1.PayQueryBatchTransferResponse.Detail details = 9;
    {PROTOBUF_FIELD_OFFSET(PayQueryBatchTransferResponse, _impl_.details_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::palm::wechat::v1::PayQueryBatchTransferResponse_Batch>()},
    {::_pbi::TcParser::GetTable<::palm::wechat::v1::PayQueryBatchTransferResponse_Detail>()},
  }}, {{
  }},
};

::uint8_t* PayQueryBatchTransferResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayQueryBatchTransferResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .palm.wechat.v1.PayQueryBatchTransferResponse.Batch batch = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::batch(this),
        _Internal::batch(this).GetCachedSize(), target, stream);
  }

  // repeated .palm.wechat.v1.PayQueryBatchTransferResponse.Detail details = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_details_size()); i < n; i++) {
    const auto& repfield = this->_internal_details().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayQueryBatchTransferResponse)
  return target;
}

::size_t PayQueryBatchTransferResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayQueryBatchTransferResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .palm.wechat.v1.PayQueryBatchTransferResponse.Detail details = 9;
  total_size += 1UL * this->_internal_details_size();
  for (const auto& msg : this->_internal_details()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .palm.wechat.v1.PayQueryBatchTransferResponse.Batch batch = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.batch_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayQueryBatchTransferResponse::_class_data_ = {
    PayQueryBatchTransferResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayQueryBatchTransferResponse::GetClassData() const {
  return &_class_data_;
}

void PayQueryBatchTransferResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayQueryBatchTransferResponse*>(&to_msg);
  auto& from = static_cast<const PayQueryBatchTransferResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayQueryBatchTransferResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_details()->MergeFrom(
      from._internal_details());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_batch()->::palm::wechat::v1::PayQueryBatchTransferResponse_Batch::MergeFrom(
        from._internal_batch());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayQueryBatchTransferResponse::CopyFrom(const PayQueryBatchTransferResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayQueryBatchTransferResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayQueryBatchTransferResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayQueryBatchTransferResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayQueryBatchTransferResponse::InternalSwap(PayQueryBatchTransferResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.details_.InternalSwap(&other->_impl_.details_);
  swap(_impl_.batch_, other->_impl_.batch_);
}

::google::protobuf::Metadata PayQueryBatchTransferResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[36]);
}
// ===================================================================

class PayQueryTransferDetailRequest::_Internal {
 public:
};

PayQueryTransferDetailRequest::PayQueryTransferDetailRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayQueryTransferDetailRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayQueryTransferDetailRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : out_batch_no_(arena, from.out_batch_no_),
        out_detail_no_(arena, from.out_detail_no_),
        _cached_size_{0} {}

PayQueryTransferDetailRequest::PayQueryTransferDetailRequest(
    ::google::protobuf::Arena* arena,
    const PayQueryTransferDetailRequest& from)
    : ::google::protobuf::Message(arena) {
  PayQueryTransferDetailRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayQueryTransferDetailRequest)
}
inline PROTOBUF_NDEBUG_INLINE PayQueryTransferDetailRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : out_batch_no_(arena),
        out_detail_no_(arena),
        _cached_size_{0} {}

inline void PayQueryTransferDetailRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
PayQueryTransferDetailRequest::~PayQueryTransferDetailRequest() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayQueryTransferDetailRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayQueryTransferDetailRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.out_batch_no_.Destroy();
  _impl_.out_detail_no_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayQueryTransferDetailRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayQueryTransferDetailRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.out_batch_no_.ClearToEmpty();
  _impl_.out_detail_no_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayQueryTransferDetailRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 78, 2> PayQueryTransferDetailRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayQueryTransferDetailRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string out_detail_no = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailRequest, _impl_.out_detail_no_)}},
    // string out_batch_no = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailRequest, _impl_.out_batch_no_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string out_batch_no = 1;
    {PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailRequest, _impl_.out_batch_no_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string out_detail_no = 2;
    {PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailRequest, _impl_.out_detail_no_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\54\14\15\0\0\0\0\0"
    "palm.wechat.v1.PayQueryTransferDetailRequest"
    "out_batch_no"
    "out_detail_no"
  }},
};

::uint8_t* PayQueryTransferDetailRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayQueryTransferDetailRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string out_batch_no = 1;
  if (!this->_internal_out_batch_no().empty()) {
    const std::string& _s = this->_internal_out_batch_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryTransferDetailRequest.out_batch_no");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string out_detail_no = 2;
  if (!this->_internal_out_detail_no().empty()) {
    const std::string& _s = this->_internal_out_detail_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryTransferDetailRequest.out_detail_no");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayQueryTransferDetailRequest)
  return target;
}

::size_t PayQueryTransferDetailRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayQueryTransferDetailRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string out_batch_no = 1;
  if (!this->_internal_out_batch_no().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_batch_no());
  }

  // string out_detail_no = 2;
  if (!this->_internal_out_detail_no().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_detail_no());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayQueryTransferDetailRequest::_class_data_ = {
    PayQueryTransferDetailRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayQueryTransferDetailRequest::GetClassData() const {
  return &_class_data_;
}

void PayQueryTransferDetailRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayQueryTransferDetailRequest*>(&to_msg);
  auto& from = static_cast<const PayQueryTransferDetailRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayQueryTransferDetailRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_out_batch_no().empty()) {
    _this->_internal_set_out_batch_no(from._internal_out_batch_no());
  }
  if (!from._internal_out_detail_no().empty()) {
    _this->_internal_set_out_detail_no(from._internal_out_detail_no());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayQueryTransferDetailRequest::CopyFrom(const PayQueryTransferDetailRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayQueryTransferDetailRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayQueryTransferDetailRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayQueryTransferDetailRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayQueryTransferDetailRequest::InternalSwap(PayQueryTransferDetailRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_batch_no_, &other->_impl_.out_batch_no_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_detail_no_, &other->_impl_.out_detail_no_, arena);
}

::google::protobuf::Metadata PayQueryTransferDetailRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[37]);
}
// ===================================================================

class PayQueryTransferDetailResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<PayQueryTransferDetailResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_._has_bits_);
  static void set_has_user_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_fail_reason(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

PayQueryTransferDetailResponse::PayQueryTransferDetailResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:palm.wechat.v1.PayQueryTransferDetailResponse)
}
inline PROTOBUF_NDEBUG_INLINE PayQueryTransferDetailResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        app_id_(arena, from.app_id_),
        mch_id_(arena, from.mch_id_),
        open_id_(arena, from.open_id_),
        user_name_(arena, from.user_name_),
        batch_id_(arena, from.batch_id_),
        out_batch_no_(arena, from.out_batch_no_),
        out_detail_no_(arena, from.out_detail_no_),
        detail_id_(arena, from.detail_id_),
        detail_status_(arena, from.detail_status_),
        transfer_remark_(arena, from.transfer_remark_),
        fail_reason_(arena, from.fail_reason_),
        initiate_time_(arena, from.initiate_time_),
        update_time_(arena, from.update_time_) {}

PayQueryTransferDetailResponse::PayQueryTransferDetailResponse(
    ::google::protobuf::Arena* arena,
    const PayQueryTransferDetailResponse& from)
    : ::google::protobuf::Message(arena) {
  PayQueryTransferDetailResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.transfer_amount_ = from._impl_.transfer_amount_;

  // @@protoc_insertion_point(copy_constructor:palm.wechat.v1.PayQueryTransferDetailResponse)
}
inline PROTOBUF_NDEBUG_INLINE PayQueryTransferDetailResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        app_id_(arena),
        mch_id_(arena),
        open_id_(arena),
        user_name_(arena),
        batch_id_(arena),
        out_batch_no_(arena),
        out_detail_no_(arena),
        detail_id_(arena),
        detail_status_(arena),
        transfer_remark_(arena),
        fail_reason_(arena),
        initiate_time_(arena),
        update_time_(arena) {}

inline void PayQueryTransferDetailResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.transfer_amount_ = {};
}
PayQueryTransferDetailResponse::~PayQueryTransferDetailResponse() {
  // @@protoc_insertion_point(destructor:palm.wechat.v1.PayQueryTransferDetailResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void PayQueryTransferDetailResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.app_id_.Destroy();
  _impl_.mch_id_.Destroy();
  _impl_.open_id_.Destroy();
  _impl_.user_name_.Destroy();
  _impl_.batch_id_.Destroy();
  _impl_.out_batch_no_.Destroy();
  _impl_.out_detail_no_.Destroy();
  _impl_.detail_id_.Destroy();
  _impl_.detail_status_.Destroy();
  _impl_.transfer_remark_.Destroy();
  _impl_.fail_reason_.Destroy();
  _impl_.initiate_time_.Destroy();
  _impl_.update_time_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void PayQueryTransferDetailResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.wechat.v1.PayQueryTransferDetailResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.app_id_.ClearToEmpty();
  _impl_.mch_id_.ClearToEmpty();
  _impl_.open_id_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.user_name_.ClearNonDefaultToEmpty();
  }
  _impl_.batch_id_.ClearToEmpty();
  _impl_.out_batch_no_.ClearToEmpty();
  _impl_.out_detail_no_.ClearToEmpty();
  _impl_.detail_id_.ClearToEmpty();
  _impl_.detail_status_.ClearToEmpty();
  _impl_.transfer_remark_.ClearToEmpty();
  if (cached_has_bits & 0x00000002u) {
    _impl_.fail_reason_.ClearNonDefaultToEmpty();
  }
  _impl_.initiate_time_.ClearToEmpty();
  _impl_.update_time_.ClearToEmpty();
  _impl_.transfer_amount_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* PayQueryTransferDetailResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 14, 0, 195, 2> PayQueryTransferDetailResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_._has_bits_),
    0, // no _extensions_
    20, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4293919728,  // skipmap
    offsetof(decltype(_table_), field_entries),
    14,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_PayQueryTransferDetailResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 transfer_amount = 16;
    {::_pbi::TcParser::FastV64S2,
     {384, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.transfer_amount_)}},
    // string app_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.app_id_)}},
    // string mch_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.mch_id_)}},
    // string open_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.open_id_)}},
    // optional string user_name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.user_name_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    // string batch_id = 11;
    {::_pbi::TcParser::FastUS1,
     {90, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.batch_id_)}},
    // string out_batch_no = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.out_batch_no_)}},
    // string out_detail_no = 13;
    {::_pbi::TcParser::FastUS1,
     {106, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.out_detail_no_)}},
    // string detail_id = 14;
    {::_pbi::TcParser::FastUS1,
     {114, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.detail_id_)}},
    // string detail_status = 15;
    {::_pbi::TcParser::FastUS1,
     {122, 63, 0, PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.detail_status_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string app_id = 1;
    {PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.app_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string mch_id = 2;
    {PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.mch_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string open_id = 3;
    {PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.open_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string user_name = 4;
    {PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.user_name_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string batch_id = 11;
    {PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.batch_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string out_batch_no = 12;
    {PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.out_batch_no_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string out_detail_no = 13;
    {PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.out_detail_no_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string detail_id = 14;
    {PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.detail_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string detail_status = 15;
    {PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.detail_status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 transfer_amount = 16;
    {PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.transfer_amount_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string transfer_remark = 17;
    {PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.transfer_remark_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string fail_reason = 18;
    {PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.fail_reason_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string initiate_time = 19;
    {PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.initiate_time_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string update_time = 20;
    {PROTOBUF_FIELD_OFFSET(PayQueryTransferDetailResponse, _impl_.update_time_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\6\6\7\11\10\14\15\11\15\0\17\13\15\13\0"
    "palm.wechat.v1.PayQueryTransferDetailResponse"
    "app_id"
    "mch_id"
    "open_id"
    "user_name"
    "batch_id"
    "out_batch_no"
    "out_detail_no"
    "detail_id"
    "detail_status"
    "transfer_remark"
    "fail_reason"
    "initiate_time"
    "update_time"
  }},
};

::uint8_t* PayQueryTransferDetailResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.wechat.v1.PayQueryTransferDetailResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    const std::string& _s = this->_internal_app_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryTransferDetailResponse.app_id");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string mch_id = 2;
  if (!this->_internal_mch_id().empty()) {
    const std::string& _s = this->_internal_mch_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryTransferDetailResponse.mch_id");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string open_id = 3;
  if (!this->_internal_open_id().empty()) {
    const std::string& _s = this->_internal_open_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryTransferDetailResponse.open_id");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  cached_has_bits = _impl_._has_bits_[0];
  // optional string user_name = 4;
  if (cached_has_bits & 0x00000001u) {
    const std::string& _s = this->_internal_user_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryTransferDetailResponse.user_name");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string batch_id = 11;
  if (!this->_internal_batch_id().empty()) {
    const std::string& _s = this->_internal_batch_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryTransferDetailResponse.batch_id");
    target = stream->WriteStringMaybeAliased(11, _s, target);
  }

  // string out_batch_no = 12;
  if (!this->_internal_out_batch_no().empty()) {
    const std::string& _s = this->_internal_out_batch_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryTransferDetailResponse.out_batch_no");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // string out_detail_no = 13;
  if (!this->_internal_out_detail_no().empty()) {
    const std::string& _s = this->_internal_out_detail_no();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryTransferDetailResponse.out_detail_no");
    target = stream->WriteStringMaybeAliased(13, _s, target);
  }

  // string detail_id = 14;
  if (!this->_internal_detail_id().empty()) {
    const std::string& _s = this->_internal_detail_id();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryTransferDetailResponse.detail_id");
    target = stream->WriteStringMaybeAliased(14, _s, target);
  }

  // string detail_status = 15;
  if (!this->_internal_detail_status().empty()) {
    const std::string& _s = this->_internal_detail_status();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryTransferDetailResponse.detail_status");
    target = stream->WriteStringMaybeAliased(15, _s, target);
  }

  // int64 transfer_amount = 16;
  if (this->_internal_transfer_amount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(
        16, this->_internal_transfer_amount(), target);
  }

  // string transfer_remark = 17;
  if (!this->_internal_transfer_remark().empty()) {
    const std::string& _s = this->_internal_transfer_remark();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryTransferDetailResponse.transfer_remark");
    target = stream->WriteStringMaybeAliased(17, _s, target);
  }

  // optional string fail_reason = 18;
  if (cached_has_bits & 0x00000002u) {
    const std::string& _s = this->_internal_fail_reason();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryTransferDetailResponse.fail_reason");
    target = stream->WriteStringMaybeAliased(18, _s, target);
  }

  // string initiate_time = 19;
  if (!this->_internal_initiate_time().empty()) {
    const std::string& _s = this->_internal_initiate_time();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryTransferDetailResponse.initiate_time");
    target = stream->WriteStringMaybeAliased(19, _s, target);
  }

  // string update_time = 20;
  if (!this->_internal_update_time().empty()) {
    const std::string& _s = this->_internal_update_time();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "palm.wechat.v1.PayQueryTransferDetailResponse.update_time");
    target = stream->WriteStringMaybeAliased(20, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.wechat.v1.PayQueryTransferDetailResponse)
  return target;
}

::size_t PayQueryTransferDetailResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.wechat.v1.PayQueryTransferDetailResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string app_id = 1;
  if (!this->_internal_app_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_app_id());
  }

  // string mch_id = 2;
  if (!this->_internal_mch_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_mch_id());
  }

  // string open_id = 3;
  if (!this->_internal_open_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_open_id());
  }

  // optional string user_name = 4;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_user_name());
  }

  // string batch_id = 11;
  if (!this->_internal_batch_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_batch_id());
  }

  // string out_batch_no = 12;
  if (!this->_internal_out_batch_no().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_batch_no());
  }

  // string out_detail_no = 13;
  if (!this->_internal_out_detail_no().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_out_detail_no());
  }

  // string detail_id = 14;
  if (!this->_internal_detail_id().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_detail_id());
  }

  // string detail_status = 15;
  if (!this->_internal_detail_status().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_detail_status());
  }

  // string transfer_remark = 17;
  if (!this->_internal_transfer_remark().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_transfer_remark());
  }

  // optional string fail_reason = 18;
  if (cached_has_bits & 0x00000002u) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_fail_reason());
  }

  // string initiate_time = 19;
  if (!this->_internal_initiate_time().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_initiate_time());
  }

  // string update_time = 20;
  if (!this->_internal_update_time().empty()) {
    total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_update_time());
  }

  // int64 transfer_amount = 16;
  if (this->_internal_transfer_amount() != 0) {
    total_size += 2 + ::_pbi::WireFormatLite::Int64Size(
                                    this->_internal_transfer_amount());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData PayQueryTransferDetailResponse::_class_data_ = {
    PayQueryTransferDetailResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* PayQueryTransferDetailResponse::GetClassData() const {
  return &_class_data_;
}

void PayQueryTransferDetailResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<PayQueryTransferDetailResponse*>(&to_msg);
  auto& from = static_cast<const PayQueryTransferDetailResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.wechat.v1.PayQueryTransferDetailResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_app_id().empty()) {
    _this->_internal_set_app_id(from._internal_app_id());
  }
  if (!from._internal_mch_id().empty()) {
    _this->_internal_set_mch_id(from._internal_mch_id());
  }
  if (!from._internal_open_id().empty()) {
    _this->_internal_set_open_id(from._internal_open_id());
  }
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_set_user_name(from._internal_user_name());
  }
  if (!from._internal_batch_id().empty()) {
    _this->_internal_set_batch_id(from._internal_batch_id());
  }
  if (!from._internal_out_batch_no().empty()) {
    _this->_internal_set_out_batch_no(from._internal_out_batch_no());
  }
  if (!from._internal_out_detail_no().empty()) {
    _this->_internal_set_out_detail_no(from._internal_out_detail_no());
  }
  if (!from._internal_detail_id().empty()) {
    _this->_internal_set_detail_id(from._internal_detail_id());
  }
  if (!from._internal_detail_status().empty()) {
    _this->_internal_set_detail_status(from._internal_detail_status());
  }
  if (!from._internal_transfer_remark().empty()) {
    _this->_internal_set_transfer_remark(from._internal_transfer_remark());
  }
  if ((from._impl_._has_bits_[0] & 0x00000002u) != 0) {
    _this->_internal_set_fail_reason(from._internal_fail_reason());
  }
  if (!from._internal_initiate_time().empty()) {
    _this->_internal_set_initiate_time(from._internal_initiate_time());
  }
  if (!from._internal_update_time().empty()) {
    _this->_internal_set_update_time(from._internal_update_time());
  }
  if (from._internal_transfer_amount() != 0) {
    _this->_internal_set_transfer_amount(from._internal_transfer_amount());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PayQueryTransferDetailResponse::CopyFrom(const PayQueryTransferDetailResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.wechat.v1.PayQueryTransferDetailResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool PayQueryTransferDetailResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* PayQueryTransferDetailResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void PayQueryTransferDetailResponse::InternalSwap(PayQueryTransferDetailResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.app_id_, &other->_impl_.app_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mch_id_, &other->_impl_.mch_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.open_id_, &other->_impl_.open_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_name_, &other->_impl_.user_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.batch_id_, &other->_impl_.batch_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_batch_no_, &other->_impl_.out_batch_no_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.out_detail_no_, &other->_impl_.out_detail_no_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.detail_id_, &other->_impl_.detail_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.detail_status_, &other->_impl_.detail_status_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.transfer_remark_, &other->_impl_.transfer_remark_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.fail_reason_, &other->_impl_.fail_reason_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.initiate_time_, &other->_impl_.initiate_time_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.update_time_, &other->_impl_.update_time_, arena);
        swap(_impl_.transfer_amount_, other->_impl_.transfer_amount_);
}

::google::protobuf::Metadata PayQueryTransferDetailResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_wechat_2eproto_getter, &descriptor_table_wechat_2eproto_once,
      file_level_metadata_wechat_2eproto[38]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace wechat
}  // namespace palm
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
