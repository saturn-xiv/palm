// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google.proto

#include "google.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace palm {
namespace google {
namespace v1 {
PROTOBUF_CONSTEXPR Oauth2AuthCodeURLRequest::Oauth2AuthCodeURLRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.subject_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}} {}
struct Oauth2AuthCodeURLRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Oauth2AuthCodeURLRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Oauth2AuthCodeURLRequestDefaultTypeInternal() {}
  union {
    Oauth2AuthCodeURLRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Oauth2AuthCodeURLRequestDefaultTypeInternal _Oauth2AuthCodeURLRequest_default_instance_;
PROTOBUF_CONSTEXPR Oauth2AuthCodeURLResponse::Oauth2AuthCodeURLResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.url_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Oauth2AuthCodeURLResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Oauth2AuthCodeURLResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Oauth2AuthCodeURLResponseDefaultTypeInternal() {}
  union {
    Oauth2AuthCodeURLResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Oauth2AuthCodeURLResponseDefaultTypeInternal _Oauth2AuthCodeURLResponse_default_instance_;
PROTOBUF_CONSTEXPR Oauth2SignInRequest::Oauth2SignInRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.state_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct Oauth2SignInRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Oauth2SignInRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Oauth2SignInRequestDefaultTypeInternal() {}
  union {
    Oauth2SignInRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Oauth2SignInRequestDefaultTypeInternal _Oauth2SignInRequest_default_instance_;
PROTOBUF_CONSTEXPR Oauth2SignInResponse_OpenId::Oauth2SignInResponse_OpenId(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.subject_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.email_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.picture_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.locale_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.profile_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.email_verified_)*/false} {}
struct Oauth2SignInResponse_OpenIdDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Oauth2SignInResponse_OpenIdDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Oauth2SignInResponse_OpenIdDefaultTypeInternal() {}
  union {
    Oauth2SignInResponse_OpenId _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Oauth2SignInResponse_OpenIdDefaultTypeInternal _Oauth2SignInResponse_OpenId_default_instance_;
PROTOBUF_CONSTEXPR Oauth2SignInResponse::Oauth2SignInResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._has_bits_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_.token_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.subject_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.open_id_)*/nullptr} {}
struct Oauth2SignInResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR Oauth2SignInResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~Oauth2SignInResponseDefaultTypeInternal() {}
  union {
    Oauth2SignInResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 Oauth2SignInResponseDefaultTypeInternal _Oauth2SignInResponse_default_instance_;
}  // namespace v1
}  // namespace google
}  // namespace palm
static ::_pb::Metadata file_level_metadata_google_2eproto[5];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_google_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_google_2eproto = nullptr;

const uint32_t TableStruct_google_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2AuthCodeURLRequest, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2AuthCodeURLRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2AuthCodeURLRequest, _impl_.subject_),
  0,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2AuthCodeURLResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2AuthCodeURLResponse, _impl_.url_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2SignInRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2SignInRequest, _impl_.code_),
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2SignInRequest, _impl_.state_),
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2SignInResponse_OpenId, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2SignInResponse_OpenId, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2SignInResponse_OpenId, _impl_.subject_),
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2SignInResponse_OpenId, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2SignInResponse_OpenId, _impl_.email_),
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2SignInResponse_OpenId, _impl_.email_verified_),
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2SignInResponse_OpenId, _impl_.picture_),
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2SignInResponse_OpenId, _impl_.locale_),
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2SignInResponse_OpenId, _impl_.profile_),
  ~0u,
  0,
  1,
  ~0u,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2SignInResponse, _impl_._has_bits_),
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2SignInResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2SignInResponse, _impl_.open_id_),
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2SignInResponse, _impl_.token_),
  PROTOBUF_FIELD_OFFSET(::palm::google::v1::Oauth2SignInResponse, _impl_.subject_),
  ~0u,
  ~0u,
  0,
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, -1, sizeof(::palm::google::v1::Oauth2AuthCodeURLRequest)},
  { 8, -1, -1, sizeof(::palm::google::v1::Oauth2AuthCodeURLResponse)},
  { 15, -1, -1, sizeof(::palm::google::v1::Oauth2SignInRequest)},
  { 23, 36, -1, sizeof(::palm::google::v1::Oauth2SignInResponse_OpenId)},
  { 43, 52, -1, sizeof(::palm::google::v1::Oauth2SignInResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::palm::google::v1::_Oauth2AuthCodeURLRequest_default_instance_._instance,
  &::palm::google::v1::_Oauth2AuthCodeURLResponse_default_instance_._instance,
  &::palm::google::v1::_Oauth2SignInRequest_default_instance_._instance,
  &::palm::google::v1::_Oauth2SignInResponse_OpenId_default_instance_._instance,
  &::palm::google::v1::_Oauth2SignInResponse_default_instance_._instance,
};

const char descriptor_table_protodef_google_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\014google.proto\022\016palm.google.v1\"<\n\030Oauth2"
  "AuthCodeURLRequest\022\024\n\007subject\030\001 \001(\tH\000\210\001\001"
  "B\n\n\010_subject\"(\n\031Oauth2AuthCodeURLRespons"
  "e\022\013\n\003url\030\001 \001(\t\"2\n\023Oauth2SignInRequest\022\014\n"
  "\004code\030\001 \001(\t\022\r\n\005state\030\002 \001(\t\"\327\002\n\024Oauth2Sig"
  "nInResponse\022<\n\007open_id\030\001 \001(\0132+.palm.goog"
  "le.v1.Oauth2SignInResponse.OpenId\022\r\n\005tok"
  "en\030\002 \001(\014\022\024\n\007subject\030c \001(\tH\000\210\001\001\032\317\001\n\006OpenI"
  "d\022\017\n\007subject\030\001 \001(\t\022\021\n\004name\030\002 \001(\tH\000\210\001\001\022\022\n"
  "\005email\030\003 \001(\tH\001\210\001\001\022\026\n\016email_verified\030\004 \001("
  "\010\022\024\n\007picture\030\007 \001(\tH\002\210\001\001\022\023\n\006locale\030\010 \001(\tH"
  "\003\210\001\001\022\024\n\007profile\030\t \001(\tH\004\210\001\001B\007\n\005_nameB\010\n\006_"
  "emailB\n\n\010_pictureB\t\n\007_localeB\n\n\010_profile"
  "B\n\n\010_subject2\305\001\n\006Oauth2\022d\n\013AuthCodeURL\022("
  ".palm.google.v1.Oauth2AuthCodeURLRequest"
  "\032).palm.google.v1.Oauth2AuthCodeURLRespo"
  "nse\"\000\022U\n\006SignIn\022#.palm.google.v1.Oauth2S"
  "ignInRequest\032$.palm.google.v1.Oauth2Sign"
  "InResponse\"\000B_\n,com.github.saturn_xiv.pa"
  "lm.plugins.google.v1P\001Z-github.com/satur"
  "n-xiv/palm/google/services/v2b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_google_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_google_2eproto = {
    false, false, 837, descriptor_table_protodef_google_2eproto,
    "google.proto",
    &descriptor_table_google_2eproto_once, nullptr, 0, 5,
    schemas, file_default_instances, TableStruct_google_2eproto::offsets,
    file_level_metadata_google_2eproto, file_level_enum_descriptors_google_2eproto,
    file_level_service_descriptors_google_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_google_2eproto_getter() {
  return &descriptor_table_google_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_google_2eproto(&descriptor_table_google_2eproto);
namespace palm {
namespace google {
namespace v1 {

// ===================================================================

class Oauth2AuthCodeURLRequest::_Internal {
 public:
  using HasBits = decltype(std::declval<Oauth2AuthCodeURLRequest>()._impl_._has_bits_);
  static void set_has_subject(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Oauth2AuthCodeURLRequest::Oauth2AuthCodeURLRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.google.v1.Oauth2AuthCodeURLRequest)
}
Oauth2AuthCodeURLRequest::Oauth2AuthCodeURLRequest(const Oauth2AuthCodeURLRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Oauth2AuthCodeURLRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.subject_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.subject_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.subject_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_subject()) {
    _this->_impl_.subject_.Set(from._internal_subject(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.google.v1.Oauth2AuthCodeURLRequest)
}

inline void Oauth2AuthCodeURLRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.subject_){}
  };
  _impl_.subject_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.subject_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Oauth2AuthCodeURLRequest::~Oauth2AuthCodeURLRequest() {
  // @@protoc_insertion_point(destructor:palm.google.v1.Oauth2AuthCodeURLRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Oauth2AuthCodeURLRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.subject_.Destroy();
}

void Oauth2AuthCodeURLRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Oauth2AuthCodeURLRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.google.v1.Oauth2AuthCodeURLRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.subject_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Oauth2AuthCodeURLRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // optional string subject = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_subject();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.google.v1.Oauth2AuthCodeURLRequest.subject"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Oauth2AuthCodeURLRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.google.v1.Oauth2AuthCodeURLRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // optional string subject = 1;
  if (_internal_has_subject()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subject().data(), static_cast<int>(this->_internal_subject().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.google.v1.Oauth2AuthCodeURLRequest.subject");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_subject(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.google.v1.Oauth2AuthCodeURLRequest)
  return target;
}

size_t Oauth2AuthCodeURLRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.google.v1.Oauth2AuthCodeURLRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string subject = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subject());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Oauth2AuthCodeURLRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Oauth2AuthCodeURLRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Oauth2AuthCodeURLRequest::GetClassData() const { return &_class_data_; }


void Oauth2AuthCodeURLRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Oauth2AuthCodeURLRequest*>(&to_msg);
  auto& from = static_cast<const Oauth2AuthCodeURLRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.google.v1.Oauth2AuthCodeURLRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_subject()) {
    _this->_internal_set_subject(from._internal_subject());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Oauth2AuthCodeURLRequest::CopyFrom(const Oauth2AuthCodeURLRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.google.v1.Oauth2AuthCodeURLRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Oauth2AuthCodeURLRequest::IsInitialized() const {
  return true;
}

void Oauth2AuthCodeURLRequest::InternalSwap(Oauth2AuthCodeURLRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.subject_, lhs_arena,
      &other->_impl_.subject_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Oauth2AuthCodeURLRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2eproto_getter, &descriptor_table_google_2eproto_once,
      file_level_metadata_google_2eproto[0]);
}

// ===================================================================

class Oauth2AuthCodeURLResponse::_Internal {
 public:
};

Oauth2AuthCodeURLResponse::Oauth2AuthCodeURLResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.google.v1.Oauth2AuthCodeURLResponse)
}
Oauth2AuthCodeURLResponse::Oauth2AuthCodeURLResponse(const Oauth2AuthCodeURLResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Oauth2AuthCodeURLResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.url_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_url().empty()) {
    _this->_impl_.url_.Set(from._internal_url(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.google.v1.Oauth2AuthCodeURLResponse)
}

inline void Oauth2AuthCodeURLResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.url_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.url_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.url_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Oauth2AuthCodeURLResponse::~Oauth2AuthCodeURLResponse() {
  // @@protoc_insertion_point(destructor:palm.google.v1.Oauth2AuthCodeURLResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Oauth2AuthCodeURLResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.url_.Destroy();
}

void Oauth2AuthCodeURLResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Oauth2AuthCodeURLResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.google.v1.Oauth2AuthCodeURLResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.url_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Oauth2AuthCodeURLResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string url = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_url();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.google.v1.Oauth2AuthCodeURLResponse.url"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Oauth2AuthCodeURLResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.google.v1.Oauth2AuthCodeURLResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_url().data(), static_cast<int>(this->_internal_url().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.google.v1.Oauth2AuthCodeURLResponse.url");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_url(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.google.v1.Oauth2AuthCodeURLResponse)
  return target;
}

size_t Oauth2AuthCodeURLResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.google.v1.Oauth2AuthCodeURLResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string url = 1;
  if (!this->_internal_url().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_url());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Oauth2AuthCodeURLResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Oauth2AuthCodeURLResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Oauth2AuthCodeURLResponse::GetClassData() const { return &_class_data_; }


void Oauth2AuthCodeURLResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Oauth2AuthCodeURLResponse*>(&to_msg);
  auto& from = static_cast<const Oauth2AuthCodeURLResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.google.v1.Oauth2AuthCodeURLResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_url().empty()) {
    _this->_internal_set_url(from._internal_url());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Oauth2AuthCodeURLResponse::CopyFrom(const Oauth2AuthCodeURLResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.google.v1.Oauth2AuthCodeURLResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Oauth2AuthCodeURLResponse::IsInitialized() const {
  return true;
}

void Oauth2AuthCodeURLResponse::InternalSwap(Oauth2AuthCodeURLResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.url_, lhs_arena,
      &other->_impl_.url_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Oauth2AuthCodeURLResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2eproto_getter, &descriptor_table_google_2eproto_once,
      file_level_metadata_google_2eproto[1]);
}

// ===================================================================

class Oauth2SignInRequest::_Internal {
 public:
};

Oauth2SignInRequest::Oauth2SignInRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.google.v1.Oauth2SignInRequest)
}
Oauth2SignInRequest::Oauth2SignInRequest(const Oauth2SignInRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Oauth2SignInRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.code_){}
    , decltype(_impl_.state_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_code().empty()) {
    _this->_impl_.code_.Set(from._internal_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.state_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_state().empty()) {
    _this->_impl_.state_.Set(from._internal_state(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:palm.google.v1.Oauth2SignInRequest)
}

inline void Oauth2SignInRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.code_){}
    , decltype(_impl_.state_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.state_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.state_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Oauth2SignInRequest::~Oauth2SignInRequest() {
  // @@protoc_insertion_point(destructor:palm.google.v1.Oauth2SignInRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Oauth2SignInRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.code_.Destroy();
  _impl_.state_.Destroy();
}

void Oauth2SignInRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Oauth2SignInRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.google.v1.Oauth2SignInRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.code_.ClearToEmpty();
  _impl_.state_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Oauth2SignInRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.google.v1.Oauth2SignInRequest.code"));
        } else
          goto handle_unusual;
        continue;
      // string state = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_state();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.google.v1.Oauth2SignInRequest.state"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Oauth2SignInRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.google.v1.Oauth2SignInRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string code = 1;
  if (!this->_internal_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_code().data(), static_cast<int>(this->_internal_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.google.v1.Oauth2SignInRequest.code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_code(), target);
  }

  // string state = 2;
  if (!this->_internal_state().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_state().data(), static_cast<int>(this->_internal_state().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.google.v1.Oauth2SignInRequest.state");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_state(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.google.v1.Oauth2SignInRequest)
  return target;
}

size_t Oauth2SignInRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.google.v1.Oauth2SignInRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string code = 1;
  if (!this->_internal_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_code());
  }

  // string state = 2;
  if (!this->_internal_state().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_state());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Oauth2SignInRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Oauth2SignInRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Oauth2SignInRequest::GetClassData() const { return &_class_data_; }


void Oauth2SignInRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Oauth2SignInRequest*>(&to_msg);
  auto& from = static_cast<const Oauth2SignInRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.google.v1.Oauth2SignInRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_code().empty()) {
    _this->_internal_set_code(from._internal_code());
  }
  if (!from._internal_state().empty()) {
    _this->_internal_set_state(from._internal_state());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Oauth2SignInRequest::CopyFrom(const Oauth2SignInRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.google.v1.Oauth2SignInRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Oauth2SignInRequest::IsInitialized() const {
  return true;
}

void Oauth2SignInRequest::InternalSwap(Oauth2SignInRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.code_, lhs_arena,
      &other->_impl_.code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.state_, lhs_arena,
      &other->_impl_.state_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata Oauth2SignInRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2eproto_getter, &descriptor_table_google_2eproto_once,
      file_level_metadata_google_2eproto[2]);
}

// ===================================================================

class Oauth2SignInResponse_OpenId::_Internal {
 public:
  using HasBits = decltype(std::declval<Oauth2SignInResponse_OpenId>()._impl_._has_bits_);
  static void set_has_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_email(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_picture(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_locale(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_profile(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

Oauth2SignInResponse_OpenId::Oauth2SignInResponse_OpenId(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.google.v1.Oauth2SignInResponse.OpenId)
}
Oauth2SignInResponse_OpenId::Oauth2SignInResponse_OpenId(const Oauth2SignInResponse_OpenId& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Oauth2SignInResponse_OpenId* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.subject_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.email_){}
    , decltype(_impl_.picture_){}
    , decltype(_impl_.locale_){}
    , decltype(_impl_.profile_){}
    , decltype(_impl_.email_verified_){}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.subject_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.subject_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_subject().empty()) {
    _this->_impl_.subject_.Set(from._internal_subject(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_name()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_email()) {
    _this->_impl_.email_.Set(from._internal_email(), 
      _this->GetArenaForAllocation());
  }
  _impl_.picture_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.picture_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_picture()) {
    _this->_impl_.picture_.Set(from._internal_picture(), 
      _this->GetArenaForAllocation());
  }
  _impl_.locale_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.locale_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_locale()) {
    _this->_impl_.locale_.Set(from._internal_locale(), 
      _this->GetArenaForAllocation());
  }
  _impl_.profile_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.profile_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_profile()) {
    _this->_impl_.profile_.Set(from._internal_profile(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.email_verified_ = from._impl_.email_verified_;
  // @@protoc_insertion_point(copy_constructor:palm.google.v1.Oauth2SignInResponse.OpenId)
}

inline void Oauth2SignInResponse_OpenId::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.subject_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.email_){}
    , decltype(_impl_.picture_){}
    , decltype(_impl_.locale_){}
    , decltype(_impl_.profile_){}
    , decltype(_impl_.email_verified_){false}
  };
  _impl_.subject_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.subject_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.picture_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.picture_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.locale_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.locale_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.profile_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.profile_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Oauth2SignInResponse_OpenId::~Oauth2SignInResponse_OpenId() {
  // @@protoc_insertion_point(destructor:palm.google.v1.Oauth2SignInResponse.OpenId)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Oauth2SignInResponse_OpenId::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.subject_.Destroy();
  _impl_.name_.Destroy();
  _impl_.email_.Destroy();
  _impl_.picture_.Destroy();
  _impl_.locale_.Destroy();
  _impl_.profile_.Destroy();
}

void Oauth2SignInResponse_OpenId::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Oauth2SignInResponse_OpenId::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.google.v1.Oauth2SignInResponse.OpenId)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.subject_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.name_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.email_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.picture_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.locale_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.profile_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.email_verified_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Oauth2SignInResponse_OpenId::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string subject = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_subject();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.google.v1.Oauth2SignInResponse.OpenId.subject"));
        } else
          goto handle_unusual;
        continue;
      // optional string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.google.v1.Oauth2SignInResponse.OpenId.name"));
        } else
          goto handle_unusual;
        continue;
      // optional string email = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.google.v1.Oauth2SignInResponse.OpenId.email"));
        } else
          goto handle_unusual;
        continue;
      // bool email_verified = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.email_verified_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string picture = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_picture();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.google.v1.Oauth2SignInResponse.OpenId.picture"));
        } else
          goto handle_unusual;
        continue;
      // optional string locale = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          auto str = _internal_mutable_locale();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.google.v1.Oauth2SignInResponse.OpenId.locale"));
        } else
          goto handle_unusual;
        continue;
      // optional string profile = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_profile();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.google.v1.Oauth2SignInResponse.OpenId.profile"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Oauth2SignInResponse_OpenId::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.google.v1.Oauth2SignInResponse.OpenId)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string subject = 1;
  if (!this->_internal_subject().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subject().data(), static_cast<int>(this->_internal_subject().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.google.v1.Oauth2SignInResponse.OpenId.subject");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_subject(), target);
  }

  // optional string name = 2;
  if (_internal_has_name()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.google.v1.Oauth2SignInResponse.OpenId.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // optional string email = 3;
  if (_internal_has_email()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.google.v1.Oauth2SignInResponse.OpenId.email");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_email(), target);
  }

  // bool email_verified = 4;
  if (this->_internal_email_verified() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_email_verified(), target);
  }

  // optional string picture = 7;
  if (_internal_has_picture()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_picture().data(), static_cast<int>(this->_internal_picture().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.google.v1.Oauth2SignInResponse.OpenId.picture");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_picture(), target);
  }

  // optional string locale = 8;
  if (_internal_has_locale()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_locale().data(), static_cast<int>(this->_internal_locale().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.google.v1.Oauth2SignInResponse.OpenId.locale");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_locale(), target);
  }

  // optional string profile = 9;
  if (_internal_has_profile()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_profile().data(), static_cast<int>(this->_internal_profile().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.google.v1.Oauth2SignInResponse.OpenId.profile");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_profile(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.google.v1.Oauth2SignInResponse.OpenId)
  return target;
}

size_t Oauth2SignInResponse_OpenId::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.google.v1.Oauth2SignInResponse.OpenId)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string subject = 1;
  if (!this->_internal_subject().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subject());
  }

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional string name = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_name());
    }

    // optional string email = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_email());
    }

    // optional string picture = 7;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_picture());
    }

    // optional string locale = 8;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_locale());
    }

    // optional string profile = 9;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_profile());
    }

  }
  // bool email_verified = 4;
  if (this->_internal_email_verified() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Oauth2SignInResponse_OpenId::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Oauth2SignInResponse_OpenId::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Oauth2SignInResponse_OpenId::GetClassData() const { return &_class_data_; }


void Oauth2SignInResponse_OpenId::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Oauth2SignInResponse_OpenId*>(&to_msg);
  auto& from = static_cast<const Oauth2SignInResponse_OpenId&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.google.v1.Oauth2SignInResponse.OpenId)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_subject().empty()) {
    _this->_internal_set_subject(from._internal_subject());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_name(from._internal_name());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_email(from._internal_email());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_picture(from._internal_picture());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_locale(from._internal_locale());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_profile(from._internal_profile());
    }
  }
  if (from._internal_email_verified() != 0) {
    _this->_internal_set_email_verified(from._internal_email_verified());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Oauth2SignInResponse_OpenId::CopyFrom(const Oauth2SignInResponse_OpenId& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.google.v1.Oauth2SignInResponse.OpenId)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Oauth2SignInResponse_OpenId::IsInitialized() const {
  return true;
}

void Oauth2SignInResponse_OpenId::InternalSwap(Oauth2SignInResponse_OpenId* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.subject_, lhs_arena,
      &other->_impl_.subject_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.email_, lhs_arena,
      &other->_impl_.email_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.picture_, lhs_arena,
      &other->_impl_.picture_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.locale_, lhs_arena,
      &other->_impl_.locale_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.profile_, lhs_arena,
      &other->_impl_.profile_, rhs_arena
  );
  swap(_impl_.email_verified_, other->_impl_.email_verified_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Oauth2SignInResponse_OpenId::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2eproto_getter, &descriptor_table_google_2eproto_once,
      file_level_metadata_google_2eproto[3]);
}

// ===================================================================

class Oauth2SignInResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<Oauth2SignInResponse>()._impl_._has_bits_);
  static const ::palm::google::v1::Oauth2SignInResponse_OpenId& open_id(const Oauth2SignInResponse* msg);
  static void set_has_subject(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::palm::google::v1::Oauth2SignInResponse_OpenId&
Oauth2SignInResponse::_Internal::open_id(const Oauth2SignInResponse* msg) {
  return *msg->_impl_.open_id_;
}
Oauth2SignInResponse::Oauth2SignInResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:palm.google.v1.Oauth2SignInResponse)
}
Oauth2SignInResponse::Oauth2SignInResponse(const Oauth2SignInResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  Oauth2SignInResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){from._impl_._has_bits_}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.token_){}
    , decltype(_impl_.subject_){}
    , decltype(_impl_.open_id_){nullptr}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_token().empty()) {
    _this->_impl_.token_.Set(from._internal_token(), 
      _this->GetArenaForAllocation());
  }
  _impl_.subject_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.subject_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (from._internal_has_subject()) {
    _this->_impl_.subject_.Set(from._internal_subject(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_open_id()) {
    _this->_impl_.open_id_ = new ::palm::google::v1::Oauth2SignInResponse_OpenId(*from._impl_.open_id_);
  }
  // @@protoc_insertion_point(copy_constructor:palm.google.v1.Oauth2SignInResponse)
}

inline void Oauth2SignInResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._has_bits_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , decltype(_impl_.token_){}
    , decltype(_impl_.subject_){}
    , decltype(_impl_.open_id_){nullptr}
  };
  _impl_.token_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.token_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.subject_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.subject_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

Oauth2SignInResponse::~Oauth2SignInResponse() {
  // @@protoc_insertion_point(destructor:palm.google.v1.Oauth2SignInResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void Oauth2SignInResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.token_.Destroy();
  _impl_.subject_.Destroy();
  if (this != internal_default_instance()) delete _impl_.open_id_;
}

void Oauth2SignInResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void Oauth2SignInResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:palm.google.v1.Oauth2SignInResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.token_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    _impl_.subject_.ClearNonDefaultToEmpty();
  }
  if (GetArenaForAllocation() == nullptr && _impl_.open_id_ != nullptr) {
    delete _impl_.open_id_;
  }
  _impl_.open_id_ = nullptr;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Oauth2SignInResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .palm.google.v1.Oauth2SignInResponse.OpenId open_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_open_id(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes token = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_token();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // optional string subject = 99;
      case 99:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_subject();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "palm.google.v1.Oauth2SignInResponse.subject"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  _impl_._has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* Oauth2SignInResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:palm.google.v1.Oauth2SignInResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .palm.google.v1.Oauth2SignInResponse.OpenId open_id = 1;
  if (this->_internal_has_open_id()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::open_id(this),
        _Internal::open_id(this).GetCachedSize(), target, stream);
  }

  // bytes token = 2;
  if (!this->_internal_token().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_token(), target);
  }

  // optional string subject = 99;
  if (_internal_has_subject()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_subject().data(), static_cast<int>(this->_internal_subject().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "palm.google.v1.Oauth2SignInResponse.subject");
    target = stream->WriteStringMaybeAliased(
        99, this->_internal_subject(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:palm.google.v1.Oauth2SignInResponse)
  return target;
}

size_t Oauth2SignInResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:palm.google.v1.Oauth2SignInResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes token = 2;
  if (!this->_internal_token().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_token());
  }

  // optional string subject = 99;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_subject());
  }

  // .palm.google.v1.Oauth2SignInResponse.OpenId open_id = 1;
  if (this->_internal_has_open_id()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.open_id_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Oauth2SignInResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    Oauth2SignInResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Oauth2SignInResponse::GetClassData() const { return &_class_data_; }


void Oauth2SignInResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<Oauth2SignInResponse*>(&to_msg);
  auto& from = static_cast<const Oauth2SignInResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:palm.google.v1.Oauth2SignInResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_token().empty()) {
    _this->_internal_set_token(from._internal_token());
  }
  if (from._internal_has_subject()) {
    _this->_internal_set_subject(from._internal_subject());
  }
  if (from._internal_has_open_id()) {
    _this->_internal_mutable_open_id()->::palm::google::v1::Oauth2SignInResponse_OpenId::MergeFrom(
        from._internal_open_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void Oauth2SignInResponse::CopyFrom(const Oauth2SignInResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:palm.google.v1.Oauth2SignInResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Oauth2SignInResponse::IsInitialized() const {
  return true;
}

void Oauth2SignInResponse::InternalSwap(Oauth2SignInResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.token_, lhs_arena,
      &other->_impl_.token_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.subject_, lhs_arena,
      &other->_impl_.subject_, rhs_arena
  );
  swap(_impl_.open_id_, other->_impl_.open_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Oauth2SignInResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_google_2eproto_getter, &descriptor_table_google_2eproto_once,
      file_level_metadata_google_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace google
}  // namespace palm
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::palm::google::v1::Oauth2AuthCodeURLRequest*
Arena::CreateMaybeMessage< ::palm::google::v1::Oauth2AuthCodeURLRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::google::v1::Oauth2AuthCodeURLRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::google::v1::Oauth2AuthCodeURLResponse*
Arena::CreateMaybeMessage< ::palm::google::v1::Oauth2AuthCodeURLResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::google::v1::Oauth2AuthCodeURLResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::google::v1::Oauth2SignInRequest*
Arena::CreateMaybeMessage< ::palm::google::v1::Oauth2SignInRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::google::v1::Oauth2SignInRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::google::v1::Oauth2SignInResponse_OpenId*
Arena::CreateMaybeMessage< ::palm::google::v1::Oauth2SignInResponse_OpenId >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::google::v1::Oauth2SignInResponse_OpenId >(arena);
}
template<> PROTOBUF_NOINLINE ::palm::google::v1::Oauth2SignInResponse*
Arena::CreateMaybeMessage< ::palm::google::v1::Oauth2SignInResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::palm::google::v1::Oauth2SignInResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
