// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.21.12
// source: balsam.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MediaEditor int32

const (
	MediaEditor_Textarea MediaEditor = 0
	MediaEditor_Markdown MediaEditor = 2
	MediaEditor_Quill    MediaEditor = 3
)

// Enum value maps for MediaEditor.
var (
	MediaEditor_name = map[int32]string{
		0: "Textarea",
		2: "Markdown",
		3: "Quill",
	}
	MediaEditor_value = map[string]int32{
		"Textarea": 0,
		"Markdown": 2,
		"Quill":    3,
	}
)

func (x MediaEditor) Enum() *MediaEditor {
	p := new(MediaEditor)
	*p = x
	return p
}

func (x MediaEditor) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MediaEditor) Descriptor() protoreflect.EnumDescriptor {
	return file_balsam_proto_enumTypes[0].Descriptor()
}

func (MediaEditor) Type() protoreflect.EnumType {
	return &file_balsam_proto_enumTypes[0]
}

func (x MediaEditor) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MediaEditor.Descriptor instead.
func (MediaEditor) EnumDescriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{0}
}

type UserLogsResponse_Item_Level int32

const (
	UserLogsResponse_Item_Debug UserLogsResponse_Item_Level = 0
	UserLogsResponse_Item_Info  UserLogsResponse_Item_Level = 1
	UserLogsResponse_Item_Warn  UserLogsResponse_Item_Level = 2
	UserLogsResponse_Item_Error UserLogsResponse_Item_Level = 3
)

// Enum value maps for UserLogsResponse_Item_Level.
var (
	UserLogsResponse_Item_Level_name = map[int32]string{
		0: "Debug",
		1: "Info",
		2: "Warn",
		3: "Error",
	}
	UserLogsResponse_Item_Level_value = map[string]int32{
		"Debug": 0,
		"Info":  1,
		"Warn":  2,
		"Error": 3,
	}
)

func (x UserLogsResponse_Item_Level) Enum() *UserLogsResponse_Item_Level {
	p := new(UserLogsResponse_Item_Level)
	*p = x
	return p
}

func (x UserLogsResponse_Item_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserLogsResponse_Item_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_balsam_proto_enumTypes[1].Descriptor()
}

func (UserLogsResponse_Item_Level) Type() protoreflect.EnumType {
	return &file_balsam_proto_enumTypes[1]
}

func (x UserLogsResponse_Item_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserLogsResponse_Item_Level.Descriptor instead.
func (UserLogsResponse_Item_Level) EnumDescriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{17, 0, 0}
}

type UserSignInResponse_Detail_ProviderType int32

const (
	UserSignInResponse_Detail_Email             UserSignInResponse_Detail_ProviderType = 0
	UserSignInResponse_Detail_Phone             UserSignInResponse_Detail_ProviderType = 1
	UserSignInResponse_Detail_GoogleOauth2      UserSignInResponse_Detail_ProviderType = 11
	UserSignInResponse_Detail_WechatOauth2      UserSignInResponse_Detail_ProviderType = 12
	UserSignInResponse_Detail_WechatMiniProgram UserSignInResponse_Detail_ProviderType = 13
	UserSignInResponse_Detail_FacebookOauth2    UserSignInResponse_Detail_ProviderType = 14
)

// Enum value maps for UserSignInResponse_Detail_ProviderType.
var (
	UserSignInResponse_Detail_ProviderType_name = map[int32]string{
		0:  "Email",
		1:  "Phone",
		11: "GoogleOauth2",
		12: "WechatOauth2",
		13: "WechatMiniProgram",
		14: "FacebookOauth2",
	}
	UserSignInResponse_Detail_ProviderType_value = map[string]int32{
		"Email":             0,
		"Phone":             1,
		"GoogleOauth2":      11,
		"WechatOauth2":      12,
		"WechatMiniProgram": 13,
		"FacebookOauth2":    14,
	}
)

func (x UserSignInResponse_Detail_ProviderType) Enum() *UserSignInResponse_Detail_ProviderType {
	p := new(UserSignInResponse_Detail_ProviderType)
	*p = x
	return p
}

func (x UserSignInResponse_Detail_ProviderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserSignInResponse_Detail_ProviderType) Descriptor() protoreflect.EnumDescriptor {
	return file_balsam_proto_enumTypes[2].Descriptor()
}

func (UserSignInResponse_Detail_ProviderType) Type() protoreflect.EnumType {
	return &file_balsam_proto_enumTypes[2]
}

func (x UserSignInResponse_Detail_ProviderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserSignInResponse_Detail_ProviderType.Descriptor instead.
func (UserSignInResponse_Detail_ProviderType) EnumDescriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{26, 0, 0}
}

type WechatOauth2UserIndexResponse_Item_Sex int32

const (
	WechatOauth2UserIndexResponse_Item_Male   WechatOauth2UserIndexResponse_Item_Sex = 0
	WechatOauth2UserIndexResponse_Item_Female WechatOauth2UserIndexResponse_Item_Sex = 1
)

// Enum value maps for WechatOauth2UserIndexResponse_Item_Sex.
var (
	WechatOauth2UserIndexResponse_Item_Sex_name = map[int32]string{
		0: "Male",
		1: "Female",
	}
	WechatOauth2UserIndexResponse_Item_Sex_value = map[string]int32{
		"Male":   0,
		"Female": 1,
	}
)

func (x WechatOauth2UserIndexResponse_Item_Sex) Enum() *WechatOauth2UserIndexResponse_Item_Sex {
	p := new(WechatOauth2UserIndexResponse_Item_Sex)
	*p = x
	return p
}

func (x WechatOauth2UserIndexResponse_Item_Sex) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WechatOauth2UserIndexResponse_Item_Sex) Descriptor() protoreflect.EnumDescriptor {
	return file_balsam_proto_enumTypes[3].Descriptor()
}

func (WechatOauth2UserIndexResponse_Item_Sex) Type() protoreflect.EnumType {
	return &file_balsam_proto_enumTypes[3]
}

func (x WechatOauth2UserIndexResponse_Item_Sex) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WechatOauth2UserIndexResponse_Item_Sex.Descriptor instead.
func (WechatOauth2UserIndexResponse_Item_Sex) EnumDescriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{31, 0, 0}
}

type WechatOauth2UserIndexResponse_Item_Lang int32

const (
	WechatOauth2UserIndexResponse_Item_Cn WechatOauth2UserIndexResponse_Item_Lang = 0
	WechatOauth2UserIndexResponse_Item_En WechatOauth2UserIndexResponse_Item_Lang = 1
)

// Enum value maps for WechatOauth2UserIndexResponse_Item_Lang.
var (
	WechatOauth2UserIndexResponse_Item_Lang_name = map[int32]string{
		0: "Cn",
		1: "En",
	}
	WechatOauth2UserIndexResponse_Item_Lang_value = map[string]int32{
		"Cn": 0,
		"En": 1,
	}
)

func (x WechatOauth2UserIndexResponse_Item_Lang) Enum() *WechatOauth2UserIndexResponse_Item_Lang {
	p := new(WechatOauth2UserIndexResponse_Item_Lang)
	*p = x
	return p
}

func (x WechatOauth2UserIndexResponse_Item_Lang) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WechatOauth2UserIndexResponse_Item_Lang) Descriptor() protoreflect.EnumDescriptor {
	return file_balsam_proto_enumTypes[4].Descriptor()
}

func (WechatOauth2UserIndexResponse_Item_Lang) Type() protoreflect.EnumType {
	return &file_balsam_proto_enumTypes[4]
}

func (x WechatOauth2UserIndexResponse_Item_Lang) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WechatOauth2UserIndexResponse_Item_Lang.Descriptor instead.
func (WechatOauth2UserIndexResponse_Item_Lang) EnumDescriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{31, 0, 1}
}

type LeaveWordIndexResponse_Item_Status int32

const (
	LeaveWordIndexResponse_Item_Pending   LeaveWordIndexResponse_Item_Status = 0
	LeaveWordIndexResponse_Item_Completed LeaveWordIndexResponse_Item_Status = 1
)

// Enum value maps for LeaveWordIndexResponse_Item_Status.
var (
	LeaveWordIndexResponse_Item_Status_name = map[int32]string{
		0: "Pending",
		1: "Completed",
	}
	LeaveWordIndexResponse_Item_Status_value = map[string]int32{
		"Pending":   0,
		"Completed": 1,
	}
)

func (x LeaveWordIndexResponse_Item_Status) Enum() *LeaveWordIndexResponse_Item_Status {
	p := new(LeaveWordIndexResponse_Item_Status)
	*p = x
	return p
}

func (x LeaveWordIndexResponse_Item_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LeaveWordIndexResponse_Item_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_balsam_proto_enumTypes[5].Descriptor()
}

func (LeaveWordIndexResponse_Item_Status) Type() protoreflect.EnumType {
	return &file_balsam_proto_enumTypes[5]
}

func (x LeaveWordIndexResponse_Item_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LeaveWordIndexResponse_Item_Status.Descriptor instead.
func (LeaveWordIndexResponse_Item_Status) EnumDescriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{44, 0, 0}
}

type IdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *IdRequest) Reset() {
	*x = IdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdRequest) ProtoMessage() {}

func (x *IdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdRequest.ProtoReflect.Descriptor instead.
func (*IdRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{0}
}

func (x *IdRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ResourceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string  `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Id   *uint64 `protobuf:"varint,2,opt,name=id,proto3,oneof" json:"id,omitempty"`
}

func (x *ResourceRequest) Reset() {
	*x = ResourceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceRequest) ProtoMessage() {}

func (x *ResourceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceRequest.ProtoReflect.Descriptor instead.
func (*ResourceRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{1}
}

func (x *ResourceRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ResourceRequest) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

type UidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid string `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
}

func (x *UidRequest) Reset() {
	*x = UidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UidRequest) ProtoMessage() {}

func (x *UidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UidRequest.ProtoReflect.Descriptor instead.
func (*UidRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{2}
}

func (x *UidRequest) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type Pager struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *Pager) Reset() {
	*x = Pager{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pager) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pager) ProtoMessage() {}

func (x *Pager) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pager.ProtoReflect.Descriptor instead.
func (*Pager) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{3}
}

func (x *Pager) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pager) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int64 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size  int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Total int64 `protobuf:"varint,3,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{4}
}

func (x *Pagination) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *Pagination) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Pagination) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type AesPlainMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *AesPlainMessage) Reset() {
	*x = AesPlainMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AesPlainMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AesPlainMessage) ProtoMessage() {}

func (x *AesPlainMessage) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AesPlainMessage.ProtoReflect.Descriptor instead.
func (*AesPlainMessage) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{5}
}

func (x *AesPlainMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type AesCodeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Salt    []byte `protobuf:"bytes,2,opt,name=salt,proto3" json:"salt,omitempty"`
}

func (x *AesCodeMessage) Reset() {
	*x = AesCodeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AesCodeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AesCodeMessage) ProtoMessage() {}

func (x *AesCodeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AesCodeMessage.ProtoReflect.Descriptor instead.
func (*AesCodeMessage) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{6}
}

func (x *AesCodeMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *AesCodeMessage) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

type JwtSignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId     *string                `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3,oneof" json:"key_id,omitempty"`
	Issuer    string                 `protobuf:"bytes,11,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Subject   string                 `protobuf:"bytes,12,opt,name=subject,proto3" json:"subject,omitempty"`
	Audiences []string               `protobuf:"bytes,13,rep,name=audiences,proto3" json:"audiences,omitempty"`
	NotBefore *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=not_before,json=notBefore,proto3" json:"not_before,omitempty"`
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Extra     *string                `protobuf:"bytes,99,opt,name=extra,proto3,oneof" json:"extra,omitempty"`
}

func (x *JwtSignRequest) Reset() {
	*x = JwtSignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JwtSignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtSignRequest) ProtoMessage() {}

func (x *JwtSignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtSignRequest.ProtoReflect.Descriptor instead.
func (*JwtSignRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{7}
}

func (x *JwtSignRequest) GetKeyId() string {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return ""
}

func (x *JwtSignRequest) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *JwtSignRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *JwtSignRequest) GetAudiences() []string {
	if x != nil {
		return x.Audiences
	}
	return nil
}

func (x *JwtSignRequest) GetNotBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.NotBefore
	}
	return nil
}

func (x *JwtSignRequest) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *JwtSignRequest) GetExtra() string {
	if x != nil && x.Extra != nil {
		return *x.Extra
	}
	return ""
}

type JwtSignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *JwtSignResponse) Reset() {
	*x = JwtSignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JwtSignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtSignResponse) ProtoMessage() {}

func (x *JwtSignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtSignResponse.ProtoReflect.Descriptor instead.
func (*JwtSignResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{8}
}

func (x *JwtSignResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type JwtVerifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Issuer   string `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Audience string `protobuf:"bytes,3,opt,name=audience,proto3" json:"audience,omitempty"`
}

func (x *JwtVerifyRequest) Reset() {
	*x = JwtVerifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JwtVerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtVerifyRequest) ProtoMessage() {}

func (x *JwtVerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtVerifyRequest.ProtoReflect.Descriptor instead.
func (*JwtVerifyRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{9}
}

func (x *JwtVerifyRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *JwtVerifyRequest) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *JwtVerifyRequest) GetAudience() string {
	if x != nil {
		return x.Audience
	}
	return ""
}

type JwtVerifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JwtId   string  `protobuf:"bytes,1,opt,name=jwt_id,json=jwtId,proto3" json:"jwt_id,omitempty"`
	KeyId   *string `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3,oneof" json:"key_id,omitempty"`
	Subject string  `protobuf:"bytes,11,opt,name=subject,proto3" json:"subject,omitempty"`
	Extra   *string `protobuf:"bytes,19,opt,name=extra,proto3,oneof" json:"extra,omitempty"`
}

func (x *JwtVerifyResponse) Reset() {
	*x = JwtVerifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JwtVerifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtVerifyResponse) ProtoMessage() {}

func (x *JwtVerifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtVerifyResponse.ProtoReflect.Descriptor instead.
func (*JwtVerifyResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{10}
}

func (x *JwtVerifyResponse) GetJwtId() string {
	if x != nil {
		return x.JwtId
	}
	return ""
}

func (x *JwtVerifyResponse) GetKeyId() string {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return ""
}

func (x *JwtVerifyResponse) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *JwtVerifyResponse) GetExtra() string {
	if x != nil && x.Extra != nil {
		return *x.Extra
	}
	return ""
}

type HMacSignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plain []byte `protobuf:"bytes,1,opt,name=plain,proto3" json:"plain,omitempty"`
}

func (x *HMacSignRequest) Reset() {
	*x = HMacSignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HMacSignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HMacSignRequest) ProtoMessage() {}

func (x *HMacSignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HMacSignRequest.ProtoReflect.Descriptor instead.
func (*HMacSignRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{11}
}

func (x *HMacSignRequest) GetPlain() []byte {
	if x != nil {
		return x.Plain
	}
	return nil
}

type HMacSignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code []byte `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Salt []byte `protobuf:"bytes,2,opt,name=salt,proto3" json:"salt,omitempty"`
}

func (x *HMacSignResponse) Reset() {
	*x = HMacSignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HMacSignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HMacSignResponse) ProtoMessage() {}

func (x *HMacSignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HMacSignResponse.ProtoReflect.Descriptor instead.
func (*HMacSignResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{12}
}

func (x *HMacSignResponse) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *HMacSignResponse) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

type HMacVerifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plain []byte `protobuf:"bytes,1,opt,name=plain,proto3" json:"plain,omitempty"`
	Code  []byte `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Salt  []byte `protobuf:"bytes,3,opt,name=salt,proto3" json:"salt,omitempty"`
}

func (x *HMacVerifyRequest) Reset() {
	*x = HMacVerifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HMacVerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HMacVerifyRequest) ProtoMessage() {}

func (x *HMacVerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HMacVerifyRequest.ProtoReflect.Descriptor instead.
func (*HMacVerifyRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{13}
}

func (x *HMacVerifyRequest) GetPlain() []byte {
	if x != nil {
		return x.Plain
	}
	return nil
}

func (x *HMacVerifyRequest) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *HMacVerifyRequest) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

type UserUpdateProfileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User     uint64 `protobuf:"varint,1,opt,name=user,proto3" json:"user,omitempty"`
	Lang     string `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	Timezone string `protobuf:"bytes,3,opt,name=timezone,proto3" json:"timezone,omitempty"`
}

func (x *UserUpdateProfileRequest) Reset() {
	*x = UserUpdateProfileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserUpdateProfileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserUpdateProfileRequest) ProtoMessage() {}

func (x *UserUpdateProfileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserUpdateProfileRequest.ProtoReflect.Descriptor instead.
func (*UserUpdateProfileRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{14}
}

func (x *UserUpdateProfileRequest) GetUser() uint64 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *UserUpdateProfileRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *UserUpdateProfileRequest) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

type UserIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*UserIndexResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *Pagination               `protobuf:"bytes,9,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *UserIndexResponse) Reset() {
	*x = UserIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIndexResponse) ProtoMessage() {}

func (x *UserIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIndexResponse.ProtoReflect.Descriptor instead.
func (*UserIndexResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{15}
}

func (x *UserIndexResponse) GetItems() []*UserIndexResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *UserIndexResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type LogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *uint64 `protobuf:"varint,1,opt,name=user,proto3,oneof" json:"user,omitempty"`
	Page uint64  `protobuf:"varint,11,opt,name=page,proto3" json:"page,omitempty"`
	Size uint64  `protobuf:"varint,12,opt,name=size,proto3" json:"size,omitempty"`
}

func (x *LogsRequest) Reset() {
	*x = LogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogsRequest) ProtoMessage() {}

func (x *LogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogsRequest.ProtoReflect.Descriptor instead.
func (*LogsRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{16}
}

func (x *LogsRequest) GetUser() uint64 {
	if x != nil && x.User != nil {
		return *x.User
	}
	return 0
}

func (x *LogsRequest) GetPage() uint64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *LogsRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type UserLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*UserLogsResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *Pagination              `protobuf:"bytes,9,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *UserLogsResponse) Reset() {
	*x = UserLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLogsResponse) ProtoMessage() {}

func (x *UserLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLogsResponse.ProtoReflect.Descriptor instead.
func (*UserLogsResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{17}
}

func (x *UserLogsResponse) GetItems() []*UserLogsResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *UserLogsResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type EmailUserByEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email string `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *EmailUserByEmailRequest) Reset() {
	*x = EmailUserByEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailUserByEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailUserByEmailRequest) ProtoMessage() {}

func (x *EmailUserByEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailUserByEmailRequest.ProtoReflect.Descriptor instead.
func (*EmailUserByEmailRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{18}
}

func (x *EmailUserByEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type EmailUserByNicknameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nickname string `protobuf:"bytes,1,opt,name=nickname,proto3" json:"nickname,omitempty"`
}

func (x *EmailUserByNicknameRequest) Reset() {
	*x = EmailUserByNicknameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailUserByNicknameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailUserByNicknameRequest) ProtoMessage() {}

func (x *EmailUserByNicknameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailUserByNicknameRequest.ProtoReflect.Descriptor instead.
func (*EmailUserByNicknameRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{19}
}

func (x *EmailUserByNicknameRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

type EmailUserIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*EmailUserIndexResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *Pagination                    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *EmailUserIndexResponse) Reset() {
	*x = EmailUserIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailUserIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailUserIndexResponse) ProtoMessage() {}

func (x *EmailUserIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailUserIndexResponse.ProtoReflect.Descriptor instead.
func (*EmailUserIndexResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{20}
}

func (x *EmailUserIndexResponse) GetItems() []*EmailUserIndexResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *EmailUserIndexResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type UserResetPasswordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *UserResetPasswordRequest) Reset() {
	*x = UserResetPasswordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserResetPasswordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserResetPasswordRequest) ProtoMessage() {}

func (x *UserResetPasswordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserResetPasswordRequest.ProtoReflect.Descriptor instead.
func (*UserResetPasswordRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{21}
}

func (x *UserResetPasswordRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserResetPasswordRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UserByEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to User:
	//
	//	*UserByEmailRequest_Email
	//	*UserByEmailRequest_Nickname
	User isUserByEmailRequest_User `protobuf_oneof:"user"`
}

func (x *UserByEmailRequest) Reset() {
	*x = UserByEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserByEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserByEmailRequest) ProtoMessage() {}

func (x *UserByEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserByEmailRequest.ProtoReflect.Descriptor instead.
func (*UserByEmailRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{22}
}

func (m *UserByEmailRequest) GetUser() isUserByEmailRequest_User {
	if m != nil {
		return m.User
	}
	return nil
}

func (x *UserByEmailRequest) GetEmail() string {
	if x, ok := x.GetUser().(*UserByEmailRequest_Email); ok {
		return x.Email
	}
	return ""
}

func (x *UserByEmailRequest) GetNickname() string {
	if x, ok := x.GetUser().(*UserByEmailRequest_Nickname); ok {
		return x.Nickname
	}
	return ""
}

type isUserByEmailRequest_User interface {
	isUserByEmailRequest_User()
}

type UserByEmailRequest_Email struct {
	Email string `protobuf:"bytes,1,opt,name=email,proto3,oneof"`
}

type UserByEmailRequest_Nickname struct {
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3,oneof"`
}

func (*UserByEmailRequest_Email) isUserByEmailRequest_User() {}

func (*UserByEmailRequest_Nickname) isUserByEmailRequest_User() {}

type UserByTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *UserByTokenRequest) Reset() {
	*x = UserByTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserByTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserByTokenRequest) ProtoMessage() {}

func (x *UserByTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserByTokenRequest.ProtoReflect.Descriptor instead.
func (*UserByTokenRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{23}
}

func (x *UserByTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type UserSignInByEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to User:
	//
	//	*UserSignInByEmailRequest_Email
	//	*UserSignInByEmailRequest_Nickname
	User     isUserSignInByEmailRequest_User `protobuf_oneof:"user"`
	Password string                          `protobuf:"bytes,8,opt,name=password,proto3" json:"password,omitempty"`
	Ttl      *durationpb.Duration            `protobuf:"bytes,9,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *UserSignInByEmailRequest) Reset() {
	*x = UserSignInByEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSignInByEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignInByEmailRequest) ProtoMessage() {}

func (x *UserSignInByEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignInByEmailRequest.ProtoReflect.Descriptor instead.
func (*UserSignInByEmailRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{24}
}

func (m *UserSignInByEmailRequest) GetUser() isUserSignInByEmailRequest_User {
	if m != nil {
		return m.User
	}
	return nil
}

func (x *UserSignInByEmailRequest) GetEmail() string {
	if x, ok := x.GetUser().(*UserSignInByEmailRequest_Email); ok {
		return x.Email
	}
	return ""
}

func (x *UserSignInByEmailRequest) GetNickname() string {
	if x, ok := x.GetUser().(*UserSignInByEmailRequest_Nickname); ok {
		return x.Nickname
	}
	return ""
}

func (x *UserSignInByEmailRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserSignInByEmailRequest) GetTtl() *durationpb.Duration {
	if x != nil {
		return x.Ttl
	}
	return nil
}

type isUserSignInByEmailRequest_User interface {
	isUserSignInByEmailRequest_User()
}

type UserSignInByEmailRequest_Email struct {
	Email string `protobuf:"bytes,1,opt,name=email,proto3,oneof"`
}

type UserSignInByEmailRequest_Nickname struct {
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3,oneof"`
}

func (*UserSignInByEmailRequest_Email) isUserSignInByEmailRequest_User() {}

func (*UserSignInByEmailRequest_Nickname) isUserSignInByEmailRequest_User() {}

type UserSignUpByEmailRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RealName string               `protobuf:"bytes,1,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	Email    string               `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Nickname string               `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Password string               `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Lang     string               `protobuf:"bytes,5,opt,name=lang,proto3" json:"lang,omitempty"`
	Timezone string               `protobuf:"bytes,6,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Home     string               `protobuf:"bytes,7,opt,name=home,proto3" json:"home,omitempty"`
	Ttl      *durationpb.Duration `protobuf:"bytes,9,opt,name=ttl,proto3" json:"ttl,omitempty"`
}

func (x *UserSignUpByEmailRequest) Reset() {
	*x = UserSignUpByEmailRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSignUpByEmailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignUpByEmailRequest) ProtoMessage() {}

func (x *UserSignUpByEmailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignUpByEmailRequest.ProtoReflect.Descriptor instead.
func (*UserSignUpByEmailRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{25}
}

func (x *UserSignUpByEmailRequest) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *UserSignUpByEmailRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *UserSignUpByEmailRequest) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserSignUpByEmailRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UserSignUpByEmailRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *UserSignUpByEmailRequest) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *UserSignUpByEmailRequest) GetHome() string {
	if x != nil {
		return x.Home
	}
	return ""
}

func (x *UserSignUpByEmailRequest) GetTtl() *durationpb.Duration {
	if x != nil {
		return x.Ttl
	}
	return nil
}

type UserSignInResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token       string                           `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Detail      *UserSignInResponse_Detail       `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail,omitempty"`
	Roles       []string                         `protobuf:"bytes,11,rep,name=roles,proto3" json:"roles,omitempty"`
	Permissions []*UserSignInResponse_Permission `protobuf:"bytes,12,rep,name=permissions,proto3" json:"permissions,omitempty"`
	Menus       []*UserSignInResponse_Menu       `protobuf:"bytes,13,rep,name=menus,proto3" json:"menus,omitempty"`
}

func (x *UserSignInResponse) Reset() {
	*x = UserSignInResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSignInResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignInResponse) ProtoMessage() {}

func (x *UserSignInResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignInResponse.ProtoReflect.Descriptor instead.
func (*UserSignInResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{26}
}

func (x *UserSignInResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *UserSignInResponse) GetDetail() *UserSignInResponse_Detail {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *UserSignInResponse) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *UserSignInResponse) GetPermissions() []*UserSignInResponse_Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *UserSignInResponse) GetMenus() []*UserSignInResponse_Menu {
	if x != nil {
		return x.Menus
	}
	return nil
}

type GoogleOauth2UserBySubjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subject string `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
}

func (x *GoogleOauth2UserBySubjectRequest) Reset() {
	*x = GoogleOauth2UserBySubjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleOauth2UserBySubjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleOauth2UserBySubjectRequest) ProtoMessage() {}

func (x *GoogleOauth2UserBySubjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleOauth2UserBySubjectRequest.ProtoReflect.Descriptor instead.
func (*GoogleOauth2UserBySubjectRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{27}
}

func (x *GoogleOauth2UserBySubjectRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

type GoogleOauth2UserIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*GoogleOauth2UserIndexResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *Pagination                           `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *GoogleOauth2UserIndexResponse) Reset() {
	*x = GoogleOauth2UserIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleOauth2UserIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleOauth2UserIndexResponse) ProtoMessage() {}

func (x *GoogleOauth2UserIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleOauth2UserIndexResponse.ProtoReflect.Descriptor instead.
func (*GoogleOauth2UserIndexResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{28}
}

func (x *GoogleOauth2UserIndexResponse) GetItems() []*GoogleOauth2UserIndexResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *GoogleOauth2UserIndexResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type WechatByUnionIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnionId string `protobuf:"bytes,1,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`
}

func (x *WechatByUnionIdRequest) Reset() {
	*x = WechatByUnionIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatByUnionIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatByUnionIdRequest) ProtoMessage() {}

func (x *WechatByUnionIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatByUnionIdRequest.ProtoReflect.Descriptor instead.
func (*WechatByUnionIdRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{29}
}

func (x *WechatByUnionIdRequest) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

type WechatByAppIdAndOpenIdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId  string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OpenId string `protobuf:"bytes,2,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
}

func (x *WechatByAppIdAndOpenIdRequest) Reset() {
	*x = WechatByAppIdAndOpenIdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatByAppIdAndOpenIdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatByAppIdAndOpenIdRequest) ProtoMessage() {}

func (x *WechatByAppIdAndOpenIdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatByAppIdAndOpenIdRequest.ProtoReflect.Descriptor instead.
func (*WechatByAppIdAndOpenIdRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{30}
}

func (x *WechatByAppIdAndOpenIdRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WechatByAppIdAndOpenIdRequest) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

type WechatOauth2UserIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*WechatOauth2UserIndexResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *Pagination                           `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *WechatOauth2UserIndexResponse) Reset() {
	*x = WechatOauth2UserIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatOauth2UserIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatOauth2UserIndexResponse) ProtoMessage() {}

func (x *WechatOauth2UserIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatOauth2UserIndexResponse.ProtoReflect.Descriptor instead.
func (*WechatOauth2UserIndexResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{31}
}

func (x *WechatOauth2UserIndexResponse) GetItems() []*WechatOauth2UserIndexResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *WechatOauth2UserIndexResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type WechatMiniProgramUserIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*WechatMiniProgramUserIndexResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *Pagination                                `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *WechatMiniProgramUserIndexResponse) Reset() {
	*x = WechatMiniProgramUserIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniProgramUserIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniProgramUserIndexResponse) ProtoMessage() {}

func (x *WechatMiniProgramUserIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniProgramUserIndexResponse.ProtoReflect.Descriptor instead.
func (*WechatMiniProgramUserIndexResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{32}
}

func (x *WechatMiniProgramUserIndexResponse) GetItems() []*WechatMiniProgramUserIndexResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *WechatMiniProgramUserIndexResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SessionIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*SessionIndexResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *Pagination                  `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *SessionIndexResponse) Reset() {
	*x = SessionIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionIndexResponse) ProtoMessage() {}

func (x *SessionIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionIndexResponse.ProtoReflect.Descriptor instead.
func (*SessionIndexResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{33}
}

func (x *SessionIndexResponse) GetItems() []*SessionIndexResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SessionIndexResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type LocaleSetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang    string `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
	Code    string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Message string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LocaleSetRequest) Reset() {
	*x = LocaleSetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocaleSetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocaleSetRequest) ProtoMessage() {}

func (x *LocaleSetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocaleSetRequest.ProtoReflect.Descriptor instead.
func (*LocaleSetRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{34}
}

func (x *LocaleSetRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *LocaleSetRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LocaleSetRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LocaleIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*LocaleIndexResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *Pagination                 `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *LocaleIndexResponse) Reset() {
	*x = LocaleIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocaleIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocaleIndexResponse) ProtoMessage() {}

func (x *LocaleIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocaleIndexResponse.ProtoReflect.Descriptor instead.
func (*LocaleIndexResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{35}
}

func (x *LocaleIndexResponse) GetItems() []*LocaleIndexResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *LocaleIndexResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type LocaleByLangRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang string `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *LocaleByLangRequest) Reset() {
	*x = LocaleByLangRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocaleByLangRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocaleByLangRequest) ProtoMessage() {}

func (x *LocaleByLangRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocaleByLangRequest.ProtoReflect.Descriptor instead.
func (*LocaleByLangRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{36}
}

func (x *LocaleByLangRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type LocaleByLangResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*LocaleIndexResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *LocaleByLangResponse) Reset() {
	*x = LocaleByLangResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocaleByLangResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocaleByLangResponse) ProtoMessage() {}

func (x *LocaleByLangResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocaleByLangResponse.ProtoReflect.Descriptor instead.
func (*LocaleByLangResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{37}
}

func (x *LocaleByLangResponse) GetItems() []*LocaleIndexResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type AttachmentCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User        uint64 `protobuf:"varint,1,opt,name=user,proto3" json:"user,omitempty"`
	Bucket      string `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Object      string `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	Title       string `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Size        uint64 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	ContentType string `protobuf:"bytes,6,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Public      bool   `protobuf:"varint,9,opt,name=public,proto3" json:"public,omitempty"`
}

func (x *AttachmentCreateRequest) Reset() {
	*x = AttachmentCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentCreateRequest) ProtoMessage() {}

func (x *AttachmentCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentCreateRequest.ProtoReflect.Descriptor instead.
func (*AttachmentCreateRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{38}
}

func (x *AttachmentCreateRequest) GetUser() uint64 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *AttachmentCreateRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *AttachmentCreateRequest) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *AttachmentCreateRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AttachmentCreateRequest) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AttachmentCreateRequest) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *AttachmentCreateRequest) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

type AttachmentSetTitleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *AttachmentSetTitleRequest) Reset() {
	*x = AttachmentSetTitleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentSetTitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentSetTitleRequest) ProtoMessage() {}

func (x *AttachmentSetTitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentSetTitleRequest.ProtoReflect.Descriptor instead.
func (*AttachmentSetTitleRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{39}
}

func (x *AttachmentSetTitleRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AttachmentSetTitleRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type AttachmentShowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *AttachmentShowResponse) Reset() {
	*x = AttachmentShowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentShowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentShowResponse) ProtoMessage() {}

func (x *AttachmentShowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentShowResponse.ProtoReflect.Descriptor instead.
func (*AttachmentShowResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{40}
}

func (x *AttachmentShowResponse) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type AttachmentListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*AttachmentIndexResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AttachmentListResponse) Reset() {
	*x = AttachmentListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentListResponse) ProtoMessage() {}

func (x *AttachmentListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentListResponse.ProtoReflect.Descriptor instead.
func (*AttachmentListResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{41}
}

func (x *AttachmentListResponse) GetItems() []*AttachmentIndexResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type AttachmentIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*AttachmentIndexResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *Pagination                     `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *AttachmentIndexResponse) Reset() {
	*x = AttachmentIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentIndexResponse) ProtoMessage() {}

func (x *AttachmentIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentIndexResponse.ProtoReflect.Descriptor instead.
func (*AttachmentIndexResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{42}
}

func (x *AttachmentIndexResponse) GetItems() []*AttachmentIndexResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *AttachmentIndexResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type LeaveWordCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang   string      `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
	Body   string      `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	Editor MediaEditor `protobuf:"varint,3,opt,name=editor,proto3,enum=palm.balsam.v1.MediaEditor" json:"editor,omitempty"`
	Ip     string      `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`
}

func (x *LeaveWordCreateRequest) Reset() {
	*x = LeaveWordCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveWordCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveWordCreateRequest) ProtoMessage() {}

func (x *LeaveWordCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveWordCreateRequest.ProtoReflect.Descriptor instead.
func (*LeaveWordCreateRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{43}
}

func (x *LeaveWordCreateRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *LeaveWordCreateRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *LeaveWordCreateRequest) GetEditor() MediaEditor {
	if x != nil {
		return x.Editor
	}
	return MediaEditor_Textarea
}

func (x *LeaveWordCreateRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

type LeaveWordIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items      []*LeaveWordIndexResponse_Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	Pagination *Pagination                    `protobuf:"bytes,2,opt,name=pagination,proto3" json:"pagination,omitempty"`
}

func (x *LeaveWordIndexResponse) Reset() {
	*x = LeaveWordIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveWordIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveWordIndexResponse) ProtoMessage() {}

func (x *LeaveWordIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveWordIndexResponse.ProtoReflect.Descriptor instead.
func (*LeaveWordIndexResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{44}
}

func (x *LeaveWordIndexResponse) GetItems() []*LeaveWordIndexResponse_Item {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *LeaveWordIndexResponse) GetPagination() *Pagination {
	if x != nil {
		return x.Pagination
	}
	return nil
}

type SiteStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Postgresql *SiteStatusResponse_PostgreSql `protobuf:"bytes,1,opt,name=postgresql,proto3" json:"postgresql,omitempty"`
	Redis      *SiteStatusResponse_Redis      `protobuf:"bytes,2,opt,name=redis,proto3" json:"redis,omitempty"`
	Opensearch *SiteStatusResponse_OpenSearch `protobuf:"bytes,3,opt,name=opensearch,proto3" json:"opensearch,omitempty"`
}

func (x *SiteStatusResponse) Reset() {
	*x = SiteStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteStatusResponse) ProtoMessage() {}

func (x *SiteStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteStatusResponse.ProtoReflect.Descriptor instead.
func (*SiteStatusResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{45}
}

func (x *SiteStatusResponse) GetPostgresql() *SiteStatusResponse_PostgreSql {
	if x != nil {
		return x.Postgresql
	}
	return nil
}

func (x *SiteStatusResponse) GetRedis() *SiteStatusResponse_Redis {
	if x != nil {
		return x.Redis
	}
	return nil
}

func (x *SiteStatusResponse) GetOpensearch() *SiteStatusResponse_OpenSearch {
	if x != nil {
		return x.Opensearch
	}
	return nil
}

type SiteIndexNowAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebSiteVerify *SiteIndexNowAccount_WebSiteVerify `protobuf:"bytes,1,opt,name=web_site_verify,json=webSiteVerify,proto3,oneof" json:"web_site_verify,omitempty"`
}

func (x *SiteIndexNowAccount) Reset() {
	*x = SiteIndexNowAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteIndexNowAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteIndexNowAccount) ProtoMessage() {}

func (x *SiteIndexNowAccount) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteIndexNowAccount.ProtoReflect.Descriptor instead.
func (*SiteIndexNowAccount) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{46}
}

func (x *SiteIndexNowAccount) GetWebSiteVerify() *SiteIndexNowAccount_WebSiteVerify {
	if x != nil {
		return x.WebSiteVerify
	}
	return nil
}

type SiteGoogleAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebSiteVerify *SiteGoogleAccount_WebSiteVerify `protobuf:"bytes,1,opt,name=web_site_verify,json=webSiteVerify,proto3,oneof" json:"web_site_verify,omitempty"`
	ReCaptcha     *SiteGoogleAccount_ReCaptcha     `protobuf:"bytes,2,opt,name=re_captcha,json=reCaptcha,proto3,oneof" json:"re_captcha,omitempty"`
}

func (x *SiteGoogleAccount) Reset() {
	*x = SiteGoogleAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteGoogleAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteGoogleAccount) ProtoMessage() {}

func (x *SiteGoogleAccount) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteGoogleAccount.ProtoReflect.Descriptor instead.
func (*SiteGoogleAccount) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{47}
}

func (x *SiteGoogleAccount) GetWebSiteVerify() *SiteGoogleAccount_WebSiteVerify {
	if x != nil {
		return x.WebSiteVerify
	}
	return nil
}

func (x *SiteGoogleAccount) GetReCaptcha() *SiteGoogleAccount_ReCaptcha {
	if x != nil {
		return x.ReCaptcha
	}
	return nil
}

type SiteBaiduAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WebSiteVerify *SiteBaiduAccount_WebSiteVerify `protobuf:"bytes,1,opt,name=web_site_verify,json=webSiteVerify,proto3,oneof" json:"web_site_verify,omitempty"`
}

func (x *SiteBaiduAccount) Reset() {
	*x = SiteBaiduAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteBaiduAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteBaiduAccount) ProtoMessage() {}

func (x *SiteBaiduAccount) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteBaiduAccount.ProtoReflect.Descriptor instead.
func (*SiteBaiduAccount) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{48}
}

func (x *SiteBaiduAccount) GetWebSiteVerify() *SiteBaiduAccount_WebSiteVerify {
	if x != nil {
		return x.WebSiteVerify
	}
	return nil
}

type SiteGetInfoByLangRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang string `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
}

func (x *SiteGetInfoByLangRequest) Reset() {
	*x = SiteGetInfoByLangRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteGetInfoByLangRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteGetInfoByLangRequest) ProtoMessage() {}

func (x *SiteGetInfoByLangRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteGetInfoByLangRequest.ProtoReflect.Descriptor instead.
func (*SiteGetInfoByLangRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{49}
}

func (x *SiteGetInfoByLangRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type SiteGetInfoByLangResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Subhead     string `protobuf:"bytes,2,opt,name=subhead,proto3" json:"subhead,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Copyright   string `protobuf:"bytes,4,opt,name=copyright,proto3" json:"copyright,omitempty"`
}

func (x *SiteGetInfoByLangResponse) Reset() {
	*x = SiteGetInfoByLangResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteGetInfoByLangResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteGetInfoByLangResponse) ProtoMessage() {}

func (x *SiteGetInfoByLangResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteGetInfoByLangResponse.ProtoReflect.Descriptor instead.
func (*SiteGetInfoByLangResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{50}
}

func (x *SiteGetInfoByLangResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SiteGetInfoByLangResponse) GetSubhead() string {
	if x != nil {
		return x.Subhead
	}
	return ""
}

func (x *SiteGetInfoByLangResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SiteGetInfoByLangResponse) GetCopyright() string {
	if x != nil {
		return x.Copyright
	}
	return ""
}

type SiteLayoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string                     `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Subhead     string                     `protobuf:"bytes,2,opt,name=subhead,proto3" json:"subhead,omitempty"`
	Description string                     `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Copyright   string                     `protobuf:"bytes,4,opt,name=copyright,proto3" json:"copyright,omitempty"`
	Author      *SiteLayoutResponse_Author `protobuf:"bytes,5,opt,name=author,proto3" json:"author,omitempty"`
	Keywords    []string                   `protobuf:"bytes,6,rep,name=keywords,proto3" json:"keywords,omitempty"`
	CnIcp       *SiteLayoutResponse_CnIcp  `protobuf:"bytes,11,opt,name=cn_icp,json=cnIcp,proto3,oneof" json:"cn_icp,omitempty"`
	CnGab       *SiteLayoutResponse_CnGab  `protobuf:"bytes,12,opt,name=cn_gab,json=cnGab,proto3,oneof" json:"cn_gab,omitempty"`
	Lang        string                     `protobuf:"bytes,97,opt,name=lang,proto3" json:"lang,omitempty"`
	Languages   string                     `protobuf:"bytes,98,opt,name=languages,proto3" json:"languages,omitempty"`
	Version     string                     `protobuf:"bytes,99,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *SiteLayoutResponse) Reset() {
	*x = SiteLayoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteLayoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteLayoutResponse) ProtoMessage() {}

func (x *SiteLayoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteLayoutResponse.ProtoReflect.Descriptor instead.
func (*SiteLayoutResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{51}
}

func (x *SiteLayoutResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SiteLayoutResponse) GetSubhead() string {
	if x != nil {
		return x.Subhead
	}
	return ""
}

func (x *SiteLayoutResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SiteLayoutResponse) GetCopyright() string {
	if x != nil {
		return x.Copyright
	}
	return ""
}

func (x *SiteLayoutResponse) GetAuthor() *SiteLayoutResponse_Author {
	if x != nil {
		return x.Author
	}
	return nil
}

func (x *SiteLayoutResponse) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *SiteLayoutResponse) GetCnIcp() *SiteLayoutResponse_CnIcp {
	if x != nil {
		return x.CnIcp
	}
	return nil
}

func (x *SiteLayoutResponse) GetCnGab() *SiteLayoutResponse_CnGab {
	if x != nil {
		return x.CnGab
	}
	return nil
}

func (x *SiteLayoutResponse) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *SiteLayoutResponse) GetLanguages() string {
	if x != nil {
		return x.Languages
	}
	return ""
}

func (x *SiteLayoutResponse) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type SiteInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang        string `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
	Title       string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Subhead     string `protobuf:"bytes,3,opt,name=subhead,proto3" json:"subhead,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Copyright   string `protobuf:"bytes,5,opt,name=copyright,proto3" json:"copyright,omitempty"`
}

func (x *SiteInfoRequest) Reset() {
	*x = SiteInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteInfoRequest) ProtoMessage() {}

func (x *SiteInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteInfoRequest.ProtoReflect.Descriptor instead.
func (*SiteInfoRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{52}
}

func (x *SiteInfoRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *SiteInfoRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SiteInfoRequest) GetSubhead() string {
	if x != nil {
		return x.Subhead
	}
	return ""
}

func (x *SiteInfoRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SiteInfoRequest) GetCopyright() string {
	if x != nil {
		return x.Copyright
	}
	return ""
}

type SiteKeywordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []string `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *SiteKeywordsRequest) Reset() {
	*x = SiteKeywordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteKeywordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteKeywordsRequest) ProtoMessage() {}

func (x *SiteKeywordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteKeywordsRequest.ProtoReflect.Descriptor instead.
func (*SiteKeywordsRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{53}
}

func (x *SiteKeywordsRequest) GetItems() []string {
	if x != nil {
		return x.Items
	}
	return nil
}

type UserIndexResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Uid             string                 `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	Lang            string                 `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
	Timezone        string                 `protobuf:"bytes,4,opt,name=timezone,proto3" json:"timezone,omitempty"`
	SignInCount     uint32                 `protobuf:"varint,5,opt,name=sign_in_count,json=signInCount,proto3" json:"sign_in_count,omitempty"`
	CurrentSignInAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=current_sign_in_at,json=currentSignInAt,proto3,oneof" json:"current_sign_in_at,omitempty"`
	CurrentSignInIp *string                `protobuf:"bytes,7,opt,name=current_sign_in_ip,json=currentSignInIp,proto3,oneof" json:"current_sign_in_ip,omitempty"`
	LastSignInAt    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_sign_in_at,json=lastSignInAt,proto3,oneof" json:"last_sign_in_at,omitempty"`
	LastSignInIp    *string                `protobuf:"bytes,9,opt,name=last_sign_in_ip,json=lastSignInIp,proto3,oneof" json:"last_sign_in_ip,omitempty"`
	LockedaAt       *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=lockeda_at,json=lockedaAt,proto3,oneof" json:"lockeda_at,omitempty"`
	DeletedAt       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *UserIndexResponse_Item) Reset() {
	*x = UserIndexResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserIndexResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserIndexResponse_Item) ProtoMessage() {}

func (x *UserIndexResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserIndexResponse_Item.ProtoReflect.Descriptor instead.
func (*UserIndexResponse_Item) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{15, 0}
}

func (x *UserIndexResponse_Item) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserIndexResponse_Item) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UserIndexResponse_Item) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *UserIndexResponse_Item) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *UserIndexResponse_Item) GetSignInCount() uint32 {
	if x != nil {
		return x.SignInCount
	}
	return 0
}

func (x *UserIndexResponse_Item) GetCurrentSignInAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CurrentSignInAt
	}
	return nil
}

func (x *UserIndexResponse_Item) GetCurrentSignInIp() string {
	if x != nil && x.CurrentSignInIp != nil {
		return *x.CurrentSignInIp
	}
	return ""
}

func (x *UserIndexResponse_Item) GetLastSignInAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSignInAt
	}
	return nil
}

func (x *UserIndexResponse_Item) GetLastSignInIp() string {
	if x != nil && x.LastSignInIp != nil {
		return *x.LastSignInIp
	}
	return ""
}

func (x *UserIndexResponse_Item) GetLockedaAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LockedaAt
	}
	return nil
}

func (x *UserIndexResponse_Item) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *UserIndexResponse_Item) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type UserLogsResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint64                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Plugin       string                      `protobuf:"bytes,2,opt,name=plugin,proto3" json:"plugin,omitempty"`
	Ip           string                      `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Level        UserLogsResponse_Item_Level `protobuf:"varint,4,opt,name=level,proto3,enum=palm.balsam.v1.UserLogsResponse_Item_Level" json:"level,omitempty"`
	ResourceType string                      `protobuf:"bytes,5,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	ResourceId   *uint64                     `protobuf:"varint,6,opt,name=resource_id,json=resourceId,proto3,oneof" json:"resource_id,omitempty"`
	Message      string                      `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	CreatedAt    *timestamppb.Timestamp      `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *UserLogsResponse_Item) Reset() {
	*x = UserLogsResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLogsResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLogsResponse_Item) ProtoMessage() {}

func (x *UserLogsResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLogsResponse_Item.ProtoReflect.Descriptor instead.
func (*UserLogsResponse_Item) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{17, 0}
}

func (x *UserLogsResponse_Item) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserLogsResponse_Item) GetPlugin() string {
	if x != nil {
		return x.Plugin
	}
	return ""
}

func (x *UserLogsResponse_Item) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *UserLogsResponse_Item) GetLevel() UserLogsResponse_Item_Level {
	if x != nil {
		return x.Level
	}
	return UserLogsResponse_Item_Debug
}

func (x *UserLogsResponse_Item) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *UserLogsResponse_Item) GetResourceId() uint64 {
	if x != nil && x.ResourceId != nil {
		return *x.ResourceId
	}
	return 0
}

func (x *UserLogsResponse_Item) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UserLogsResponse_Item) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type EmailUserIndexResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId      uint64                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RealName    string                 `protobuf:"bytes,3,opt,name=real_name,json=realName,proto3" json:"real_name,omitempty"`
	Nickname    string                 `protobuf:"bytes,4,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Email       string                 `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	Avatar      string                 `protobuf:"bytes,6,opt,name=avatar,proto3" json:"avatar,omitempty"`
	ConfirmedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=confirmed_at,json=confirmedAt,proto3,oneof" json:"confirmed_at,omitempty"`
	DeletedAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *EmailUserIndexResponse_Item) Reset() {
	*x = EmailUserIndexResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailUserIndexResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailUserIndexResponse_Item) ProtoMessage() {}

func (x *EmailUserIndexResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailUserIndexResponse_Item.ProtoReflect.Descriptor instead.
func (*EmailUserIndexResponse_Item) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{20, 0}
}

func (x *EmailUserIndexResponse_Item) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EmailUserIndexResponse_Item) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *EmailUserIndexResponse_Item) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *EmailUserIndexResponse_Item) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *EmailUserIndexResponse_Item) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *EmailUserIndexResponse_Item) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *EmailUserIndexResponse_Item) GetConfirmedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ConfirmedAt
	}
	return nil
}

func (x *EmailUserIndexResponse_Item) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *EmailUserIndexResponse_Item) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type UserSignInResponse_Detail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 *string                                `protobuf:"bytes,1,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Avatar               *string                                `protobuf:"bytes,2,opt,name=avatar,proto3,oneof" json:"avatar,omitempty"`
	Lang                 string                                 `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
	Timezone             string                                 `protobuf:"bytes,4,opt,name=timezone,proto3" json:"timezone,omitempty"`
	ProviderType         UserSignInResponse_Detail_ProviderType `protobuf:"varint,8,opt,name=provider_type,json=providerType,proto3,enum=palm.balsam.v1.UserSignInResponse_Detail_ProviderType" json:"provider_type,omitempty"`
	ProviderId           uint64                                 `protobuf:"varint,9,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	HasEmail             bool                                   `protobuf:"varint,11,opt,name=has_email,json=hasEmail,proto3" json:"has_email,omitempty"`
	HasPhone             bool                                   `protobuf:"varint,12,opt,name=has_phone,json=hasPhone,proto3" json:"has_phone,omitempty"`
	HasGoogleOauth2      bool                                   `protobuf:"varint,21,opt,name=has_google_oauth2,json=hasGoogleOauth2,proto3" json:"has_google_oauth2,omitempty"`
	HasWechatOauth2      bool                                   `protobuf:"varint,22,opt,name=has_wechat_oauth2,json=hasWechatOauth2,proto3" json:"has_wechat_oauth2,omitempty"`
	HasWechatMiniProgram bool                                   `protobuf:"varint,23,opt,name=has_wechat_mini_program,json=hasWechatMiniProgram,proto3" json:"has_wechat_mini_program,omitempty"`
	HasFacebookOauth2    bool                                   `protobuf:"varint,24,opt,name=has_facebook_oauth2,json=hasFacebookOauth2,proto3" json:"has_facebook_oauth2,omitempty"`
}

func (x *UserSignInResponse_Detail) Reset() {
	*x = UserSignInResponse_Detail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSignInResponse_Detail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignInResponse_Detail) ProtoMessage() {}

func (x *UserSignInResponse_Detail) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignInResponse_Detail.ProtoReflect.Descriptor instead.
func (*UserSignInResponse_Detail) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{26, 0}
}

func (x *UserSignInResponse_Detail) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UserSignInResponse_Detail) GetAvatar() string {
	if x != nil && x.Avatar != nil {
		return *x.Avatar
	}
	return ""
}

func (x *UserSignInResponse_Detail) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *UserSignInResponse_Detail) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *UserSignInResponse_Detail) GetProviderType() UserSignInResponse_Detail_ProviderType {
	if x != nil {
		return x.ProviderType
	}
	return UserSignInResponse_Detail_Email
}

func (x *UserSignInResponse_Detail) GetProviderId() uint64 {
	if x != nil {
		return x.ProviderId
	}
	return 0
}

func (x *UserSignInResponse_Detail) GetHasEmail() bool {
	if x != nil {
		return x.HasEmail
	}
	return false
}

func (x *UserSignInResponse_Detail) GetHasPhone() bool {
	if x != nil {
		return x.HasPhone
	}
	return false
}

func (x *UserSignInResponse_Detail) GetHasGoogleOauth2() bool {
	if x != nil {
		return x.HasGoogleOauth2
	}
	return false
}

func (x *UserSignInResponse_Detail) GetHasWechatOauth2() bool {
	if x != nil {
		return x.HasWechatOauth2
	}
	return false
}

func (x *UserSignInResponse_Detail) GetHasWechatMiniProgram() bool {
	if x != nil {
		return x.HasWechatMiniProgram
	}
	return false
}

func (x *UserSignInResponse_Detail) GetHasFacebookOauth2() bool {
	if x != nil {
		return x.HasFacebookOauth2
	}
	return false
}

type UserSignInResponse_Permission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Operation    string  `protobuf:"bytes,1,opt,name=operation,proto3" json:"operation,omitempty"`
	ResourceType string  `protobuf:"bytes,2,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	ResourceId   *uint64 `protobuf:"varint,3,opt,name=resource_id,json=resourceId,proto3,oneof" json:"resource_id,omitempty"`
}

func (x *UserSignInResponse_Permission) Reset() {
	*x = UserSignInResponse_Permission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSignInResponse_Permission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignInResponse_Permission) ProtoMessage() {}

func (x *UserSignInResponse_Permission) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignInResponse_Permission.ProtoReflect.Descriptor instead.
func (*UserSignInResponse_Permission) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{26, 1}
}

func (x *UserSignInResponse_Permission) GetOperation() string {
	if x != nil {
		return x.Operation
	}
	return ""
}

func (x *UserSignInResponse_Permission) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *UserSignInResponse_Permission) GetResourceId() uint64 {
	if x != nil && x.ResourceId != nil {
		return *x.ResourceId
	}
	return 0
}

type UserSignInResponse_Menu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label string                     `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	To    string                     `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	Icon  *string                    `protobuf:"bytes,3,opt,name=icon,proto3,oneof" json:"icon,omitempty"`
	Menus []*UserSignInResponse_Menu `protobuf:"bytes,9,rep,name=menus,proto3" json:"menus,omitempty"`
}

func (x *UserSignInResponse_Menu) Reset() {
	*x = UserSignInResponse_Menu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSignInResponse_Menu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSignInResponse_Menu) ProtoMessage() {}

func (x *UserSignInResponse_Menu) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSignInResponse_Menu.ProtoReflect.Descriptor instead.
func (*UserSignInResponse_Menu) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{26, 2}
}

func (x *UserSignInResponse_Menu) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *UserSignInResponse_Menu) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *UserSignInResponse_Menu) GetIcon() string {
	if x != nil && x.Icon != nil {
		return *x.Icon
	}
	return ""
}

func (x *UserSignInResponse_Menu) GetMenus() []*UserSignInResponse_Menu {
	if x != nil {
		return x.Menus
	}
	return nil
}

type GoogleOauth2UserIndexResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId        uint64                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Subject       string                 `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	Email         *string                `protobuf:"bytes,4,opt,name=email,proto3,oneof" json:"email,omitempty"`
	EmailVerified bool                   `protobuf:"varint,5,opt,name=email_verified,json=emailVerified,proto3" json:"email_verified,omitempty"`
	Name          *string                `protobuf:"bytes,6,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Picture       *string                `protobuf:"bytes,7,opt,name=picture,proto3,oneof" json:"picture,omitempty"`
	Locale        *string                `protobuf:"bytes,8,opt,name=locale,proto3,oneof" json:"locale,omitempty"`
	DeletedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *GoogleOauth2UserIndexResponse_Item) Reset() {
	*x = GoogleOauth2UserIndexResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoogleOauth2UserIndexResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoogleOauth2UserIndexResponse_Item) ProtoMessage() {}

func (x *GoogleOauth2UserIndexResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoogleOauth2UserIndexResponse_Item.ProtoReflect.Descriptor instead.
func (*GoogleOauth2UserIndexResponse_Item) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{28, 0}
}

func (x *GoogleOauth2UserIndexResponse_Item) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GoogleOauth2UserIndexResponse_Item) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GoogleOauth2UserIndexResponse_Item) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *GoogleOauth2UserIndexResponse_Item) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *GoogleOauth2UserIndexResponse_Item) GetEmailVerified() bool {
	if x != nil {
		return x.EmailVerified
	}
	return false
}

func (x *GoogleOauth2UserIndexResponse_Item) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *GoogleOauth2UserIndexResponse_Item) GetPicture() string {
	if x != nil && x.Picture != nil {
		return *x.Picture
	}
	return ""
}

func (x *GoogleOauth2UserIndexResponse_Item) GetLocale() string {
	if x != nil && x.Locale != nil {
		return *x.Locale
	}
	return ""
}

func (x *GoogleOauth2UserIndexResponse_Item) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *GoogleOauth2UserIndexResponse_Item) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type WechatOauth2UserIndexResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         uint64                                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId     uint64                                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UnionId    string                                  `protobuf:"bytes,3,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`
	AppId      string                                  `protobuf:"bytes,4,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OpenId     string                                  `protobuf:"bytes,5,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	Nickname   string                                  `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname,omitempty"`
	Sex        WechatOauth2UserIndexResponse_Item_Sex  `protobuf:"varint,7,opt,name=sex,proto3,enum=palm.balsam.v1.WechatOauth2UserIndexResponse_Item_Sex" json:"sex,omitempty"`
	City       string                                  `protobuf:"bytes,8,opt,name=city,proto3" json:"city,omitempty"`
	Province   string                                  `protobuf:"bytes,9,opt,name=province,proto3" json:"province,omitempty"`
	Country    string                                  `protobuf:"bytes,10,opt,name=country,proto3" json:"country,omitempty"`
	HeadImgUrl *string                                 `protobuf:"bytes,11,opt,name=head_img_url,json=headImgUrl,proto3,oneof" json:"head_img_url,omitempty"`
	Privilege  []string                                `protobuf:"bytes,12,rep,name=privilege,proto3" json:"privilege,omitempty"`
	Picture    *string                                 `protobuf:"bytes,13,opt,name=picture,proto3,oneof" json:"picture,omitempty"`
	Lang       WechatOauth2UserIndexResponse_Item_Lang `protobuf:"varint,14,opt,name=lang,proto3,enum=palm.balsam.v1.WechatOauth2UserIndexResponse_Item_Lang" json:"lang,omitempty"`
	DeletedAt  *timestamppb.Timestamp                  `protobuf:"bytes,15,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	UpdatedAt  *timestamppb.Timestamp                  `protobuf:"bytes,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *WechatOauth2UserIndexResponse_Item) Reset() {
	*x = WechatOauth2UserIndexResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatOauth2UserIndexResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatOauth2UserIndexResponse_Item) ProtoMessage() {}

func (x *WechatOauth2UserIndexResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatOauth2UserIndexResponse_Item.ProtoReflect.Descriptor instead.
func (*WechatOauth2UserIndexResponse_Item) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{31, 0}
}

func (x *WechatOauth2UserIndexResponse_Item) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WechatOauth2UserIndexResponse_Item) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WechatOauth2UserIndexResponse_Item) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *WechatOauth2UserIndexResponse_Item) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WechatOauth2UserIndexResponse_Item) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *WechatOauth2UserIndexResponse_Item) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *WechatOauth2UserIndexResponse_Item) GetSex() WechatOauth2UserIndexResponse_Item_Sex {
	if x != nil {
		return x.Sex
	}
	return WechatOauth2UserIndexResponse_Item_Male
}

func (x *WechatOauth2UserIndexResponse_Item) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *WechatOauth2UserIndexResponse_Item) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *WechatOauth2UserIndexResponse_Item) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *WechatOauth2UserIndexResponse_Item) GetHeadImgUrl() string {
	if x != nil && x.HeadImgUrl != nil {
		return *x.HeadImgUrl
	}
	return ""
}

func (x *WechatOauth2UserIndexResponse_Item) GetPrivilege() []string {
	if x != nil {
		return x.Privilege
	}
	return nil
}

func (x *WechatOauth2UserIndexResponse_Item) GetPicture() string {
	if x != nil && x.Picture != nil {
		return *x.Picture
	}
	return ""
}

func (x *WechatOauth2UserIndexResponse_Item) GetLang() WechatOauth2UserIndexResponse_Item_Lang {
	if x != nil {
		return x.Lang
	}
	return WechatOauth2UserIndexResponse_Item_Cn
}

func (x *WechatOauth2UserIndexResponse_Item) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *WechatOauth2UserIndexResponse_Item) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type WechatMiniProgramUserIndexResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId    uint64                 `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UnionId   string                 `protobuf:"bytes,3,opt,name=union_id,json=unionId,proto3" json:"union_id,omitempty"`
	AppId     string                 `protobuf:"bytes,4,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	OpenId    string                 `protobuf:"bytes,5,opt,name=open_id,json=openId,proto3" json:"open_id,omitempty"`
	Nickname  *string                `protobuf:"bytes,6,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`
	AvatarUrl *string                `protobuf:"bytes,7,opt,name=avatar_url,json=avatarUrl,proto3,oneof" json:"avatar_url,omitempty"`
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *WechatMiniProgramUserIndexResponse_Item) Reset() {
	*x = WechatMiniProgramUserIndexResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatMiniProgramUserIndexResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatMiniProgramUserIndexResponse_Item) ProtoMessage() {}

func (x *WechatMiniProgramUserIndexResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatMiniProgramUserIndexResponse_Item.ProtoReflect.Descriptor instead.
func (*WechatMiniProgramUserIndexResponse_Item) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{32, 0}
}

func (x *WechatMiniProgramUserIndexResponse_Item) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WechatMiniProgramUserIndexResponse_Item) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WechatMiniProgramUserIndexResponse_Item) GetUnionId() string {
	if x != nil {
		return x.UnionId
	}
	return ""
}

func (x *WechatMiniProgramUserIndexResponse_Item) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *WechatMiniProgramUserIndexResponse_Item) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

func (x *WechatMiniProgramUserIndexResponse_Item) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *WechatMiniProgramUserIndexResponse_Item) GetAvatarUrl() string {
	if x != nil && x.AvatarUrl != nil {
		return *x.AvatarUrl
	}
	return ""
}

func (x *WechatMiniProgramUserIndexResponse_Item) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *WechatMiniProgramUserIndexResponse_Item) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type SessionIndexResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User         uint64                                 `protobuf:"varint,1,opt,name=user,proto3" json:"user,omitempty"`
	Uid          string                                 `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`
	ProviderType UserSignInResponse_Detail_ProviderType `protobuf:"varint,3,opt,name=provider_type,json=providerType,proto3,enum=palm.balsam.v1.UserSignInResponse_Detail_ProviderType" json:"provider_type,omitempty"`
	ProviderId   uint64                                 `protobuf:"varint,4,opt,name=provider_id,json=providerId,proto3" json:"provider_id,omitempty"`
	Ip           string                                 `protobuf:"bytes,5,opt,name=ip,proto3" json:"ip,omitempty"`
	ExpiresAt    *timestamppb.Timestamp                 `protobuf:"bytes,6,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	DeletedAt    *timestamppb.Timestamp                 `protobuf:"bytes,7,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	CreatedAt    *timestamppb.Timestamp                 `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *SessionIndexResponse_Item) Reset() {
	*x = SessionIndexResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionIndexResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionIndexResponse_Item) ProtoMessage() {}

func (x *SessionIndexResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionIndexResponse_Item.ProtoReflect.Descriptor instead.
func (*SessionIndexResponse_Item) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{33, 0}
}

func (x *SessionIndexResponse_Item) GetUser() uint64 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *SessionIndexResponse_Item) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *SessionIndexResponse_Item) GetProviderType() UserSignInResponse_Detail_ProviderType {
	if x != nil {
		return x.ProviderType
	}
	return UserSignInResponse_Detail_Email
}

func (x *SessionIndexResponse_Item) GetProviderId() uint64 {
	if x != nil {
		return x.ProviderId
	}
	return 0
}

func (x *SessionIndexResponse_Item) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *SessionIndexResponse_Item) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *SessionIndexResponse_Item) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *SessionIndexResponse_Item) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type LocaleIndexResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Lang      string                 `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	Code      string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`
	Message   string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *LocaleIndexResponse_Item) Reset() {
	*x = LocaleIndexResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocaleIndexResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocaleIndexResponse_Item) ProtoMessage() {}

func (x *LocaleIndexResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocaleIndexResponse_Item.ProtoReflect.Descriptor instead.
func (*LocaleIndexResponse_Item) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{35, 0}
}

func (x *LocaleIndexResponse_Item) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LocaleIndexResponse_Item) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *LocaleIndexResponse_Item) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *LocaleIndexResponse_Item) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LocaleIndexResponse_Item) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type AttachmentIndexResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User        uint64                 `protobuf:"varint,1,opt,name=user,proto3" json:"user,omitempty"`
	Bucket      string                 `protobuf:"bytes,2,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Object      string                 `protobuf:"bytes,3,opt,name=object,proto3" json:"object,omitempty"`
	Title       string                 `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`
	Size        uint64                 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	ContentType string                 `protobuf:"bytes,6,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	Public      bool                   `protobuf:"varint,7,opt,name=public,proto3" json:"public,omitempty"`
	PublishedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=published_at,json=publishedAt,proto3,oneof" json:"published_at,omitempty"`
	DeletedAt   *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *AttachmentIndexResponse_Item) Reset() {
	*x = AttachmentIndexResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttachmentIndexResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentIndexResponse_Item) ProtoMessage() {}

func (x *AttachmentIndexResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentIndexResponse_Item.ProtoReflect.Descriptor instead.
func (*AttachmentIndexResponse_Item) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{42, 0}
}

func (x *AttachmentIndexResponse_Item) GetUser() uint64 {
	if x != nil {
		return x.User
	}
	return 0
}

func (x *AttachmentIndexResponse_Item) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *AttachmentIndexResponse_Item) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

func (x *AttachmentIndexResponse_Item) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AttachmentIndexResponse_Item) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AttachmentIndexResponse_Item) GetContentType() string {
	if x != nil {
		return x.ContentType
	}
	return ""
}

func (x *AttachmentIndexResponse_Item) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *AttachmentIndexResponse_Item) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

func (x *AttachmentIndexResponse_Item) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *AttachmentIndexResponse_Item) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type LeaveWordIndexResponse_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          uint64                             `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Lang        string                             `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	Ip          string                             `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Body        string                             `protobuf:"bytes,4,opt,name=body,proto3" json:"body,omitempty"`
	Editor      MediaEditor                        `protobuf:"varint,5,opt,name=editor,proto3,enum=palm.balsam.v1.MediaEditor" json:"editor,omitempty"`
	Status      LeaveWordIndexResponse_Item_Status `protobuf:"varint,6,opt,name=status,proto3,enum=palm.balsam.v1.LeaveWordIndexResponse_Item_Status" json:"status,omitempty"`
	PublishedAt *timestamppb.Timestamp             `protobuf:"bytes,7,opt,name=published_at,json=publishedAt,proto3,oneof" json:"published_at,omitempty"`
	DeletedAt   *timestamppb.Timestamp             `protobuf:"bytes,8,opt,name=deleted_at,json=deletedAt,proto3,oneof" json:"deleted_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp             `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *LeaveWordIndexResponse_Item) Reset() {
	*x = LeaveWordIndexResponse_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveWordIndexResponse_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveWordIndexResponse_Item) ProtoMessage() {}

func (x *LeaveWordIndexResponse_Item) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveWordIndexResponse_Item.ProtoReflect.Descriptor instead.
func (*LeaveWordIndexResponse_Item) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{44, 0}
}

func (x *LeaveWordIndexResponse_Item) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LeaveWordIndexResponse_Item) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *LeaveWordIndexResponse_Item) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *LeaveWordIndexResponse_Item) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *LeaveWordIndexResponse_Item) GetEditor() MediaEditor {
	if x != nil {
		return x.Editor
	}
	return MediaEditor_Textarea
}

func (x *LeaveWordIndexResponse_Item) GetStatus() LeaveWordIndexResponse_Item_Status {
	if x != nil {
		return x.Status
	}
	return LeaveWordIndexResponse_Item_Pending
}

func (x *LeaveWordIndexResponse_Item) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

func (x *LeaveWordIndexResponse_Item) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *LeaveWordIndexResponse_Item) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type SiteStatusResponse_Redis struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info  []string `protobuf:"bytes,1,rep,name=info,proto3" json:"info,omitempty"`
	Nodes []string `protobuf:"bytes,2,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *SiteStatusResponse_Redis) Reset() {
	*x = SiteStatusResponse_Redis{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteStatusResponse_Redis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteStatusResponse_Redis) ProtoMessage() {}

func (x *SiteStatusResponse_Redis) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteStatusResponse_Redis.ProtoReflect.Descriptor instead.
func (*SiteStatusResponse_Redis) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{45, 0}
}

func (x *SiteStatusResponse_Redis) GetInfo() []string {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *SiteStatusResponse_Redis) GetNodes() []string {
	if x != nil {
		return x.Nodes
	}
	return nil
}

type SiteStatusResponse_PostgreSql struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version  string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Versions []string `protobuf:"bytes,2,rep,name=versions,proto3" json:"versions,omitempty"`
}

func (x *SiteStatusResponse_PostgreSql) Reset() {
	*x = SiteStatusResponse_PostgreSql{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteStatusResponse_PostgreSql) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteStatusResponse_PostgreSql) ProtoMessage() {}

func (x *SiteStatusResponse_PostgreSql) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteStatusResponse_PostgreSql.ProtoReflect.Descriptor instead.
func (*SiteStatusResponse_PostgreSql) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{45, 1}
}

func (x *SiteStatusResponse_PostgreSql) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *SiteStatusResponse_PostgreSql) GetVersions() []string {
	if x != nil {
		return x.Versions
	}
	return nil
}

type SiteStatusResponse_OpenSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plugins string `protobuf:"bytes,1,opt,name=plugins,proto3" json:"plugins,omitempty"`
}

func (x *SiteStatusResponse_OpenSearch) Reset() {
	*x = SiteStatusResponse_OpenSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteStatusResponse_OpenSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteStatusResponse_OpenSearch) ProtoMessage() {}

func (x *SiteStatusResponse_OpenSearch) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteStatusResponse_OpenSearch.ProtoReflect.Descriptor instead.
func (*SiteStatusResponse_OpenSearch) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{45, 2}
}

func (x *SiteStatusResponse_OpenSearch) GetPlugins() string {
	if x != nil {
		return x.Plugins
	}
	return ""
}

type SiteIndexNowAccount_WebSiteVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *SiteIndexNowAccount_WebSiteVerify) Reset() {
	*x = SiteIndexNowAccount_WebSiteVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteIndexNowAccount_WebSiteVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteIndexNowAccount_WebSiteVerify) ProtoMessage() {}

func (x *SiteIndexNowAccount_WebSiteVerify) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteIndexNowAccount_WebSiteVerify.ProtoReflect.Descriptor instead.
func (*SiteIndexNowAccount_WebSiteVerify) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{46, 0}
}

func (x *SiteIndexNowAccount_WebSiteVerify) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type SiteGoogleAccount_WebSiteVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SiteGoogleAccount_WebSiteVerify) Reset() {
	*x = SiteGoogleAccount_WebSiteVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteGoogleAccount_WebSiteVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteGoogleAccount_WebSiteVerify) ProtoMessage() {}

func (x *SiteGoogleAccount_WebSiteVerify) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteGoogleAccount_WebSiteVerify.ProtoReflect.Descriptor instead.
func (*SiteGoogleAccount_WebSiteVerify) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{47, 0}
}

func (x *SiteGoogleAccount_WebSiteVerify) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type SiteGoogleAccount_ReCaptcha struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteKey string `protobuf:"bytes,1,opt,name=site_key,json=siteKey,proto3" json:"site_key,omitempty"`
	Secret  string `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *SiteGoogleAccount_ReCaptcha) Reset() {
	*x = SiteGoogleAccount_ReCaptcha{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteGoogleAccount_ReCaptcha) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteGoogleAccount_ReCaptcha) ProtoMessage() {}

func (x *SiteGoogleAccount_ReCaptcha) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteGoogleAccount_ReCaptcha.ProtoReflect.Descriptor instead.
func (*SiteGoogleAccount_ReCaptcha) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{47, 1}
}

func (x *SiteGoogleAccount_ReCaptcha) GetSiteKey() string {
	if x != nil {
		return x.SiteKey
	}
	return ""
}

func (x *SiteGoogleAccount_ReCaptcha) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type SiteBaiduAccount_WebSiteVerify struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code    string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *SiteBaiduAccount_WebSiteVerify) Reset() {
	*x = SiteBaiduAccount_WebSiteVerify{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteBaiduAccount_WebSiteVerify) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteBaiduAccount_WebSiteVerify) ProtoMessage() {}

func (x *SiteBaiduAccount_WebSiteVerify) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteBaiduAccount_WebSiteVerify.ProtoReflect.Descriptor instead.
func (*SiteBaiduAccount_WebSiteVerify) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{48, 0}
}

func (x *SiteBaiduAccount_WebSiteVerify) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SiteBaiduAccount_WebSiteVerify) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type SiteLayoutResponse_Author struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email string `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *SiteLayoutResponse_Author) Reset() {
	*x = SiteLayoutResponse_Author{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteLayoutResponse_Author) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteLayoutResponse_Author) ProtoMessage() {}

func (x *SiteLayoutResponse_Author) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteLayoutResponse_Author.ProtoReflect.Descriptor instead.
func (*SiteLayoutResponse_Author) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{51, 0}
}

func (x *SiteLayoutResponse_Author) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SiteLayoutResponse_Author) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type SiteLayoutResponse_CnGab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *SiteLayoutResponse_CnGab) Reset() {
	*x = SiteLayoutResponse_CnGab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteLayoutResponse_CnGab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteLayoutResponse_CnGab) ProtoMessage() {}

func (x *SiteLayoutResponse_CnGab) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteLayoutResponse_CnGab.ProtoReflect.Descriptor instead.
func (*SiteLayoutResponse_CnGab) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{51, 1}
}

func (x *SiteLayoutResponse_CnGab) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SiteLayoutResponse_CnGab) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SiteLayoutResponse_CnIcp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *SiteLayoutResponse_CnIcp) Reset() {
	*x = SiteLayoutResponse_CnIcp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteLayoutResponse_CnIcp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteLayoutResponse_CnIcp) ProtoMessage() {}

func (x *SiteLayoutResponse_CnIcp) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteLayoutResponse_CnIcp.ProtoReflect.Descriptor instead.
func (*SiteLayoutResponse_CnIcp) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{51, 2}
}

func (x *SiteLayoutResponse_CnIcp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

var File_balsam_proto protoreflect.FileDescriptor

var file_balsam_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x1b, 0x0a, 0x09,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x0f, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x13, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x69, 0x64, 0x22, 0x1e, 0x0a, 0x0a,
	0x55, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x22, 0x2f, 0x0a, 0x05,
	0x50, 0x61, 0x67, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x4a, 0x0a,
	0x0a, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x2b, 0x0a, 0x0f, 0x41, 0x65, 0x73,
	0x50, 0x6c, 0x61, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x3e, 0x0a, 0x0e, 0x41, 0x65, 0x73, 0x43, 0x6f, 0x64,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x22, 0xa2, 0x02, 0x0a, 0x0e, 0x4a, 0x77, 0x74, 0x53, 0x69,
	0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x06, 0x6b, 0x65, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x6b, 0x65, 0x79,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75, 0x64, 0x69, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x5f, 0x62, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x65,
	0x78, 0x74, 0x72, 0x61, 0x18, 0x63, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69,
	0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x27, 0x0a, 0x0f, 0x4a,
	0x77, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5c, 0x0a, 0x10, 0x4a, 0x77, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e,
	0x63, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x11, 0x4a, 0x77, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6a, 0x77, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x77, 0x74, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x88, 0x01, 0x01,
	0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x27, 0x0a, 0x0f, 0x48, 0x4d, 0x61, 0x63, 0x53, 0x69, 0x67,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x22, 0x3a,
	0x0a, 0x10, 0x48, 0x4d, 0x61, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x22, 0x51, 0x0a, 0x11, 0x48, 0x4d,
	0x61, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x22, 0x5e, 0x0a,
	0x18, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e,
	0x67, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x22, 0xaf, 0x06,
	0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c,
	0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x9f, 0x05,
	0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x69, 0x67, 0x6e,
	0x5f, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4c, 0x0a, 0x12,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x5f,
	0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53,
	0x69, 0x67, 0x6e, 0x49, 0x6e, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x12, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x69, 0x70,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x49, 0x70, 0x88, 0x01, 0x01, 0x12, 0x46, 0x0a, 0x0f,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x48, 0x02, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x41,
	0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x67,
	0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52,
	0x0c, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x49, 0x70, 0x88, 0x01, 0x01,
	0x12, 0x3e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x61, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x04, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x61, 0x41, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x3e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x05, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x15, 0x0a, 0x13, 0x5f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x5f,
	0x61, 0x74, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73,
	0x69, 0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x69, 0x70, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6c, 0x61,
	0x73, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x61, 0x74, 0x42, 0x12, 0x0a,
	0x10, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x5f, 0x69,
	0x70, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x61, 0x5f, 0x61, 0x74,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22,
	0x57, 0x0a, 0x0b, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x42,
	0x07, 0x0a, 0x05, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x22, 0xf2, 0x03, 0x0a, 0x10, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xe4, 0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x41, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61,
	0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x24, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x31, 0x0a, 0x05, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x49, 0x6e, 0x66, 0x6f, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x61, 0x72, 0x6e,
	0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x10, 0x03, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x22, 0x2f, 0x0a,
	0x17, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x38,
	0x0a, 0x1a, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x8f, 0x04, 0x0a, 0x16, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x61, 0x6c,
	0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x1a, 0xf5, 0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x42, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52,
	0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x3e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48,
	0x01, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x4c, 0x0a, 0x18, 0x55, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x52, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72,
	0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x2a, 0x0a, 0x12,
	0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa1, 0x01, 0x0a, 0x18, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1c, 0x0a,
	0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x03, 0x74, 0x74, 0x6c, 0x42, 0x06, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0xf6, 0x01, 0x0a,
	0x18, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x42, 0x79, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61,
	0x6c, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65,
	0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65,
	0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x9c, 0x09, 0x0a, 0x12, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69,
	0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x41, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x06, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x4f, 0x0a, 0x0b, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3d, 0x0a, 0x05,
	0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x4d, 0x65, 0x6e, 0x75, 0x52, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x1a, 0xee, 0x04, 0x0a, 0x06,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12,
	0x1b, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x5b, 0x0a, 0x0d,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x50,
	0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61,
	0x73, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68,
	0x61, 0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x73, 0x5f, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x68, 0x61, 0x73, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x68, 0x61, 0x73, 0x5f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x68, 0x61, 0x73, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32,
	0x12, 0x2a, 0x0a, 0x11, 0x68, 0x61, 0x73, 0x5f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6f,
	0x61, 0x75, 0x74, 0x68, 0x32, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x12, 0x35, 0x0a, 0x17,
	0x68, 0x61, 0x73, 0x5f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x68,
	0x61, 0x73, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x12, 0x2e, 0x0a, 0x13, 0x68, 0x61, 0x73, 0x5f, 0x66, 0x61, 0x63, 0x65, 0x62,
	0x6f, 0x6f, 0x6b, 0x5f, 0x6f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x68, 0x61, 0x73, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x32, 0x22, 0x73, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x10, 0x0b, 0x12, 0x10, 0x0a, 0x0c, 0x57,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x10, 0x0c, 0x12, 0x15, 0x0a,
	0x11, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x10, 0x0d, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x10, 0x0e, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x1a, 0x85, 0x01, 0x0a,
	0x0a, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24,
	0x0a, 0x0b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49,
	0x64, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x1a, 0x8d, 0x01, 0x0a, 0x04, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61,
	0x62, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x17, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x05,
	0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x4d, 0x65, 0x6e, 0x75, 0x52, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x69, 0x63, 0x6f, 0x6e, 0x22, 0x3c, 0x0a, 0x20, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4f, 0x61,
	0x75, 0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x22, 0xbc, 0x04, 0x0a, 0x1d, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4f, 0x61, 0x75, 0x74, 0x68,
	0x32, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3a,
	0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a,
	0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x94, 0x03, 0x0a, 0x04, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01,
	0x01, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66,
	0x69, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01,
	0x01, 0x12, 0x1d, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x02, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1b, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x03, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x04, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x22, 0x33, 0x0a, 0x16, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x42, 0x79, 0x55, 0x6e, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75,
	0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x4f, 0x0a, 0x1d, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x22, 0xdf, 0x06, 0x0a, 0x1d, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62,
	0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0xb7, 0x05, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x48, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x36, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c,
	0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75,
	0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x2e, 0x53, 0x65, 0x78, 0x52, 0x03, 0x73,
	0x65, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0c,
	0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6d, 0x67, 0x55, 0x72, 0x6c,
	0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67, 0x65,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x69, 0x76, 0x69, 0x6c, 0x65, 0x67,
	0x65, 0x12, 0x1d, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x4b, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x37,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x3e, 0x0a,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x1b, 0x0a, 0x03, 0x53, 0x65, 0x78, 0x12,
	0x08, 0x0a, 0x04, 0x4d, 0x61, 0x6c, 0x65, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x65, 0x6d,
	0x61, 0x6c, 0x65, 0x10, 0x01, 0x22, 0x16, 0x0a, 0x04, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x06, 0x0a,
	0x02, 0x43, 0x6e, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x45, 0x6e, 0x10, 0x01, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x97, 0x04, 0x0a, 0x22, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x37, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xe5, 0x02, 0x0a, 0x04,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a,
	0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x02, 0x52,
	0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x5f, 0x75, 0x72, 0x6c, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x22, 0x95, 0x04, 0x0a, 0x14, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3a, 0x0a,
	0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xff, 0x02, 0x0a, 0x04, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x69, 0x64, 0x12, 0x5b, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x36, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41,
	0x74, 0x12, 0x3e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x48, 0x00, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x54, 0x0a, 0x10, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0xa7, 0x02, 0x0a, 0x13, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x93, 0x01, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x29, 0x0a, 0x13, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x65, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x56, 0x0a, 0x14, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65,
	0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xc2,
	0x01, 0x0a, 0x17, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x22, 0x41, 0x0a, 0x19, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x2a, 0x0a, 0x16, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x22, 0x5c, 0x0a, 0x16, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0xaa, 0x04, 0x0a, 0x17, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x8e, 0x03, 0x0a,
	0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x42,
	0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x48, 0x00, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x3e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x48, 0x01, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88,
	0x01, 0x01, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x0f, 0x0a,
	0x0d, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d,
	0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x85, 0x01,
	0x0a, 0x16, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x12, 0x33, 0x0a, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x65,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x70, 0x22, 0xee, 0x04, 0x0a, 0x16, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x57,
	0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x3a, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62,
	0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0xd4, 0x03, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x12, 0x33, 0x0a, 0x06, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1b, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x06, 0x65,
	0x64, 0x69, 0x74, 0x6f, 0x72, 0x12, 0x4a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x32, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c,
	0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x42, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x3e, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x01, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x24, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x65,
	0x6e, 0x64, 0x69, 0x6e, 0x67, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x10, 0x01, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x91, 0x03, 0x0a, 0x12, 0x53, 0x69, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a,
	0x0a, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x71, 0x6c,
	0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x73, 0x71, 0x6c, 0x12, 0x3e, 0x0a, 0x05,
	0x72, 0x65, 0x64, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x64, 0x69, 0x73, 0x52, 0x05, 0x72, 0x65, 0x64, 0x69, 0x73, 0x12, 0x4d, 0x0a, 0x0a,
	0x6f, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x1a, 0x31, 0x0a, 0x05, 0x52,
	0x65, 0x64, 0x69, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x1a, 0x42,
	0x0a, 0x0a, 0x50, 0x6f, 0x73, 0x74, 0x67, 0x72, 0x65, 0x53, 0x71, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x1a, 0x26, 0x0a, 0x0a, 0x4f, 0x70, 0x65, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x22, 0xac, 0x01, 0x0a, 0x13, 0x53,
	0x69, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x6f, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x5e, 0x0a, 0x0f, 0x77, 0x65, 0x62, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74,
	0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x6f, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x2e, 0x57, 0x65, 0x62, 0x53, 0x69, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x48, 0x00,
	0x52, 0x0d, 0x77, 0x65, 0x62, 0x53, 0x69, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x88,
	0x01, 0x01, 0x1a, 0x21, 0x0a, 0x0d, 0x57, 0x65, 0x62, 0x53, 0x69, 0x74, 0x65, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x22, 0xca, 0x02, 0x0a, 0x11, 0x53, 0x69,
	0x74, 0x65, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x5c, 0x0a, 0x0f, 0x77, 0x65, 0x62, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x57, 0x65, 0x62, 0x53,
	0x69, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x77, 0x65, 0x62,
	0x53, 0x69, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x88, 0x01, 0x01, 0x12, 0x4f, 0x0a,
	0x0a, 0x72, 0x65, 0x5f, 0x63, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x52, 0x65, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x48, 0x01,
	0x52, 0x09, 0x72, 0x65, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x88, 0x01, 0x01, 0x1a, 0x23,
	0x0a, 0x0d, 0x57, 0x65, 0x62, 0x53, 0x69, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x1a, 0x3e, 0x0a, 0x09, 0x52, 0x65, 0x43, 0x61, 0x70, 0x74, 0x63, 0x68, 0x61,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x72, 0x65, 0x5f, 0x63,
	0x61, 0x70, 0x74, 0x63, 0x68, 0x61, 0x22, 0xc2, 0x01, 0x0a, 0x10, 0x53, 0x69, 0x74, 0x65, 0x42,
	0x61, 0x69, 0x64, 0x75, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x5b, 0x0a, 0x0f, 0x77,
	0x65, 0x62, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x42, 0x61, 0x69, 0x64, 0x75, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x57, 0x65, 0x62, 0x53, 0x69, 0x74, 0x65, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x77, 0x65, 0x62, 0x53, 0x69, 0x74, 0x65, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x88, 0x01, 0x01, 0x1a, 0x3d, 0x0a, 0x0d, 0x57, 0x65, 0x62, 0x53,
	0x69, 0x74, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x77, 0x65, 0x62, 0x5f,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x22, 0x2e, 0x0a, 0x18, 0x53,
	0x69, 0x74, 0x65, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x22, 0x8b, 0x01, 0x0a, 0x19,
	0x53, 0x69, 0x74, 0x65, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4c, 0x61, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x68, 0x65, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x75, 0x62, 0x68, 0x65, 0x61, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x22, 0xd3, 0x04, 0x0a, 0x12, 0x53, 0x69,
	0x74, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x68, 0x65, 0x61,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x68, 0x65, 0x61, 0x64,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x41, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x29, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x44, 0x0a, 0x06, 0x63, 0x6e, 0x5f, 0x69, 0x63, 0x70, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6e, 0x49, 0x63, 0x70, 0x48, 0x00, 0x52, 0x05, 0x63, 0x6e, 0x49,
	0x63, 0x70, 0x88, 0x01, 0x01, 0x12, 0x44, 0x0a, 0x06, 0x63, 0x6e, 0x5f, 0x67, 0x61, 0x62, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c,
	0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43, 0x6e, 0x47, 0x61, 0x62, 0x48,
	0x01, 0x52, 0x05, 0x63, 0x6e, 0x47, 0x61, 0x62, 0x88, 0x01, 0x01, 0x12, 0x12, 0x0a, 0x04, 0x6c,
	0x61, 0x6e, 0x67, 0x18, 0x61, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x18, 0x62, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x63, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x32, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0x2f, 0x0a, 0x05, 0x43,
	0x6e, 0x47, 0x61, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x1b, 0x0a, 0x05,
	0x43, 0x6e, 0x49, 0x63, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6e,
	0x5f, 0x69, 0x63, 0x70, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6e, 0x5f, 0x67, 0x61, 0x62, 0x22,
	0x95, 0x01, 0x0a, 0x0f, 0x53, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x62, 0x68, 0x65, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x68, 0x65, 0x61, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x70,
	0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f,
	0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x22, 0x2b, 0x0a, 0x13, 0x53, 0x69, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x2a, 0x34, 0x0a, 0x0b, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x45, 0x64, 0x69,
	0x74, 0x6f, 0x72, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x65, 0x78, 0x74, 0x61, 0x72, 0x65, 0x61, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x10, 0x02, 0x12,
	0x09, 0x0a, 0x05, 0x51, 0x75, 0x69, 0x6c, 0x6c, 0x10, 0x03, 0x32, 0xa1, 0x01, 0x0a, 0x03, 0x41,
	0x65, 0x73, 0x12, 0x4c, 0x0a, 0x07, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x1f, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x65, 0x73, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1e,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x65, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00,
	0x12, 0x4c, 0x0a, 0x07, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x12, 0x1e, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x65, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x1f, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x65, 0x73,
	0x50, 0x6c, 0x61, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x32, 0xa1,
	0x01, 0x0a, 0x03, 0x4a, 0x77, 0x74, 0x12, 0x49, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1e,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x4a, 0x77, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x4a, 0x77, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4f, 0x0a, 0x06, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x20, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x77, 0x74,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4a,
	0x77, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x32, 0x9a, 0x01, 0x0a, 0x04, 0x48, 0x4d, 0x61, 0x63, 0x12, 0x4b, 0x0a, 0x04, 0x53,
	0x69, 0x67, 0x6e, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x4d, 0x61, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x4d, 0x61, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x06, 0x56, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x12, 0x21, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x4d, 0x61, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32,
	0xbd, 0x05, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3b, 0x0a, 0x04, 0x4c, 0x6f, 0x63, 0x6b,
	0x12, 0x19, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x06, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x12,
	0x19, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x19, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x1b, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f,
	0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x07,
	0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x05, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x15, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x21, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x53,
	0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x28, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x04, 0x42, 0x79, 0x49, 0x64, 0x12, 0x19, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61,
	0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00,
	0x12, 0x4d, 0x0a, 0x05, 0x42, 0x79, 0x55, 0x69, 0x64, 0x12, 0x1a, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x69, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c,
	0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x32,
	0xc9, 0x09, 0x0a, 0x09, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x12, 0x58, 0x0a,
	0x06, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x12, 0x28, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62,
	0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67,
	0x6e, 0x49, 0x6e, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x06, 0x53, 0x69, 0x67, 0x6e, 0x55,
	0x70, 0x12, 0x28, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x42, 0x79, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4e, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x42, 0x79, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x22, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x4e, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x42, 0x79, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x22, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x4d, 0x0a, 0x0d, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x45, 0x6d, 0x61,
	0x69, 0x6c, 0x12, 0x22, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x4d, 0x0a, 0x0d, 0x55, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x22, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x4e, 0x0a, 0x0e, 0x46, 0x6f, 0x72, 0x67, 0x6f, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x22, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x53, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x12, 0x28, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x65, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12,
	0x19, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x19, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x72, 0x1a, 0x26, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a,
	0x04, 0x42, 0x79, 0x49, 0x64, 0x12, 0x19, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c,
	0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2b, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12,
	0x67, 0x0a, 0x0a, 0x42, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x61, 0x0a, 0x07, 0x42, 0x79, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x12, 0x27, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x32, 0xb0, 0x03, 0x0a, 0x10,
	0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x3e, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x3d, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x61, 0x6c,
	0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x4f, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x1a,
	0x2d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x57, 0x0a, 0x04, 0x42, 0x79, 0x49, 0x64, 0x12, 0x19, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4f, 0x61, 0x75, 0x74, 0x68,
	0x32, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x09, 0x42, 0x79, 0x53,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x30, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61,
	0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x4f, 0x61,
	0x75, 0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72, 0x42, 0x79, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x32, 0xa0,
	0x04, 0x0a, 0x10, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x06, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x4f, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x72, 0x1a, 0x2d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x04, 0x42, 0x79, 0x49, 0x64, 0x12, 0x19, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61,
	0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61,
	0x75, 0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x69, 0x0a, 0x09,
	0x42, 0x79, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x32, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x78, 0x0a, 0x11, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x49, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2d, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x4f, 0x70,
	0x65, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x4f, 0x61, 0x75, 0x74, 0x68, 0x32, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22,
	0x00, 0x32, 0xb9, 0x04, 0x0a, 0x15, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3e, 0x0a, 0x07, 0x44,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61,
	0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x06, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c,
	0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x05, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x32, 0x2e, 0x70, 0x61, 0x6c,
	0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x5c, 0x0a, 0x04, 0x42, 0x79, 0x49, 0x64, 0x12, 0x19, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x6e,
	0x0a, 0x09, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x26, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x42, 0x79, 0x55, 0x6e, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x7d,
	0x0a, 0x11, 0x42, 0x79, 0x41, 0x70, 0x70, 0x49, 0x64, 0x41, 0x6e, 0x64, 0x55, 0x6e, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x2d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x42, 0x79, 0x41, 0x70, 0x70,
	0x49, 0x64, 0x41, 0x6e, 0x64, 0x4f, 0x70, 0x65, 0x6e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x37, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x32, 0xde, 0x01,
	0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x07, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x05, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x15, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x24, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4b, 0x0a, 0x06, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61,
	0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xe9,
	0x01, 0x0a, 0x06, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x41, 0x0a, 0x03, 0x53, 0x65, 0x74,
	0x12, 0x20, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x05,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x15, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c,
	0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x23, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f,
	0x63, 0x61, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x06, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x23, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x65, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0xb2, 0x05, 0x0a, 0x0a, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x3e, 0x0a, 0x07, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x19, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x05, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x15, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x27, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x29, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x74, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x04, 0x42, 0x79, 0x49, 0x64, 0x12, 0x19, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x06, 0x42, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x19, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x05, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0a, 0x42, 0x79, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x27, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61,
	0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65,
	0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0d, 0x53, 0x65, 0x74,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x19, 0x2e, 0x70, 0x61, 0x6c,
	0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x32,
	0xa1, 0x02, 0x0a, 0x09, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x57, 0x6f, 0x72, 0x64, 0x12, 0x4a, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x26, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62,
	0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x57, 0x6f,
	0x72, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x05, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x12, 0x15, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x1a, 0x26, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65,
	0x57, 0x6f, 0x72, 0x64, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x19,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x07, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x12, 0x19,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x32, 0xaa, 0x09, 0x0a, 0x04, 0x53, 0x69, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x06, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x22, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61,
	0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x0d,
	0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x12, 0x28, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x69, 0x74, 0x65, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62,
	0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x47, 0x65, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x42, 0x79, 0x4c, 0x61, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1f, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0b, 0x53, 0x65,
	0x74, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x23, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x41,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x29, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c,
	0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x4c, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0f, 0x53, 0x65,
	0x74, 0x42, 0x61, 0x69, 0x64, 0x75, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x69, 0x74, 0x65, 0x42, 0x61, 0x69, 0x64, 0x75, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0f, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x69, 0x64, 0x75, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x42, 0x61, 0x69, 0x64, 0x75, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x61, 0x69, 0x64, 0x75, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x4f, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x00, 0x12, 0x4f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x21, 0x2e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x69, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x00, 0x12, 0x47, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x53, 0x0a, 0x12, 0x53,
	0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x6f, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x23, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x6f, 0x77, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x12, 0x53, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x6f, 0x77, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x23,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x69, 0x74, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4e, 0x6f, 0x77, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x4e, 0x6f, 0x77, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x42, 0x66, 0x0a, 0x2c, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x73,
	0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x78, 0x69, 0x76, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31,
	0x50, 0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73,
	0x61, 0x74, 0x75, 0x72, 0x6e, 0x2d, 0x78, 0x69, 0x76, 0x2f, 0x70, 0x61, 0x6c, 0x6d, 0x2f, 0x61,
	0x74, 0x72, 0x6f, 0x70, 0x61, 0x2f, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x32, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_balsam_proto_rawDescOnce sync.Once
	file_balsam_proto_rawDescData = file_balsam_proto_rawDesc
)

func file_balsam_proto_rawDescGZIP() []byte {
	file_balsam_proto_rawDescOnce.Do(func() {
		file_balsam_proto_rawDescData = protoimpl.X.CompressGZIP(file_balsam_proto_rawDescData)
	})
	return file_balsam_proto_rawDescData
}

var file_balsam_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_balsam_proto_msgTypes = make([]protoimpl.MessageInfo, 77)
var file_balsam_proto_goTypes = []any{
	(MediaEditor)(0),                                // 0: palm.balsam.v1.MediaEditor
	(UserLogsResponse_Item_Level)(0),                // 1: palm.balsam.v1.UserLogsResponse.Item.Level
	(UserSignInResponse_Detail_ProviderType)(0),     // 2: palm.balsam.v1.UserSignInResponse.Detail.ProviderType
	(WechatOauth2UserIndexResponse_Item_Sex)(0),     // 3: palm.balsam.v1.WechatOauth2UserIndexResponse.Item.Sex
	(WechatOauth2UserIndexResponse_Item_Lang)(0),    // 4: palm.balsam.v1.WechatOauth2UserIndexResponse.Item.Lang
	(LeaveWordIndexResponse_Item_Status)(0),         // 5: palm.balsam.v1.LeaveWordIndexResponse.Item.Status
	(*IdRequest)(nil),                               // 6: palm.balsam.v1.IdRequest
	(*ResourceRequest)(nil),                         // 7: palm.balsam.v1.ResourceRequest
	(*UidRequest)(nil),                              // 8: palm.balsam.v1.UidRequest
	(*Pager)(nil),                                   // 9: palm.balsam.v1.Pager
	(*Pagination)(nil),                              // 10: palm.balsam.v1.Pagination
	(*AesPlainMessage)(nil),                         // 11: palm.balsam.v1.AesPlainMessage
	(*AesCodeMessage)(nil),                          // 12: palm.balsam.v1.AesCodeMessage
	(*JwtSignRequest)(nil),                          // 13: palm.balsam.v1.JwtSignRequest
	(*JwtSignResponse)(nil),                         // 14: palm.balsam.v1.JwtSignResponse
	(*JwtVerifyRequest)(nil),                        // 15: palm.balsam.v1.JwtVerifyRequest
	(*JwtVerifyResponse)(nil),                       // 16: palm.balsam.v1.JwtVerifyResponse
	(*HMacSignRequest)(nil),                         // 17: palm.balsam.v1.HMacSignRequest
	(*HMacSignResponse)(nil),                        // 18: palm.balsam.v1.HMacSignResponse
	(*HMacVerifyRequest)(nil),                       // 19: palm.balsam.v1.HMacVerifyRequest
	(*UserUpdateProfileRequest)(nil),                // 20: palm.balsam.v1.UserUpdateProfileRequest
	(*UserIndexResponse)(nil),                       // 21: palm.balsam.v1.UserIndexResponse
	(*LogsRequest)(nil),                             // 22: palm.balsam.v1.LogsRequest
	(*UserLogsResponse)(nil),                        // 23: palm.balsam.v1.UserLogsResponse
	(*EmailUserByEmailRequest)(nil),                 // 24: palm.balsam.v1.EmailUserByEmailRequest
	(*EmailUserByNicknameRequest)(nil),              // 25: palm.balsam.v1.EmailUserByNicknameRequest
	(*EmailUserIndexResponse)(nil),                  // 26: palm.balsam.v1.EmailUserIndexResponse
	(*UserResetPasswordRequest)(nil),                // 27: palm.balsam.v1.UserResetPasswordRequest
	(*UserByEmailRequest)(nil),                      // 28: palm.balsam.v1.UserByEmailRequest
	(*UserByTokenRequest)(nil),                      // 29: palm.balsam.v1.UserByTokenRequest
	(*UserSignInByEmailRequest)(nil),                // 30: palm.balsam.v1.UserSignInByEmailRequest
	(*UserSignUpByEmailRequest)(nil),                // 31: palm.balsam.v1.UserSignUpByEmailRequest
	(*UserSignInResponse)(nil),                      // 32: palm.balsam.v1.UserSignInResponse
	(*GoogleOauth2UserBySubjectRequest)(nil),        // 33: palm.balsam.v1.GoogleOauth2UserBySubjectRequest
	(*GoogleOauth2UserIndexResponse)(nil),           // 34: palm.balsam.v1.GoogleOauth2UserIndexResponse
	(*WechatByUnionIdRequest)(nil),                  // 35: palm.balsam.v1.WechatByUnionIdRequest
	(*WechatByAppIdAndOpenIdRequest)(nil),           // 36: palm.balsam.v1.WechatByAppIdAndOpenIdRequest
	(*WechatOauth2UserIndexResponse)(nil),           // 37: palm.balsam.v1.WechatOauth2UserIndexResponse
	(*WechatMiniProgramUserIndexResponse)(nil),      // 38: palm.balsam.v1.WechatMiniProgramUserIndexResponse
	(*SessionIndexResponse)(nil),                    // 39: palm.balsam.v1.SessionIndexResponse
	(*LocaleSetRequest)(nil),                        // 40: palm.balsam.v1.LocaleSetRequest
	(*LocaleIndexResponse)(nil),                     // 41: palm.balsam.v1.LocaleIndexResponse
	(*LocaleByLangRequest)(nil),                     // 42: palm.balsam.v1.LocaleByLangRequest
	(*LocaleByLangResponse)(nil),                    // 43: palm.balsam.v1.LocaleByLangResponse
	(*AttachmentCreateRequest)(nil),                 // 44: palm.balsam.v1.AttachmentCreateRequest
	(*AttachmentSetTitleRequest)(nil),               // 45: palm.balsam.v1.AttachmentSetTitleRequest
	(*AttachmentShowResponse)(nil),                  // 46: palm.balsam.v1.AttachmentShowResponse
	(*AttachmentListResponse)(nil),                  // 47: palm.balsam.v1.AttachmentListResponse
	(*AttachmentIndexResponse)(nil),                 // 48: palm.balsam.v1.AttachmentIndexResponse
	(*LeaveWordCreateRequest)(nil),                  // 49: palm.balsam.v1.LeaveWordCreateRequest
	(*LeaveWordIndexResponse)(nil),                  // 50: palm.balsam.v1.LeaveWordIndexResponse
	(*SiteStatusResponse)(nil),                      // 51: palm.balsam.v1.SiteStatusResponse
	(*SiteIndexNowAccount)(nil),                     // 52: palm.balsam.v1.SiteIndexNowAccount
	(*SiteGoogleAccount)(nil),                       // 53: palm.balsam.v1.SiteGoogleAccount
	(*SiteBaiduAccount)(nil),                        // 54: palm.balsam.v1.SiteBaiduAccount
	(*SiteGetInfoByLangRequest)(nil),                // 55: palm.balsam.v1.SiteGetInfoByLangRequest
	(*SiteGetInfoByLangResponse)(nil),               // 56: palm.balsam.v1.SiteGetInfoByLangResponse
	(*SiteLayoutResponse)(nil),                      // 57: palm.balsam.v1.SiteLayoutResponse
	(*SiteInfoRequest)(nil),                         // 58: palm.balsam.v1.SiteInfoRequest
	(*SiteKeywordsRequest)(nil),                     // 59: palm.balsam.v1.SiteKeywordsRequest
	(*UserIndexResponse_Item)(nil),                  // 60: palm.balsam.v1.UserIndexResponse.Item
	(*UserLogsResponse_Item)(nil),                   // 61: palm.balsam.v1.UserLogsResponse.Item
	(*EmailUserIndexResponse_Item)(nil),             // 62: palm.balsam.v1.EmailUserIndexResponse.Item
	(*UserSignInResponse_Detail)(nil),               // 63: palm.balsam.v1.UserSignInResponse.Detail
	(*UserSignInResponse_Permission)(nil),           // 64: palm.balsam.v1.UserSignInResponse.Permission
	(*UserSignInResponse_Menu)(nil),                 // 65: palm.balsam.v1.UserSignInResponse.Menu
	(*GoogleOauth2UserIndexResponse_Item)(nil),      // 66: palm.balsam.v1.GoogleOauth2UserIndexResponse.Item
	(*WechatOauth2UserIndexResponse_Item)(nil),      // 67: palm.balsam.v1.WechatOauth2UserIndexResponse.Item
	(*WechatMiniProgramUserIndexResponse_Item)(nil), // 68: palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item
	(*SessionIndexResponse_Item)(nil),               // 69: palm.balsam.v1.SessionIndexResponse.Item
	(*LocaleIndexResponse_Item)(nil),                // 70: palm.balsam.v1.LocaleIndexResponse.Item
	(*AttachmentIndexResponse_Item)(nil),            // 71: palm.balsam.v1.AttachmentIndexResponse.Item
	(*LeaveWordIndexResponse_Item)(nil),             // 72: palm.balsam.v1.LeaveWordIndexResponse.Item
	(*SiteStatusResponse_Redis)(nil),                // 73: palm.balsam.v1.SiteStatusResponse.Redis
	(*SiteStatusResponse_PostgreSql)(nil),           // 74: palm.balsam.v1.SiteStatusResponse.PostgreSql
	(*SiteStatusResponse_OpenSearch)(nil),           // 75: palm.balsam.v1.SiteStatusResponse.OpenSearch
	(*SiteIndexNowAccount_WebSiteVerify)(nil),       // 76: palm.balsam.v1.SiteIndexNowAccount.WebSiteVerify
	(*SiteGoogleAccount_WebSiteVerify)(nil),         // 77: palm.balsam.v1.SiteGoogleAccount.WebSiteVerify
	(*SiteGoogleAccount_ReCaptcha)(nil),             // 78: palm.balsam.v1.SiteGoogleAccount.ReCaptcha
	(*SiteBaiduAccount_WebSiteVerify)(nil),          // 79: palm.balsam.v1.SiteBaiduAccount.WebSiteVerify
	(*SiteLayoutResponse_Author)(nil),               // 80: palm.balsam.v1.SiteLayoutResponse.Author
	(*SiteLayoutResponse_CnGab)(nil),                // 81: palm.balsam.v1.SiteLayoutResponse.CnGab
	(*SiteLayoutResponse_CnIcp)(nil),                // 82: palm.balsam.v1.SiteLayoutResponse.CnIcp
	(*timestamppb.Timestamp)(nil),                   // 83: google.protobuf.Timestamp
	(*durationpb.Duration)(nil),                     // 84: google.protobuf.Duration
	(*emptypb.Empty)(nil),                           // 85: google.protobuf.Empty
}
var file_balsam_proto_depIdxs = []int32{
	83,  // 0: palm.balsam.v1.JwtSignRequest.not_before:type_name -> google.protobuf.Timestamp
	83,  // 1: palm.balsam.v1.JwtSignRequest.expires_at:type_name -> google.protobuf.Timestamp
	60,  // 2: palm.balsam.v1.UserIndexResponse.items:type_name -> palm.balsam.v1.UserIndexResponse.Item
	10,  // 3: palm.balsam.v1.UserIndexResponse.pagination:type_name -> palm.balsam.v1.Pagination
	61,  // 4: palm.balsam.v1.UserLogsResponse.items:type_name -> palm.balsam.v1.UserLogsResponse.Item
	10,  // 5: palm.balsam.v1.UserLogsResponse.pagination:type_name -> palm.balsam.v1.Pagination
	62,  // 6: palm.balsam.v1.EmailUserIndexResponse.items:type_name -> palm.balsam.v1.EmailUserIndexResponse.Item
	10,  // 7: palm.balsam.v1.EmailUserIndexResponse.pagination:type_name -> palm.balsam.v1.Pagination
	84,  // 8: palm.balsam.v1.UserSignInByEmailRequest.ttl:type_name -> google.protobuf.Duration
	84,  // 9: palm.balsam.v1.UserSignUpByEmailRequest.ttl:type_name -> google.protobuf.Duration
	63,  // 10: palm.balsam.v1.UserSignInResponse.detail:type_name -> palm.balsam.v1.UserSignInResponse.Detail
	64,  // 11: palm.balsam.v1.UserSignInResponse.permissions:type_name -> palm.balsam.v1.UserSignInResponse.Permission
	65,  // 12: palm.balsam.v1.UserSignInResponse.menus:type_name -> palm.balsam.v1.UserSignInResponse.Menu
	66,  // 13: palm.balsam.v1.GoogleOauth2UserIndexResponse.items:type_name -> palm.balsam.v1.GoogleOauth2UserIndexResponse.Item
	10,  // 14: palm.balsam.v1.GoogleOauth2UserIndexResponse.pagination:type_name -> palm.balsam.v1.Pagination
	67,  // 15: palm.balsam.v1.WechatOauth2UserIndexResponse.items:type_name -> palm.balsam.v1.WechatOauth2UserIndexResponse.Item
	10,  // 16: palm.balsam.v1.WechatOauth2UserIndexResponse.pagination:type_name -> palm.balsam.v1.Pagination
	68,  // 17: palm.balsam.v1.WechatMiniProgramUserIndexResponse.items:type_name -> palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item
	10,  // 18: palm.balsam.v1.WechatMiniProgramUserIndexResponse.pagination:type_name -> palm.balsam.v1.Pagination
	69,  // 19: palm.balsam.v1.SessionIndexResponse.items:type_name -> palm.balsam.v1.SessionIndexResponse.Item
	10,  // 20: palm.balsam.v1.SessionIndexResponse.pagination:type_name -> palm.balsam.v1.Pagination
	70,  // 21: palm.balsam.v1.LocaleIndexResponse.items:type_name -> palm.balsam.v1.LocaleIndexResponse.Item
	10,  // 22: palm.balsam.v1.LocaleIndexResponse.pagination:type_name -> palm.balsam.v1.Pagination
	70,  // 23: palm.balsam.v1.LocaleByLangResponse.items:type_name -> palm.balsam.v1.LocaleIndexResponse.Item
	71,  // 24: palm.balsam.v1.AttachmentListResponse.items:type_name -> palm.balsam.v1.AttachmentIndexResponse.Item
	71,  // 25: palm.balsam.v1.AttachmentIndexResponse.items:type_name -> palm.balsam.v1.AttachmentIndexResponse.Item
	10,  // 26: palm.balsam.v1.AttachmentIndexResponse.pagination:type_name -> palm.balsam.v1.Pagination
	0,   // 27: palm.balsam.v1.LeaveWordCreateRequest.editor:type_name -> palm.balsam.v1.MediaEditor
	72,  // 28: palm.balsam.v1.LeaveWordIndexResponse.items:type_name -> palm.balsam.v1.LeaveWordIndexResponse.Item
	10,  // 29: palm.balsam.v1.LeaveWordIndexResponse.pagination:type_name -> palm.balsam.v1.Pagination
	74,  // 30: palm.balsam.v1.SiteStatusResponse.postgresql:type_name -> palm.balsam.v1.SiteStatusResponse.PostgreSql
	73,  // 31: palm.balsam.v1.SiteStatusResponse.redis:type_name -> palm.balsam.v1.SiteStatusResponse.Redis
	75,  // 32: palm.balsam.v1.SiteStatusResponse.opensearch:type_name -> palm.balsam.v1.SiteStatusResponse.OpenSearch
	76,  // 33: palm.balsam.v1.SiteIndexNowAccount.web_site_verify:type_name -> palm.balsam.v1.SiteIndexNowAccount.WebSiteVerify
	77,  // 34: palm.balsam.v1.SiteGoogleAccount.web_site_verify:type_name -> palm.balsam.v1.SiteGoogleAccount.WebSiteVerify
	78,  // 35: palm.balsam.v1.SiteGoogleAccount.re_captcha:type_name -> palm.balsam.v1.SiteGoogleAccount.ReCaptcha
	79,  // 36: palm.balsam.v1.SiteBaiduAccount.web_site_verify:type_name -> palm.balsam.v1.SiteBaiduAccount.WebSiteVerify
	80,  // 37: palm.balsam.v1.SiteLayoutResponse.author:type_name -> palm.balsam.v1.SiteLayoutResponse.Author
	82,  // 38: palm.balsam.v1.SiteLayoutResponse.cn_icp:type_name -> palm.balsam.v1.SiteLayoutResponse.CnIcp
	81,  // 39: palm.balsam.v1.SiteLayoutResponse.cn_gab:type_name -> palm.balsam.v1.SiteLayoutResponse.CnGab
	83,  // 40: palm.balsam.v1.UserIndexResponse.Item.current_sign_in_at:type_name -> google.protobuf.Timestamp
	83,  // 41: palm.balsam.v1.UserIndexResponse.Item.last_sign_in_at:type_name -> google.protobuf.Timestamp
	83,  // 42: palm.balsam.v1.UserIndexResponse.Item.lockeda_at:type_name -> google.protobuf.Timestamp
	83,  // 43: palm.balsam.v1.UserIndexResponse.Item.deleted_at:type_name -> google.protobuf.Timestamp
	83,  // 44: palm.balsam.v1.UserIndexResponse.Item.updated_at:type_name -> google.protobuf.Timestamp
	1,   // 45: palm.balsam.v1.UserLogsResponse.Item.level:type_name -> palm.balsam.v1.UserLogsResponse.Item.Level
	83,  // 46: palm.balsam.v1.UserLogsResponse.Item.created_at:type_name -> google.protobuf.Timestamp
	83,  // 47: palm.balsam.v1.EmailUserIndexResponse.Item.confirmed_at:type_name -> google.protobuf.Timestamp
	83,  // 48: palm.balsam.v1.EmailUserIndexResponse.Item.deleted_at:type_name -> google.protobuf.Timestamp
	83,  // 49: palm.balsam.v1.EmailUserIndexResponse.Item.updated_at:type_name -> google.protobuf.Timestamp
	2,   // 50: palm.balsam.v1.UserSignInResponse.Detail.provider_type:type_name -> palm.balsam.v1.UserSignInResponse.Detail.ProviderType
	65,  // 51: palm.balsam.v1.UserSignInResponse.Menu.menus:type_name -> palm.balsam.v1.UserSignInResponse.Menu
	83,  // 52: palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.deleted_at:type_name -> google.protobuf.Timestamp
	83,  // 53: palm.balsam.v1.GoogleOauth2UserIndexResponse.Item.updated_at:type_name -> google.protobuf.Timestamp
	3,   // 54: palm.balsam.v1.WechatOauth2UserIndexResponse.Item.sex:type_name -> palm.balsam.v1.WechatOauth2UserIndexResponse.Item.Sex
	4,   // 55: palm.balsam.v1.WechatOauth2UserIndexResponse.Item.lang:type_name -> palm.balsam.v1.WechatOauth2UserIndexResponse.Item.Lang
	83,  // 56: palm.balsam.v1.WechatOauth2UserIndexResponse.Item.deleted_at:type_name -> google.protobuf.Timestamp
	83,  // 57: palm.balsam.v1.WechatOauth2UserIndexResponse.Item.updated_at:type_name -> google.protobuf.Timestamp
	83,  // 58: palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.deleted_at:type_name -> google.protobuf.Timestamp
	83,  // 59: palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item.updated_at:type_name -> google.protobuf.Timestamp
	2,   // 60: palm.balsam.v1.SessionIndexResponse.Item.provider_type:type_name -> palm.balsam.v1.UserSignInResponse.Detail.ProviderType
	83,  // 61: palm.balsam.v1.SessionIndexResponse.Item.expires_at:type_name -> google.protobuf.Timestamp
	83,  // 62: palm.balsam.v1.SessionIndexResponse.Item.deleted_at:type_name -> google.protobuf.Timestamp
	83,  // 63: palm.balsam.v1.SessionIndexResponse.Item.created_at:type_name -> google.protobuf.Timestamp
	83,  // 64: palm.balsam.v1.LocaleIndexResponse.Item.updated_at:type_name -> google.protobuf.Timestamp
	83,  // 65: palm.balsam.v1.AttachmentIndexResponse.Item.published_at:type_name -> google.protobuf.Timestamp
	83,  // 66: palm.balsam.v1.AttachmentIndexResponse.Item.deleted_at:type_name -> google.protobuf.Timestamp
	83,  // 67: palm.balsam.v1.AttachmentIndexResponse.Item.updated_at:type_name -> google.protobuf.Timestamp
	0,   // 68: palm.balsam.v1.LeaveWordIndexResponse.Item.editor:type_name -> palm.balsam.v1.MediaEditor
	5,   // 69: palm.balsam.v1.LeaveWordIndexResponse.Item.status:type_name -> palm.balsam.v1.LeaveWordIndexResponse.Item.Status
	83,  // 70: palm.balsam.v1.LeaveWordIndexResponse.Item.published_at:type_name -> google.protobuf.Timestamp
	83,  // 71: palm.balsam.v1.LeaveWordIndexResponse.Item.deleted_at:type_name -> google.protobuf.Timestamp
	83,  // 72: palm.balsam.v1.LeaveWordIndexResponse.Item.updated_at:type_name -> google.protobuf.Timestamp
	11,  // 73: palm.balsam.v1.Aes.Encrypt:input_type -> palm.balsam.v1.AesPlainMessage
	12,  // 74: palm.balsam.v1.Aes.Decrypt:input_type -> palm.balsam.v1.AesCodeMessage
	13,  // 75: palm.balsam.v1.Jwt.Sign:input_type -> palm.balsam.v1.JwtSignRequest
	15,  // 76: palm.balsam.v1.Jwt.Verify:input_type -> palm.balsam.v1.JwtVerifyRequest
	17,  // 77: palm.balsam.v1.HMac.Sign:input_type -> palm.balsam.v1.HMacSignRequest
	19,  // 78: palm.balsam.v1.HMac.Verify:input_type -> palm.balsam.v1.HMacVerifyRequest
	6,   // 79: palm.balsam.v1.User.Lock:input_type -> palm.balsam.v1.IdRequest
	6,   // 80: palm.balsam.v1.User.Unlock:input_type -> palm.balsam.v1.IdRequest
	6,   // 81: palm.balsam.v1.User.Disable:input_type -> palm.balsam.v1.IdRequest
	6,   // 82: palm.balsam.v1.User.Enable:input_type -> palm.balsam.v1.IdRequest
	22,  // 83: palm.balsam.v1.User.Logs:input_type -> palm.balsam.v1.LogsRequest
	85,  // 84: palm.balsam.v1.User.SignOut:input_type -> google.protobuf.Empty
	9,   // 85: palm.balsam.v1.User.Index:input_type -> palm.balsam.v1.Pager
	20,  // 86: palm.balsam.v1.User.UpdateProfile:input_type -> palm.balsam.v1.UserUpdateProfileRequest
	6,   // 87: palm.balsam.v1.User.ById:input_type -> palm.balsam.v1.IdRequest
	8,   // 88: palm.balsam.v1.User.ByUid:input_type -> palm.balsam.v1.UidRequest
	30,  // 89: palm.balsam.v1.EmailUser.SignIn:input_type -> palm.balsam.v1.UserSignInByEmailRequest
	31,  // 90: palm.balsam.v1.EmailUser.SignUp:input_type -> palm.balsam.v1.UserSignUpByEmailRequest
	28,  // 91: palm.balsam.v1.EmailUser.ConfirmByEmail:input_type -> palm.balsam.v1.UserByEmailRequest
	29,  // 92: palm.balsam.v1.EmailUser.ConfirmByToken:input_type -> palm.balsam.v1.UserByTokenRequest
	28,  // 93: palm.balsam.v1.EmailUser.UnlockByEmail:input_type -> palm.balsam.v1.UserByEmailRequest
	29,  // 94: palm.balsam.v1.EmailUser.UnlockByToken:input_type -> palm.balsam.v1.UserByTokenRequest
	28,  // 95: palm.balsam.v1.EmailUser.ForgotPassword:input_type -> palm.balsam.v1.UserByEmailRequest
	27,  // 96: palm.balsam.v1.EmailUser.ResetPassword:input_type -> palm.balsam.v1.UserResetPasswordRequest
	6,   // 97: palm.balsam.v1.EmailUser.Confirm:input_type -> palm.balsam.v1.IdRequest
	6,   // 98: palm.balsam.v1.EmailUser.Disable:input_type -> palm.balsam.v1.IdRequest
	6,   // 99: palm.balsam.v1.EmailUser.Enable:input_type -> palm.balsam.v1.IdRequest
	9,   // 100: palm.balsam.v1.EmailUser.Index:input_type -> palm.balsam.v1.Pager
	6,   // 101: palm.balsam.v1.EmailUser.ById:input_type -> palm.balsam.v1.IdRequest
	25,  // 102: palm.balsam.v1.EmailUser.ByNickname:input_type -> palm.balsam.v1.EmailUserByNicknameRequest
	24,  // 103: palm.balsam.v1.EmailUser.ByEmail:input_type -> palm.balsam.v1.EmailUserByEmailRequest
	6,   // 104: palm.balsam.v1.GoogleOauth2User.Disable:input_type -> palm.balsam.v1.IdRequest
	6,   // 105: palm.balsam.v1.GoogleOauth2User.Enable:input_type -> palm.balsam.v1.IdRequest
	9,   // 106: palm.balsam.v1.GoogleOauth2User.Index:input_type -> palm.balsam.v1.Pager
	6,   // 107: palm.balsam.v1.GoogleOauth2User.ById:input_type -> palm.balsam.v1.IdRequest
	33,  // 108: palm.balsam.v1.GoogleOauth2User.BySubject:input_type -> palm.balsam.v1.GoogleOauth2UserBySubjectRequest
	6,   // 109: palm.balsam.v1.WechatOauth2User.Disable:input_type -> palm.balsam.v1.IdRequest
	6,   // 110: palm.balsam.v1.WechatOauth2User.Enable:input_type -> palm.balsam.v1.IdRequest
	9,   // 111: palm.balsam.v1.WechatOauth2User.Index:input_type -> palm.balsam.v1.Pager
	6,   // 112: palm.balsam.v1.WechatOauth2User.ById:input_type -> palm.balsam.v1.IdRequest
	35,  // 113: palm.balsam.v1.WechatOauth2User.ByUnionId:input_type -> palm.balsam.v1.WechatByUnionIdRequest
	36,  // 114: palm.balsam.v1.WechatOauth2User.ByAppIdAndUnionId:input_type -> palm.balsam.v1.WechatByAppIdAndOpenIdRequest
	6,   // 115: palm.balsam.v1.WechatMiniProgramUser.Disable:input_type -> palm.balsam.v1.IdRequest
	6,   // 116: palm.balsam.v1.WechatMiniProgramUser.Enable:input_type -> palm.balsam.v1.IdRequest
	9,   // 117: palm.balsam.v1.WechatMiniProgramUser.Index:input_type -> palm.balsam.v1.Pager
	6,   // 118: palm.balsam.v1.WechatMiniProgramUser.ById:input_type -> palm.balsam.v1.IdRequest
	35,  // 119: palm.balsam.v1.WechatMiniProgramUser.ByUnionId:input_type -> palm.balsam.v1.WechatByUnionIdRequest
	36,  // 120: palm.balsam.v1.WechatMiniProgramUser.ByAppIdAndUnionId:input_type -> palm.balsam.v1.WechatByAppIdAndOpenIdRequest
	6,   // 121: palm.balsam.v1.Session.Disable:input_type -> palm.balsam.v1.IdRequest
	9,   // 122: palm.balsam.v1.Session.Index:input_type -> palm.balsam.v1.Pager
	6,   // 123: palm.balsam.v1.Session.ByUser:input_type -> palm.balsam.v1.IdRequest
	40,  // 124: palm.balsam.v1.Locale.Set:input_type -> palm.balsam.v1.LocaleSetRequest
	9,   // 125: palm.balsam.v1.Locale.Index:input_type -> palm.balsam.v1.Pager
	42,  // 126: palm.balsam.v1.Locale.ByLang:input_type -> palm.balsam.v1.LocaleByLangRequest
	6,   // 127: palm.balsam.v1.Attachment.Disable:input_type -> palm.balsam.v1.IdRequest
	9,   // 128: palm.balsam.v1.Attachment.Index:input_type -> palm.balsam.v1.Pager
	45,  // 129: palm.balsam.v1.Attachment.SetTitle:input_type -> palm.balsam.v1.AttachmentSetTitleRequest
	6,   // 130: palm.balsam.v1.Attachment.ById:input_type -> palm.balsam.v1.IdRequest
	6,   // 131: palm.balsam.v1.Attachment.ByUser:input_type -> palm.balsam.v1.IdRequest
	85,  // 132: palm.balsam.v1.Attachment.Clear:input_type -> google.protobuf.Empty
	7,   // 133: palm.balsam.v1.Attachment.ByResource:input_type -> palm.balsam.v1.ResourceRequest
	44,  // 134: palm.balsam.v1.Attachment.Create:input_type -> palm.balsam.v1.AttachmentCreateRequest
	6,   // 135: palm.balsam.v1.Attachment.SetUploadedAt:input_type -> palm.balsam.v1.IdRequest
	49,  // 136: palm.balsam.v1.LeaveWord.Create:input_type -> palm.balsam.v1.LeaveWordCreateRequest
	9,   // 137: palm.balsam.v1.LeaveWord.Index:input_type -> palm.balsam.v1.Pager
	6,   // 138: palm.balsam.v1.LeaveWord.Publish:input_type -> palm.balsam.v1.IdRequest
	6,   // 139: palm.balsam.v1.LeaveWord.Destroy:input_type -> palm.balsam.v1.IdRequest
	85,  // 140: palm.balsam.v1.Site.Status:input_type -> google.protobuf.Empty
	85,  // 141: palm.balsam.v1.Site.Layout:input_type -> google.protobuf.Empty
	55,  // 142: palm.balsam.v1.Site.GetInfoByLang:input_type -> palm.balsam.v1.SiteGetInfoByLangRequest
	58,  // 143: palm.balsam.v1.Site.SetInfo:input_type -> palm.balsam.v1.SiteInfoRequest
	59,  // 144: palm.balsam.v1.Site.SetKeywords:input_type -> palm.balsam.v1.SiteKeywordsRequest
	80,  // 145: palm.balsam.v1.Site.SetAuthor:input_type -> palm.balsam.v1.SiteLayoutResponse.Author
	54,  // 146: palm.balsam.v1.Site.SetBaiduAccount:input_type -> palm.balsam.v1.SiteBaiduAccount
	85,  // 147: palm.balsam.v1.Site.GetBaiduAccount:input_type -> google.protobuf.Empty
	85,  // 148: palm.balsam.v1.Site.DeleteBaiduAccount:input_type -> google.protobuf.Empty
	53,  // 149: palm.balsam.v1.Site.SetGoogleAccount:input_type -> palm.balsam.v1.SiteGoogleAccount
	85,  // 150: palm.balsam.v1.Site.GetGoogleAccount:input_type -> google.protobuf.Empty
	85,  // 151: palm.balsam.v1.Site.DeleteGoogleAccount:input_type -> google.protobuf.Empty
	52,  // 152: palm.balsam.v1.Site.SetIndexNowAccount:input_type -> palm.balsam.v1.SiteIndexNowAccount
	85,  // 153: palm.balsam.v1.Site.GetIndexNowAccount:input_type -> google.protobuf.Empty
	85,  // 154: palm.balsam.v1.Site.DeleteIndexNowAccount:input_type -> google.protobuf.Empty
	12,  // 155: palm.balsam.v1.Aes.Encrypt:output_type -> palm.balsam.v1.AesCodeMessage
	11,  // 156: palm.balsam.v1.Aes.Decrypt:output_type -> palm.balsam.v1.AesPlainMessage
	14,  // 157: palm.balsam.v1.Jwt.Sign:output_type -> palm.balsam.v1.JwtSignResponse
	16,  // 158: palm.balsam.v1.Jwt.Verify:output_type -> palm.balsam.v1.JwtVerifyResponse
	18,  // 159: palm.balsam.v1.HMac.Sign:output_type -> palm.balsam.v1.HMacSignResponse
	85,  // 160: palm.balsam.v1.HMac.Verify:output_type -> google.protobuf.Empty
	85,  // 161: palm.balsam.v1.User.Lock:output_type -> google.protobuf.Empty
	85,  // 162: palm.balsam.v1.User.Unlock:output_type -> google.protobuf.Empty
	85,  // 163: palm.balsam.v1.User.Disable:output_type -> google.protobuf.Empty
	85,  // 164: palm.balsam.v1.User.Enable:output_type -> google.protobuf.Empty
	23,  // 165: palm.balsam.v1.User.Logs:output_type -> palm.balsam.v1.UserLogsResponse
	85,  // 166: palm.balsam.v1.User.SignOut:output_type -> google.protobuf.Empty
	21,  // 167: palm.balsam.v1.User.Index:output_type -> palm.balsam.v1.UserIndexResponse
	85,  // 168: palm.balsam.v1.User.UpdateProfile:output_type -> google.protobuf.Empty
	60,  // 169: palm.balsam.v1.User.ById:output_type -> palm.balsam.v1.UserIndexResponse.Item
	60,  // 170: palm.balsam.v1.User.ByUid:output_type -> palm.balsam.v1.UserIndexResponse.Item
	32,  // 171: palm.balsam.v1.EmailUser.SignIn:output_type -> palm.balsam.v1.UserSignInResponse
	32,  // 172: palm.balsam.v1.EmailUser.SignUp:output_type -> palm.balsam.v1.UserSignInResponse
	85,  // 173: palm.balsam.v1.EmailUser.ConfirmByEmail:output_type -> google.protobuf.Empty
	85,  // 174: palm.balsam.v1.EmailUser.ConfirmByToken:output_type -> google.protobuf.Empty
	85,  // 175: palm.balsam.v1.EmailUser.UnlockByEmail:output_type -> google.protobuf.Empty
	85,  // 176: palm.balsam.v1.EmailUser.UnlockByToken:output_type -> google.protobuf.Empty
	85,  // 177: palm.balsam.v1.EmailUser.ForgotPassword:output_type -> google.protobuf.Empty
	85,  // 178: palm.balsam.v1.EmailUser.ResetPassword:output_type -> google.protobuf.Empty
	85,  // 179: palm.balsam.v1.EmailUser.Confirm:output_type -> google.protobuf.Empty
	85,  // 180: palm.balsam.v1.EmailUser.Disable:output_type -> google.protobuf.Empty
	85,  // 181: palm.balsam.v1.EmailUser.Enable:output_type -> google.protobuf.Empty
	26,  // 182: palm.balsam.v1.EmailUser.Index:output_type -> palm.balsam.v1.EmailUserIndexResponse
	62,  // 183: palm.balsam.v1.EmailUser.ById:output_type -> palm.balsam.v1.EmailUserIndexResponse.Item
	62,  // 184: palm.balsam.v1.EmailUser.ByNickname:output_type -> palm.balsam.v1.EmailUserIndexResponse.Item
	62,  // 185: palm.balsam.v1.EmailUser.ByEmail:output_type -> palm.balsam.v1.EmailUserIndexResponse.Item
	85,  // 186: palm.balsam.v1.GoogleOauth2User.Disable:output_type -> google.protobuf.Empty
	85,  // 187: palm.balsam.v1.GoogleOauth2User.Enable:output_type -> google.protobuf.Empty
	34,  // 188: palm.balsam.v1.GoogleOauth2User.Index:output_type -> palm.balsam.v1.GoogleOauth2UserIndexResponse
	66,  // 189: palm.balsam.v1.GoogleOauth2User.ById:output_type -> palm.balsam.v1.GoogleOauth2UserIndexResponse.Item
	66,  // 190: palm.balsam.v1.GoogleOauth2User.BySubject:output_type -> palm.balsam.v1.GoogleOauth2UserIndexResponse.Item
	85,  // 191: palm.balsam.v1.WechatOauth2User.Disable:output_type -> google.protobuf.Empty
	85,  // 192: palm.balsam.v1.WechatOauth2User.Enable:output_type -> google.protobuf.Empty
	37,  // 193: palm.balsam.v1.WechatOauth2User.Index:output_type -> palm.balsam.v1.WechatOauth2UserIndexResponse
	67,  // 194: palm.balsam.v1.WechatOauth2User.ById:output_type -> palm.balsam.v1.WechatOauth2UserIndexResponse.Item
	67,  // 195: palm.balsam.v1.WechatOauth2User.ByUnionId:output_type -> palm.balsam.v1.WechatOauth2UserIndexResponse.Item
	67,  // 196: palm.balsam.v1.WechatOauth2User.ByAppIdAndUnionId:output_type -> palm.balsam.v1.WechatOauth2UserIndexResponse.Item
	85,  // 197: palm.balsam.v1.WechatMiniProgramUser.Disable:output_type -> google.protobuf.Empty
	85,  // 198: palm.balsam.v1.WechatMiniProgramUser.Enable:output_type -> google.protobuf.Empty
	38,  // 199: palm.balsam.v1.WechatMiniProgramUser.Index:output_type -> palm.balsam.v1.WechatMiniProgramUserIndexResponse
	68,  // 200: palm.balsam.v1.WechatMiniProgramUser.ById:output_type -> palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item
	68,  // 201: palm.balsam.v1.WechatMiniProgramUser.ByUnionId:output_type -> palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item
	68,  // 202: palm.balsam.v1.WechatMiniProgramUser.ByAppIdAndUnionId:output_type -> palm.balsam.v1.WechatMiniProgramUserIndexResponse.Item
	85,  // 203: palm.balsam.v1.Session.Disable:output_type -> google.protobuf.Empty
	39,  // 204: palm.balsam.v1.Session.Index:output_type -> palm.balsam.v1.SessionIndexResponse
	39,  // 205: palm.balsam.v1.Session.ByUser:output_type -> palm.balsam.v1.SessionIndexResponse
	85,  // 206: palm.balsam.v1.Locale.Set:output_type -> google.protobuf.Empty
	41,  // 207: palm.balsam.v1.Locale.Index:output_type -> palm.balsam.v1.LocaleIndexResponse
	43,  // 208: palm.balsam.v1.Locale.ByLang:output_type -> palm.balsam.v1.LocaleByLangResponse
	85,  // 209: palm.balsam.v1.Attachment.Disable:output_type -> google.protobuf.Empty
	48,  // 210: palm.balsam.v1.Attachment.Index:output_type -> palm.balsam.v1.AttachmentIndexResponse
	85,  // 211: palm.balsam.v1.Attachment.SetTitle:output_type -> google.protobuf.Empty
	71,  // 212: palm.balsam.v1.Attachment.ById:output_type -> palm.balsam.v1.AttachmentIndexResponse.Item
	48,  // 213: palm.balsam.v1.Attachment.ByUser:output_type -> palm.balsam.v1.AttachmentIndexResponse
	85,  // 214: palm.balsam.v1.Attachment.Clear:output_type -> google.protobuf.Empty
	47,  // 215: palm.balsam.v1.Attachment.ByResource:output_type -> palm.balsam.v1.AttachmentListResponse
	85,  // 216: palm.balsam.v1.Attachment.Create:output_type -> google.protobuf.Empty
	85,  // 217: palm.balsam.v1.Attachment.SetUploadedAt:output_type -> google.protobuf.Empty
	85,  // 218: palm.balsam.v1.LeaveWord.Create:output_type -> google.protobuf.Empty
	50,  // 219: palm.balsam.v1.LeaveWord.Index:output_type -> palm.balsam.v1.LeaveWordIndexResponse
	85,  // 220: palm.balsam.v1.LeaveWord.Publish:output_type -> google.protobuf.Empty
	85,  // 221: palm.balsam.v1.LeaveWord.Destroy:output_type -> google.protobuf.Empty
	51,  // 222: palm.balsam.v1.Site.Status:output_type -> palm.balsam.v1.SiteStatusResponse
	57,  // 223: palm.balsam.v1.Site.Layout:output_type -> palm.balsam.v1.SiteLayoutResponse
	56,  // 224: palm.balsam.v1.Site.GetInfoByLang:output_type -> palm.balsam.v1.SiteGetInfoByLangResponse
	85,  // 225: palm.balsam.v1.Site.SetInfo:output_type -> google.protobuf.Empty
	85,  // 226: palm.balsam.v1.Site.SetKeywords:output_type -> google.protobuf.Empty
	85,  // 227: palm.balsam.v1.Site.SetAuthor:output_type -> google.protobuf.Empty
	85,  // 228: palm.balsam.v1.Site.SetBaiduAccount:output_type -> google.protobuf.Empty
	54,  // 229: palm.balsam.v1.Site.GetBaiduAccount:output_type -> palm.balsam.v1.SiteBaiduAccount
	85,  // 230: palm.balsam.v1.Site.DeleteBaiduAccount:output_type -> google.protobuf.Empty
	85,  // 231: palm.balsam.v1.Site.SetGoogleAccount:output_type -> google.protobuf.Empty
	53,  // 232: palm.balsam.v1.Site.GetGoogleAccount:output_type -> palm.balsam.v1.SiteGoogleAccount
	85,  // 233: palm.balsam.v1.Site.DeleteGoogleAccount:output_type -> google.protobuf.Empty
	85,  // 234: palm.balsam.v1.Site.SetIndexNowAccount:output_type -> google.protobuf.Empty
	52,  // 235: palm.balsam.v1.Site.GetIndexNowAccount:output_type -> palm.balsam.v1.SiteIndexNowAccount
	85,  // 236: palm.balsam.v1.Site.DeleteIndexNowAccount:output_type -> google.protobuf.Empty
	155, // [155:237] is the sub-list for method output_type
	73,  // [73:155] is the sub-list for method input_type
	73,  // [73:73] is the sub-list for extension type_name
	73,  // [73:73] is the sub-list for extension extendee
	0,   // [0:73] is the sub-list for field type_name
}

func init() { file_balsam_proto_init() }
func file_balsam_proto_init() {
	if File_balsam_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_balsam_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*IdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*ResourceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Pager); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*AesPlainMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*AesCodeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*JwtSignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*JwtSignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*JwtVerifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*JwtVerifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*HMacSignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*HMacSignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*HMacVerifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[14].Exporter = func(v any, i int) any {
			switch v := v.(*UserUpdateProfileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[15].Exporter = func(v any, i int) any {
			switch v := v.(*UserIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[16].Exporter = func(v any, i int) any {
			switch v := v.(*LogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[17].Exporter = func(v any, i int) any {
			switch v := v.(*UserLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[18].Exporter = func(v any, i int) any {
			switch v := v.(*EmailUserByEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[19].Exporter = func(v any, i int) any {
			switch v := v.(*EmailUserByNicknameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[20].Exporter = func(v any, i int) any {
			switch v := v.(*EmailUserIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[21].Exporter = func(v any, i int) any {
			switch v := v.(*UserResetPasswordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[22].Exporter = func(v any, i int) any {
			switch v := v.(*UserByEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[23].Exporter = func(v any, i int) any {
			switch v := v.(*UserByTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[24].Exporter = func(v any, i int) any {
			switch v := v.(*UserSignInByEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[25].Exporter = func(v any, i int) any {
			switch v := v.(*UserSignUpByEmailRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[26].Exporter = func(v any, i int) any {
			switch v := v.(*UserSignInResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[27].Exporter = func(v any, i int) any {
			switch v := v.(*GoogleOauth2UserBySubjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[28].Exporter = func(v any, i int) any {
			switch v := v.(*GoogleOauth2UserIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[29].Exporter = func(v any, i int) any {
			switch v := v.(*WechatByUnionIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[30].Exporter = func(v any, i int) any {
			switch v := v.(*WechatByAppIdAndOpenIdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[31].Exporter = func(v any, i int) any {
			switch v := v.(*WechatOauth2UserIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[32].Exporter = func(v any, i int) any {
			switch v := v.(*WechatMiniProgramUserIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[33].Exporter = func(v any, i int) any {
			switch v := v.(*SessionIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[34].Exporter = func(v any, i int) any {
			switch v := v.(*LocaleSetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[35].Exporter = func(v any, i int) any {
			switch v := v.(*LocaleIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[36].Exporter = func(v any, i int) any {
			switch v := v.(*LocaleByLangRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[37].Exporter = func(v any, i int) any {
			switch v := v.(*LocaleByLangResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[38].Exporter = func(v any, i int) any {
			switch v := v.(*AttachmentCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[39].Exporter = func(v any, i int) any {
			switch v := v.(*AttachmentSetTitleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[40].Exporter = func(v any, i int) any {
			switch v := v.(*AttachmentShowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[41].Exporter = func(v any, i int) any {
			switch v := v.(*AttachmentListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[42].Exporter = func(v any, i int) any {
			switch v := v.(*AttachmentIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[43].Exporter = func(v any, i int) any {
			switch v := v.(*LeaveWordCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[44].Exporter = func(v any, i int) any {
			switch v := v.(*LeaveWordIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[45].Exporter = func(v any, i int) any {
			switch v := v.(*SiteStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[46].Exporter = func(v any, i int) any {
			switch v := v.(*SiteIndexNowAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[47].Exporter = func(v any, i int) any {
			switch v := v.(*SiteGoogleAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[48].Exporter = func(v any, i int) any {
			switch v := v.(*SiteBaiduAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[49].Exporter = func(v any, i int) any {
			switch v := v.(*SiteGetInfoByLangRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[50].Exporter = func(v any, i int) any {
			switch v := v.(*SiteGetInfoByLangResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[51].Exporter = func(v any, i int) any {
			switch v := v.(*SiteLayoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[52].Exporter = func(v any, i int) any {
			switch v := v.(*SiteInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[53].Exporter = func(v any, i int) any {
			switch v := v.(*SiteKeywordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[54].Exporter = func(v any, i int) any {
			switch v := v.(*UserIndexResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[55].Exporter = func(v any, i int) any {
			switch v := v.(*UserLogsResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[56].Exporter = func(v any, i int) any {
			switch v := v.(*EmailUserIndexResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[57].Exporter = func(v any, i int) any {
			switch v := v.(*UserSignInResponse_Detail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[58].Exporter = func(v any, i int) any {
			switch v := v.(*UserSignInResponse_Permission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[59].Exporter = func(v any, i int) any {
			switch v := v.(*UserSignInResponse_Menu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[60].Exporter = func(v any, i int) any {
			switch v := v.(*GoogleOauth2UserIndexResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[61].Exporter = func(v any, i int) any {
			switch v := v.(*WechatOauth2UserIndexResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[62].Exporter = func(v any, i int) any {
			switch v := v.(*WechatMiniProgramUserIndexResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[63].Exporter = func(v any, i int) any {
			switch v := v.(*SessionIndexResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[64].Exporter = func(v any, i int) any {
			switch v := v.(*LocaleIndexResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[65].Exporter = func(v any, i int) any {
			switch v := v.(*AttachmentIndexResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[66].Exporter = func(v any, i int) any {
			switch v := v.(*LeaveWordIndexResponse_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[67].Exporter = func(v any, i int) any {
			switch v := v.(*SiteStatusResponse_Redis); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[68].Exporter = func(v any, i int) any {
			switch v := v.(*SiteStatusResponse_PostgreSql); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[69].Exporter = func(v any, i int) any {
			switch v := v.(*SiteStatusResponse_OpenSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[70].Exporter = func(v any, i int) any {
			switch v := v.(*SiteIndexNowAccount_WebSiteVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[71].Exporter = func(v any, i int) any {
			switch v := v.(*SiteGoogleAccount_WebSiteVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[72].Exporter = func(v any, i int) any {
			switch v := v.(*SiteGoogleAccount_ReCaptcha); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[73].Exporter = func(v any, i int) any {
			switch v := v.(*SiteBaiduAccount_WebSiteVerify); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[74].Exporter = func(v any, i int) any {
			switch v := v.(*SiteLayoutResponse_Author); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[75].Exporter = func(v any, i int) any {
			switch v := v.(*SiteLayoutResponse_CnGab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[76].Exporter = func(v any, i int) any {
			switch v := v.(*SiteLayoutResponse_CnIcp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_balsam_proto_msgTypes[1].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[7].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[10].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[16].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[22].OneofWrappers = []any{
		(*UserByEmailRequest_Email)(nil),
		(*UserByEmailRequest_Nickname)(nil),
	}
	file_balsam_proto_msgTypes[24].OneofWrappers = []any{
		(*UserSignInByEmailRequest_Email)(nil),
		(*UserSignInByEmailRequest_Nickname)(nil),
	}
	file_balsam_proto_msgTypes[46].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[47].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[48].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[51].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[54].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[55].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[56].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[57].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[58].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[59].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[60].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[61].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[62].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[63].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[65].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[66].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_balsam_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   77,
			NumExtensions: 0,
			NumServices:   13,
		},
		GoTypes:           file_balsam_proto_goTypes,
		DependencyIndexes: file_balsam_proto_depIdxs,
		EnumInfos:         file_balsam_proto_enumTypes,
		MessageInfos:      file_balsam_proto_msgTypes,
	}.Build()
	File_balsam_proto = out.File
	file_balsam_proto_rawDesc = nil
	file_balsam_proto_goTypes = nil
	file_balsam_proto_depIdxs = nil
}
