// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: balsam.proto

package v2

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AesPlainMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *AesPlainMessage) Reset() {
	*x = AesPlainMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AesPlainMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AesPlainMessage) ProtoMessage() {}

func (x *AesPlainMessage) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AesPlainMessage.ProtoReflect.Descriptor instead.
func (*AesPlainMessage) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{0}
}

func (x *AesPlainMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

type AesCodeMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload []byte `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Salt    []byte `protobuf:"bytes,2,opt,name=salt,proto3" json:"salt,omitempty"`
}

func (x *AesCodeMessage) Reset() {
	*x = AesCodeMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AesCodeMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AesCodeMessage) ProtoMessage() {}

func (x *AesCodeMessage) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AesCodeMessage.ProtoReflect.Descriptor instead.
func (*AesCodeMessage) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{1}
}

func (x *AesCodeMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *AesCodeMessage) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

type JwtSignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyId     *string                `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3,oneof" json:"key_id,omitempty"`
	Issuer    string                 `protobuf:"bytes,11,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Subject   string                 `protobuf:"bytes,12,opt,name=subject,proto3" json:"subject,omitempty"`
	Audiences []string               `protobuf:"bytes,13,rep,name=audiences,proto3" json:"audiences,omitempty"`
	NotBefore *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=not_before,json=notBefore,proto3" json:"not_before,omitempty"`
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,19,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Extra     *string                `protobuf:"bytes,99,opt,name=extra,proto3,oneof" json:"extra,omitempty"`
}

func (x *JwtSignRequest) Reset() {
	*x = JwtSignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JwtSignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtSignRequest) ProtoMessage() {}

func (x *JwtSignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtSignRequest.ProtoReflect.Descriptor instead.
func (*JwtSignRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{2}
}

func (x *JwtSignRequest) GetKeyId() string {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return ""
}

func (x *JwtSignRequest) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *JwtSignRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *JwtSignRequest) GetAudiences() []string {
	if x != nil {
		return x.Audiences
	}
	return nil
}

func (x *JwtSignRequest) GetNotBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.NotBefore
	}
	return nil
}

func (x *JwtSignRequest) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *JwtSignRequest) GetExtra() string {
	if x != nil && x.Extra != nil {
		return *x.Extra
	}
	return ""
}

type JwtSignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *JwtSignResponse) Reset() {
	*x = JwtSignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JwtSignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtSignResponse) ProtoMessage() {}

func (x *JwtSignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtSignResponse.ProtoReflect.Descriptor instead.
func (*JwtSignResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{3}
}

func (x *JwtSignResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type JwtVerifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Issuer   string `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Audience string `protobuf:"bytes,3,opt,name=audience,proto3" json:"audience,omitempty"`
}

func (x *JwtVerifyRequest) Reset() {
	*x = JwtVerifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JwtVerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtVerifyRequest) ProtoMessage() {}

func (x *JwtVerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtVerifyRequest.ProtoReflect.Descriptor instead.
func (*JwtVerifyRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{4}
}

func (x *JwtVerifyRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *JwtVerifyRequest) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *JwtVerifyRequest) GetAudience() string {
	if x != nil {
		return x.Audience
	}
	return ""
}

type JwtVerifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JwtId   string  `protobuf:"bytes,1,opt,name=jwt_id,json=jwtId,proto3" json:"jwt_id,omitempty"`
	KeyId   *string `protobuf:"bytes,2,opt,name=key_id,json=keyId,proto3,oneof" json:"key_id,omitempty"`
	Subject string  `protobuf:"bytes,11,opt,name=subject,proto3" json:"subject,omitempty"`
	Extra   *string `protobuf:"bytes,19,opt,name=extra,proto3,oneof" json:"extra,omitempty"`
}

func (x *JwtVerifyResponse) Reset() {
	*x = JwtVerifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JwtVerifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JwtVerifyResponse) ProtoMessage() {}

func (x *JwtVerifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JwtVerifyResponse.ProtoReflect.Descriptor instead.
func (*JwtVerifyResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{5}
}

func (x *JwtVerifyResponse) GetJwtId() string {
	if x != nil {
		return x.JwtId
	}
	return ""
}

func (x *JwtVerifyResponse) GetKeyId() string {
	if x != nil && x.KeyId != nil {
		return *x.KeyId
	}
	return ""
}

func (x *JwtVerifyResponse) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *JwtVerifyResponse) GetExtra() string {
	if x != nil && x.Extra != nil {
		return *x.Extra
	}
	return ""
}

type HMacSignRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plain []byte `protobuf:"bytes,1,opt,name=plain,proto3" json:"plain,omitempty"`
}

func (x *HMacSignRequest) Reset() {
	*x = HMacSignRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HMacSignRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HMacSignRequest) ProtoMessage() {}

func (x *HMacSignRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HMacSignRequest.ProtoReflect.Descriptor instead.
func (*HMacSignRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{6}
}

func (x *HMacSignRequest) GetPlain() []byte {
	if x != nil {
		return x.Plain
	}
	return nil
}

type HMacSignResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code []byte `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Salt []byte `protobuf:"bytes,2,opt,name=salt,proto3" json:"salt,omitempty"`
}

func (x *HMacSignResponse) Reset() {
	*x = HMacSignResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HMacSignResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HMacSignResponse) ProtoMessage() {}

func (x *HMacSignResponse) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HMacSignResponse.ProtoReflect.Descriptor instead.
func (*HMacSignResponse) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{7}
}

func (x *HMacSignResponse) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *HMacSignResponse) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

type HMacVerifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Plain []byte `protobuf:"bytes,1,opt,name=plain,proto3" json:"plain,omitempty"`
	Code  []byte `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Salt  []byte `protobuf:"bytes,3,opt,name=salt,proto3" json:"salt,omitempty"`
}

func (x *HMacVerifyRequest) Reset() {
	*x = HMacVerifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_balsam_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HMacVerifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HMacVerifyRequest) ProtoMessage() {}

func (x *HMacVerifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_balsam_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HMacVerifyRequest.ProtoReflect.Descriptor instead.
func (*HMacVerifyRequest) Descriptor() ([]byte, []int) {
	return file_balsam_proto_rawDescGZIP(), []int{8}
}

func (x *HMacVerifyRequest) GetPlain() []byte {
	if x != nil {
		return x.Plain
	}
	return nil
}

func (x *HMacVerifyRequest) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

func (x *HMacVerifyRequest) GetSalt() []byte {
	if x != nil {
		return x.Salt
	}
	return nil
}

var File_balsam_proto protoreflect.FileDescriptor

var file_balsam_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x0f,
	0x41, 0x65, 0x73, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x3e, 0x0a, 0x0e, 0x41, 0x65, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x22, 0xa2, 0x02, 0x0a, 0x0e, 0x4a, 0x77,
	0x74, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x06,
	0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05,
	0x6b, 0x65, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75,
	0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x75,
	0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x5f,
	0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x42, 0x65, 0x66,
	0x6f, 0x72, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61,
	0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x19,
	0x0a, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x18, 0x63, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52,
	0x05, 0x65, 0x78, 0x74, 0x72, 0x61, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x69, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x27,
	0x0a, 0x0f, 0x4a, 0x77, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5c, 0x0a, 0x10, 0x4a, 0x77, 0x74, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x64,
	0x69, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64,
	0x69, 0x65, 0x6e, 0x63, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x11, 0x4a, 0x77, 0x74, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6a,
	0x77, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6a, 0x77, 0x74,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x42, 0x08,
	0x0a, 0x06, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x22, 0x27, 0x0a, 0x0f, 0x48, 0x4d, 0x61, 0x63,
	0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x6c, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x69,
	0x6e, 0x22, 0x3a, 0x0a, 0x10, 0x48, 0x4d, 0x61, 0x63, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x22, 0x51, 0x0a,
	0x11, 0x48, 0x4d, 0x61, 0x63, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x05, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x61, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74,
	0x32, 0xa1, 0x01, 0x0a, 0x03, 0x41, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x07, 0x45, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x65, 0x73, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x1a, 0x1e, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x65, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x07, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x65, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x1a, 0x1f, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x41, 0x65, 0x73, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0x00, 0x32, 0xa1, 0x01, 0x0a, 0x03, 0x4a, 0x77, 0x74, 0x12, 0x49, 0x0a, 0x04,
	0x53, 0x69, 0x67, 0x6e, 0x12, 0x1e, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x77, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x77, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x06, 0x56, 0x65, 0x72, 0x69, 0x66,
	0x79, 0x12, 0x20, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x4a, 0x77, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x77, 0x74, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x9a, 0x01, 0x0a, 0x04, 0x48, 0x4d, 0x61,
	0x63, 0x12, 0x4b, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x1f, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x4d, 0x61, 0x63, 0x53,
	0x69, 0x67, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x61, 0x6c,
	0x6d, 0x2e, 0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x4d, 0x61, 0x63,
	0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45,
	0x0a, 0x06, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x21, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x62, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x4d, 0x61, 0x63, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x66, 0x0a, 0x2c, 0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x78, 0x69, 0x76, 0x2e, 0x70,
	0x61, 0x6c, 0x6d, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x2e, 0x62, 0x61, 0x6c, 0x73,
	0x61, 0x6d, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x34, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x2d, 0x78, 0x69, 0x76, 0x2f, 0x70,
	0x61, 0x6c, 0x6d, 0x2f, 0x61, 0x74, 0x72, 0x6f, 0x70, 0x61, 0x2f, 0x62, 0x61, 0x6c, 0x73, 0x61,
	0x6d, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x32, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_balsam_proto_rawDescOnce sync.Once
	file_balsam_proto_rawDescData = file_balsam_proto_rawDesc
)

func file_balsam_proto_rawDescGZIP() []byte {
	file_balsam_proto_rawDescOnce.Do(func() {
		file_balsam_proto_rawDescData = protoimpl.X.CompressGZIP(file_balsam_proto_rawDescData)
	})
	return file_balsam_proto_rawDescData
}

var file_balsam_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_balsam_proto_goTypes = []any{
	(*AesPlainMessage)(nil),       // 0: palm.balsam.v1.AesPlainMessage
	(*AesCodeMessage)(nil),        // 1: palm.balsam.v1.AesCodeMessage
	(*JwtSignRequest)(nil),        // 2: palm.balsam.v1.JwtSignRequest
	(*JwtSignResponse)(nil),       // 3: palm.balsam.v1.JwtSignResponse
	(*JwtVerifyRequest)(nil),      // 4: palm.balsam.v1.JwtVerifyRequest
	(*JwtVerifyResponse)(nil),     // 5: palm.balsam.v1.JwtVerifyResponse
	(*HMacSignRequest)(nil),       // 6: palm.balsam.v1.HMacSignRequest
	(*HMacSignResponse)(nil),      // 7: palm.balsam.v1.HMacSignResponse
	(*HMacVerifyRequest)(nil),     // 8: palm.balsam.v1.HMacVerifyRequest
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 10: google.protobuf.Empty
}
var file_balsam_proto_depIdxs = []int32{
	9,  // 0: palm.balsam.v1.JwtSignRequest.not_before:type_name -> google.protobuf.Timestamp
	9,  // 1: palm.balsam.v1.JwtSignRequest.expires_at:type_name -> google.protobuf.Timestamp
	0,  // 2: palm.balsam.v1.Aes.Encrypt:input_type -> palm.balsam.v1.AesPlainMessage
	1,  // 3: palm.balsam.v1.Aes.Decrypt:input_type -> palm.balsam.v1.AesCodeMessage
	2,  // 4: palm.balsam.v1.Jwt.Sign:input_type -> palm.balsam.v1.JwtSignRequest
	4,  // 5: palm.balsam.v1.Jwt.Verify:input_type -> palm.balsam.v1.JwtVerifyRequest
	6,  // 6: palm.balsam.v1.HMac.Sign:input_type -> palm.balsam.v1.HMacSignRequest
	8,  // 7: palm.balsam.v1.HMac.Verify:input_type -> palm.balsam.v1.HMacVerifyRequest
	1,  // 8: palm.balsam.v1.Aes.Encrypt:output_type -> palm.balsam.v1.AesCodeMessage
	0,  // 9: palm.balsam.v1.Aes.Decrypt:output_type -> palm.balsam.v1.AesPlainMessage
	3,  // 10: palm.balsam.v1.Jwt.Sign:output_type -> palm.balsam.v1.JwtSignResponse
	5,  // 11: palm.balsam.v1.Jwt.Verify:output_type -> palm.balsam.v1.JwtVerifyResponse
	7,  // 12: palm.balsam.v1.HMac.Sign:output_type -> palm.balsam.v1.HMacSignResponse
	10, // 13: palm.balsam.v1.HMac.Verify:output_type -> google.protobuf.Empty
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_balsam_proto_init() }
func file_balsam_proto_init() {
	if File_balsam_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_balsam_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*AesPlainMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*AesCodeMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*JwtSignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*JwtSignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*JwtVerifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*JwtVerifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*HMacSignRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*HMacSignResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_balsam_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*HMacVerifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_balsam_proto_msgTypes[2].OneofWrappers = []any{}
	file_balsam_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_balsam_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_balsam_proto_goTypes,
		DependencyIndexes: file_balsam_proto_depIdxs,
		MessageInfos:      file_balsam_proto_msgTypes,
	}.Build()
	File_balsam_proto = out.File
	file_balsam_proto_rawDesc = nil
	file_balsam_proto_goTypes = nil
	file_balsam_proto_depIdxs = nil
}
