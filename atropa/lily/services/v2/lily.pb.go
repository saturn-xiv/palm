// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.2
// source: lily.proto

package v2

import (
	v2 "github.com/saturn-xiv/palm/atropa/s3/services/v2"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// https://owl.purdue.edu/owl/general_writing/general_writing_faqs.html
type Style int32

const (
	// https://apastyle.apa.org/
	// https://owl.purdue.edu/owl/research_and_citation/apa_style/apa_formatting_and_style_guide/general_format.html
	// https://www.ilc.cuhk.edu.hk/Chinese/APAMLA/APA/APAlayout.aspx
	Style_APA_7 Style = 0
	// https://www.mla.org/MLA-Style
	// https://owl.purdue.edu/owl/research_and_citation/mla_style/mla_formatting_and_style_guide/mla_formatting_and_style_guide.html#:~:text=MLA%20(Modern%20Language%20Association)%20style,the%20liberal%20arts%20and%20humanities.
	Style_MLA_8 Style = 10
	// https://www.chicagomanualofstyle.org/home.html
	// https://owl.purdue.edu/owl/research_and_citation/chicago_manual_17th_edition/cmos_formatting_and_style_guide/chicago_manual_of_style_17th_edition.html
	Style_CMOS Style = 20
)

// Enum value maps for Style.
var (
	Style_name = map[int32]string{
		0:  "APA_7",
		10: "MLA_8",
		20: "CMOS",
	}
	Style_value = map[string]int32{
		"APA_7": 0,
		"MLA_8": 10,
		"CMOS":  20,
	}
)

func (x Style) Enum() *Style {
	p := new(Style)
	*p = x
	return p
}

func (x Style) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Style) Descriptor() protoreflect.EnumDescriptor {
	return file_lily_proto_enumTypes[0].Descriptor()
}

func (Style) Type() protoreflect.EnumType {
	return &file_lily_proto_enumTypes[0]
}

func (x Style) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Style.Descriptor instead.
func (Style) EnumDescriptor() ([]byte, []int) {
	return file_lily_proto_rawDescGZIP(), []int{0}
}

type TeXLiveTask_Format int32

const (
	TeXLiveTask_Pdf TeXLiveTask_Format = 0
)

// Enum value maps for TeXLiveTask_Format.
var (
	TeXLiveTask_Format_name = map[int32]string{
		0: "Pdf",
	}
	TeXLiveTask_Format_value = map[string]int32{
		"Pdf": 0,
	}
)

func (x TeXLiveTask_Format) Enum() *TeXLiveTask_Format {
	p := new(TeXLiveTask_Format)
	*p = x
	return p
}

func (x TeXLiveTask_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TeXLiveTask_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_lily_proto_enumTypes[1].Descriptor()
}

func (TeXLiveTask_Format) Type() protoreflect.EnumType {
	return &file_lily_proto_enumTypes[1]
}

func (x TeXLiveTask_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TeXLiveTask_Format.Descriptor instead.
func (TeXLiveTask_Format) EnumDescriptor() ([]byte, []int) {
	return file_lily_proto_rawDescGZIP(), []int{5, 0}
}

type PandocTask_Format int32

const (
	PandocTask_Plain    PandocTask_Format = 0
	PandocTask_Markdown PandocTask_Format = 1
	PandocTask_Pdf      PandocTask_Format = 2
	PandocTask_Docx     PandocTask_Format = 3
)

// Enum value maps for PandocTask_Format.
var (
	PandocTask_Format_name = map[int32]string{
		0: "Plain",
		1: "Markdown",
		2: "Pdf",
		3: "Docx",
	}
	PandocTask_Format_value = map[string]int32{
		"Plain":    0,
		"Markdown": 1,
		"Pdf":      2,
		"Docx":     3,
	}
)

func (x PandocTask_Format) Enum() *PandocTask_Format {
	p := new(PandocTask_Format)
	*p = x
	return p
}

func (x PandocTask_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PandocTask_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_lily_proto_enumTypes[2].Descriptor()
}

func (PandocTask_Format) Type() protoreflect.EnumType {
	return &file_lily_proto_enumTypes[2]
}

func (x PandocTask_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PandocTask_Format.Descriptor instead.
func (PandocTask_Format) EnumDescriptor() ([]byte, []int) {
	return file_lily_proto_rawDescGZIP(), []int{6, 0}
}

type Book struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Book) Reset() {
	*x = Book{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lily_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Book) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Book) ProtoMessage() {}

func (x *Book) ProtoReflect() protoreflect.Message {
	mi := &file_lily_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Book.ProtoReflect.Descriptor instead.
func (*Book) Descriptor() ([]byte, []int) {
	return file_lily_proto_rawDescGZIP(), []int{0}
}

type Slideshow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Slideshow) Reset() {
	*x = Slideshow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lily_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Slideshow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Slideshow) ProtoMessage() {}

func (x *Slideshow) ProtoReflect() protoreflect.Message {
	mi := &file_lily_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Slideshow.ProtoReflect.Descriptor instead.
func (*Slideshow) Descriptor() ([]byte, []int) {
	return file_lily_proto_rawDescGZIP(), []int{1}
}

type Article struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Article) Reset() {
	*x = Article{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lily_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Article) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Article) ProtoMessage() {}

func (x *Article) ProtoReflect() protoreflect.Message {
	mi := &file_lily_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Article.ProtoReflect.Descriptor instead.
func (*Article) Descriptor() ([]byte, []int) {
	return file_lily_proto_rawDescGZIP(), []int{2}
}

type Section struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Section `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *Section) Reset() {
	*x = Section{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lily_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Section) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Section) ProtoMessage() {}

func (x *Section) ProtoReflect() protoreflect.Message {
	mi := &file_lily_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Section.ProtoReflect.Descriptor instead.
func (*Section) Descriptor() ([]byte, []int) {
	return file_lily_proto_rawDescGZIP(), []int{3}
}

func (x *Section) GetItems() []*Section {
	if x != nil {
		return x.Items
	}
	return nil
}

type TeXLiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Style  Style                `protobuf:"varint,2,opt,name=style,proto3,enum=palm.lily.v1.Style" json:"style,omitempty"`
	Format TeXLiveTask_Format   `protobuf:"varint,3,opt,name=format,proto3,enum=palm.lily.v1.TeXLiveTask_Format" json:"format,omitempty"`
	Ttl    *durationpb.Duration `protobuf:"bytes,9,opt,name=ttl,proto3" json:"ttl,omitempty"`
	// Types that are assignable to Payload:
	//
	//	*TeXLiveRequest_Book
	//	*TeXLiveRequest_Article
	//	*TeXLiveRequest_Slideshow
	Payload     isTeXLiveRequest_Payload `protobuf_oneof:"Payload"`
	Entry       []byte                   `protobuf:"bytes,98,opt,name=entry,proto3" json:"entry,omitempty"`
	Attachments map[string][]byte        `protobuf:"bytes,99,rep,name=attachments,proto3" json:"attachments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *TeXLiveRequest) Reset() {
	*x = TeXLiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lily_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeXLiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeXLiveRequest) ProtoMessage() {}

func (x *TeXLiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lily_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeXLiveRequest.ProtoReflect.Descriptor instead.
func (*TeXLiveRequest) Descriptor() ([]byte, []int) {
	return file_lily_proto_rawDescGZIP(), []int{4}
}

func (x *TeXLiveRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TeXLiveRequest) GetStyle() Style {
	if x != nil {
		return x.Style
	}
	return Style_APA_7
}

func (x *TeXLiveRequest) GetFormat() TeXLiveTask_Format {
	if x != nil {
		return x.Format
	}
	return TeXLiveTask_Pdf
}

func (x *TeXLiveRequest) GetTtl() *durationpb.Duration {
	if x != nil {
		return x.Ttl
	}
	return nil
}

func (m *TeXLiveRequest) GetPayload() isTeXLiveRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *TeXLiveRequest) GetBook() *Book {
	if x, ok := x.GetPayload().(*TeXLiveRequest_Book); ok {
		return x.Book
	}
	return nil
}

func (x *TeXLiveRequest) GetArticle() *Article {
	if x, ok := x.GetPayload().(*TeXLiveRequest_Article); ok {
		return x.Article
	}
	return nil
}

func (x *TeXLiveRequest) GetSlideshow() *Slideshow {
	if x, ok := x.GetPayload().(*TeXLiveRequest_Slideshow); ok {
		return x.Slideshow
	}
	return nil
}

func (x *TeXLiveRequest) GetEntry() []byte {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *TeXLiveRequest) GetAttachments() map[string][]byte {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type isTeXLiveRequest_Payload interface {
	isTeXLiveRequest_Payload()
}

type TeXLiveRequest_Book struct {
	Book *Book `protobuf:"bytes,11,opt,name=book,proto3,oneof"`
}

type TeXLiveRequest_Article struct {
	Article *Article `protobuf:"bytes,12,opt,name=article,proto3,oneof"`
}

type TeXLiveRequest_Slideshow struct {
	Slideshow *Slideshow `protobuf:"bytes,13,opt,name=slideshow,proto3,oneof"`
}

func (*TeXLiveRequest_Book) isTeXLiveRequest_Payload() {}

func (*TeXLiveRequest_Article) isTeXLiveRequest_Payload() {}

func (*TeXLiveRequest_Slideshow) isTeXLiveRequest_Payload() {}

type TeXLiveTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry       []byte            `protobuf:"bytes,1,opt,name=entry,proto3" json:"entry,omitempty"`
	Attachments map[string][]byte `protobuf:"bytes,3,rep,name=attachments,proto3" json:"attachments,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Output      *Output           `protobuf:"bytes,9,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *TeXLiveTask) Reset() {
	*x = TeXLiveTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lily_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeXLiveTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeXLiveTask) ProtoMessage() {}

func (x *TeXLiveTask) ProtoReflect() protoreflect.Message {
	mi := &file_lily_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeXLiveTask.ProtoReflect.Descriptor instead.
func (*TeXLiveTask) Descriptor() ([]byte, []int) {
	return file_lily_proto_rawDescGZIP(), []int{5}
}

func (x *TeXLiveTask) GetEntry() []byte {
	if x != nil {
		return x.Entry
	}
	return nil
}

func (x *TeXLiveTask) GetAttachments() map[string][]byte {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *TeXLiveTask) GetOutput() *Output {
	if x != nil {
		return x.Output
	}
	return nil
}

// https://pandoc.org/MANUAL.html
type PandocTask struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload string  `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	Output  *Output `protobuf:"bytes,2,opt,name=output,proto3" json:"output,omitempty"`
}

func (x *PandocTask) Reset() {
	*x = PandocTask{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lily_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PandocTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PandocTask) ProtoMessage() {}

func (x *PandocTask) ProtoReflect() protoreflect.Message {
	mi := &file_lily_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PandocTask.ProtoReflect.Descriptor instead.
func (*PandocTask) Descriptor() ([]byte, []int) {
	return file_lily_proto_rawDescGZIP(), []int{6}
}

func (x *PandocTask) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

func (x *PandocTask) GetOutput() *Output {
	if x != nil {
		return x.Output
	}
	return nil
}

type Output struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket *v2.Bucket `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Object string     `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
}

func (x *Output) Reset() {
	*x = Output{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lily_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_lily_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_lily_proto_rawDescGZIP(), []int{7}
}

func (x *Output) GetBucket() *v2.Bucket {
	if x != nil {
		return x.Bucket
	}
	return nil
}

func (x *Output) GetObject() string {
	if x != nil {
		return x.Object
	}
	return ""
}

var File_lily_proto protoreflect.FileDescriptor

var file_lily_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6c, 0x69, 0x6c, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6c, 0x69, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x08, 0x73, 0x33, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x06, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6b, 0x22, 0x0b, 0x0a, 0x09,
	0x53, 0x6c, 0x69, 0x64, 0x65, 0x73, 0x68, 0x6f, 0x77, 0x22, 0x09, 0x0a, 0x07, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x22, 0x36, 0x0a, 0x07, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6c, 0x69, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xfe, 0x03, 0x0a,
	0x0e, 0x54, 0x65, 0x58, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6c, 0x69, 0x6c, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x52, 0x05, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x38,
	0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20,
	0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6c, 0x69, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65,
	0x58, 0x4c, 0x69, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x2b, 0x0a, 0x03, 0x74, 0x74, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x03, 0x74, 0x74, 0x6c, 0x12, 0x28, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6c, 0x69, 0x6c, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x12,
	0x31, 0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6c, 0x69, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x73, 0x68, 0x6f, 0x77, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6c, 0x69, 0x6c,
	0x79, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x73, 0x68, 0x6f, 0x77, 0x48, 0x00,
	0x52, 0x09, 0x73, 0x6c, 0x69, 0x64, 0x65, 0x73, 0x68, 0x6f, 0x77, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x6e, 0x74, 0x72, 0x79, 0x18, 0x62, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x4f, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x63, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6c, 0x69,
	0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x58, 0x4c, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xf2, 0x01,
	0x0a, 0x0b, 0x54, 0x65, 0x58, 0x4c, 0x69, 0x76, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x65, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x4c, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x6c, 0x69, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x58, 0x4c, 0x69, 0x76, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x2c, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x6c, 0x69, 0x6c, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x1a,
	0x3e, 0x0a, 0x10, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x11, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x64, 0x66,
	0x10, 0x00, 0x22, 0x8a, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x6e, 0x64, 0x6f, 0x63, 0x54, 0x61, 0x73,
	0x6b, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2c, 0x0a, 0x06, 0x6f,
	0x75, 0x74, 0x70, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x61,
	0x6c, 0x6d, 0x2e, 0x6c, 0x69, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x22, 0x34, 0x0a, 0x06, 0x46, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x6c, 0x61, 0x69, 0x6e, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x4d, 0x61, 0x72, 0x6b, 0x64, 0x6f, 0x77, 0x6e, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03,
	0x50, 0x64, 0x66, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x6f, 0x63, 0x78, 0x10, 0x03, 0x22,
	0x4c, 0x0a, 0x06, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x06, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x61, 0x6c, 0x6d,
	0x2e, 0x73, 0x33, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x06, 0x62,
	0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x2a, 0x27, 0x0a,
	0x05, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x50, 0x41, 0x5f, 0x37, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4c, 0x41, 0x5f, 0x38, 0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04,
	0x43, 0x4d, 0x4f, 0x53, 0x10, 0x14, 0x32, 0x44, 0x0a, 0x07, 0x54, 0x65, 0x58, 0x4c, 0x69, 0x76,
	0x65, 0x12, 0x39, 0x0a, 0x05, 0x54, 0x6f, 0x50, 0x64, 0x66, 0x12, 0x1c, 0x2e, 0x70, 0x61, 0x6c,
	0x6d, 0x2e, 0x6c, 0x69, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x58, 0x4c, 0x69, 0x76,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e,
	0x73, 0x33, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x22, 0x00, 0x42, 0x62, 0x0a, 0x2a,
	0x63, 0x6f, 0x6d, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x73, 0x61, 0x74, 0x75, 0x72,
	0x6e, 0x5f, 0x78, 0x69, 0x76, 0x2e, 0x70, 0x61, 0x6c, 0x6d, 0x2e, 0x70, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x2e, 0x6c, 0x69, 0x6c, 0x79, 0x2e, 0x76, 0x31, 0x50, 0x01, 0x5a, 0x32, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x61, 0x74, 0x75, 0x72, 0x6e, 0x2d,
	0x78, 0x69, 0x76, 0x2f, 0x70, 0x61, 0x6c, 0x6d, 0x2f, 0x61, 0x74, 0x72, 0x6f, 0x70, 0x61, 0x2f,
	0x6c, 0x69, 0x6c, 0x79, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2f, 0x76, 0x32,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lily_proto_rawDescOnce sync.Once
	file_lily_proto_rawDescData = file_lily_proto_rawDesc
)

func file_lily_proto_rawDescGZIP() []byte {
	file_lily_proto_rawDescOnce.Do(func() {
		file_lily_proto_rawDescData = protoimpl.X.CompressGZIP(file_lily_proto_rawDescData)
	})
	return file_lily_proto_rawDescData
}

var file_lily_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_lily_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_lily_proto_goTypes = []any{
	(Style)(0),                  // 0: palm.lily.v1.Style
	(TeXLiveTask_Format)(0),     // 1: palm.lily.v1.TeXLiveTask.Format
	(PandocTask_Format)(0),      // 2: palm.lily.v1.PandocTask.Format
	(*Book)(nil),                // 3: palm.lily.v1.Book
	(*Slideshow)(nil),           // 4: palm.lily.v1.Slideshow
	(*Article)(nil),             // 5: palm.lily.v1.Article
	(*Section)(nil),             // 6: palm.lily.v1.Section
	(*TeXLiveRequest)(nil),      // 7: palm.lily.v1.TeXLiveRequest
	(*TeXLiveTask)(nil),         // 8: palm.lily.v1.TeXLiveTask
	(*PandocTask)(nil),          // 9: palm.lily.v1.PandocTask
	(*Output)(nil),              // 10: palm.lily.v1.Output
	nil,                         // 11: palm.lily.v1.TeXLiveRequest.AttachmentsEntry
	nil,                         // 12: palm.lily.v1.TeXLiveTask.AttachmentsEntry
	(*durationpb.Duration)(nil), // 13: google.protobuf.Duration
	(*v2.Bucket)(nil),           // 14: palm.s3.v1.Bucket
	(*v2.File)(nil),             // 15: palm.s3.v1.File
}
var file_lily_proto_depIdxs = []int32{
	6,  // 0: palm.lily.v1.Section.items:type_name -> palm.lily.v1.Section
	0,  // 1: palm.lily.v1.TeXLiveRequest.style:type_name -> palm.lily.v1.Style
	1,  // 2: palm.lily.v1.TeXLiveRequest.format:type_name -> palm.lily.v1.TeXLiveTask.Format
	13, // 3: palm.lily.v1.TeXLiveRequest.ttl:type_name -> google.protobuf.Duration
	3,  // 4: palm.lily.v1.TeXLiveRequest.book:type_name -> palm.lily.v1.Book
	5,  // 5: palm.lily.v1.TeXLiveRequest.article:type_name -> palm.lily.v1.Article
	4,  // 6: palm.lily.v1.TeXLiveRequest.slideshow:type_name -> palm.lily.v1.Slideshow
	11, // 7: palm.lily.v1.TeXLiveRequest.attachments:type_name -> palm.lily.v1.TeXLiveRequest.AttachmentsEntry
	12, // 8: palm.lily.v1.TeXLiveTask.attachments:type_name -> palm.lily.v1.TeXLiveTask.AttachmentsEntry
	10, // 9: palm.lily.v1.TeXLiveTask.output:type_name -> palm.lily.v1.Output
	10, // 10: palm.lily.v1.PandocTask.output:type_name -> palm.lily.v1.Output
	14, // 11: palm.lily.v1.Output.bucket:type_name -> palm.s3.v1.Bucket
	7,  // 12: palm.lily.v1.TeXLive.ToPdf:input_type -> palm.lily.v1.TeXLiveRequest
	15, // 13: palm.lily.v1.TeXLive.ToPdf:output_type -> palm.s3.v1.File
	13, // [13:14] is the sub-list for method output_type
	12, // [12:13] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_lily_proto_init() }
func file_lily_proto_init() {
	if File_lily_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lily_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Book); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lily_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Slideshow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lily_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Article); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lily_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Section); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lily_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*TeXLiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lily_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*TeXLiveTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lily_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PandocTask); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lily_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Output); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_lily_proto_msgTypes[4].OneofWrappers = []any{
		(*TeXLiveRequest_Book)(nil),
		(*TeXLiveRequest_Article)(nil),
		(*TeXLiveRequest_Slideshow)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lily_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lily_proto_goTypes,
		DependencyIndexes: file_lily_proto_depIdxs,
		EnumInfos:         file_lily_proto_enumTypes,
		MessageInfos:      file_lily_proto_msgTypes,
	}.Build()
	File_lily_proto = out.File
	file_lily_proto_rawDesc = nil
	file_lily_proto_goTypes = nil
	file_lily_proto_depIdxs = nil
}
